import{j as a}from"./atlas_BSujyM3STIIs7ogMAeFeS.js";import{c}from"./atlas_CamEFqmJHciALUfcRd9gd.js";const h=({size:u=16,color:e="currentColor",className:s=""})=>a.jsxs("svg",{width:u,height:u,viewBox:"0 0 24 24",fill:"none",stroke:e,strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round",className:s,children:[a.jsx("path",{d:"M2 12h20",stroke:e,strokeWidth:"1",opacity:"0.4"}),a.jsx("path",{d:"M2 8h20",stroke:e,strokeWidth:"0.6",opacity:"0.3"}),a.jsx("path",{d:"M2 16h20",stroke:e,strokeWidth:"0.6",opacity:"0.3"}),a.jsx("path",{d:"M12 2v20",stroke:e,strokeWidth:"1",opacity:"0.4"}),a.jsx("path",{d:"M8 2v20",stroke:e,strokeWidth:"0.6",opacity:"0.3"}),a.jsx("path",{d:"M16 2v20",stroke:e,strokeWidth:"0.6",opacity:"0.3"}),a.jsx("path",{d:"M6 6L18 18",stroke:e,strokeWidth:"0.8",opacity:"0.3"}),a.jsx("path",{d:"M6 18L18 6",stroke:e,strokeWidth:"0.8",opacity:"0.3"}),a.jsx("circle",{cx:"12",cy:"12",r:"2",fill:e,opacity:"0.7"}),a.jsx("text",{x:"20",y:"12",fill:e,fontSize:"8",opacity:"0.6",dy:"3",children:"X"}),a.jsx("text",{x:"12",y:"4",fill:e,fontSize:"8",opacity:"0.6",textAnchor:"middle",children:"Y"}),a.jsx("text",{x:"17",y:"7",fill:e,fontSize:"8",opacity:"0.6",children:"Z"})]});class f{static getTravelCost(e,s=0){return c.calculateTravelCost(e,s)}static canAffordTravel(e,s=0){return!0}static executeTravel(e,s=0){const i=this.getTravelCost(e,s),t=c.getResources(),n=c.getUpgrade(),r={antimatter:Math.floor(i.antimatter/n.efficiency),element115:Math.floor(i.element115/n.efficiency),deuterium:Math.floor(i.deuterium/n.efficiency)},m=[t.antimatter/r.antimatter,t.element115/r.element115,t.deuterium/r.deuterium],o=Math.min(...m);return o>=1?(c.consumeResources(r),"success"):o>=.5?(c.consumeResources({antimatter:Math.min(t.antimatter,r.antimatter),element115:Math.min(t.element115,r.element115),deuterium:Math.min(t.deuterium,r.deuterium)}),"partial"):"emergency"}static previewTravelCost(e,s=0){const i=this.getTravelCost(e,s),t=c.getUpgrade(),n={antimatter:Math.floor(i.antimatter/t.efficiency),element115:Math.floor(i.element115/t.efficiency),deuterium:Math.floor(i.deuterium/t.efficiency)};return`${n.antimatter}AM | ${n.element115}E115 | ${n.deuterium}D`}static getActualTravelCost(e,s=0){const i=this.getTravelCost(e,s),t=c.getResources(),n=c.getUpgrade(),r={antimatter:Math.floor(i.antimatter/n.efficiency),element115:Math.floor(i.element115/n.efficiency),deuterium:Math.floor(i.deuterium/n.efficiency)},m=[t.antimatter/r.antimatter,t.element115/r.element115,t.deuterium/r.deuterium],o=Math.min(...m);return o>=1?r:o>=.5?{antimatter:Math.min(t.antimatter,r.antimatter),element115:Math.min(t.element115,r.element115),deuterium:Math.min(t.deuterium,r.deuterium)}:{antimatter:0,element115:0,deuterium:0}}static getTravelEfficiency(){return c.getUpgrade().efficiency}static getMaxTravelRange(){return c.getUpgrade().range}}export{h as C,f as S};
