import{S as j}from"./atlas_CvjINy7MGUzH_F6zr4ome.js";import{G as D,q as O,V as f,r as H,F as L,C as I,M as Z,e as _,s as J,T as K,p as Q,t as W,i as q}from"./atlas_CePo6YWp7kQwmK1a1tWI3.js";class ${featuresGroup;crystals=[];cracks=[];iceCaps=[];planetRadius;constructor(s,t={}){this.featuresGroup=new D,this.planetRadius=s;const a=t.seed||Math.floor(Math.random()*1e6),n=new j(a);t.crystals&&t.crystals.length>0&&this.generateCrystals(t.crystals,n),t.cracks&&t.cracks.length>0&&this.generateCracks(t.cracks),t.iceCaps&&t.iceCaps.length>0&&this.generateIceCaps(t.iceCaps,n)}generateCrystals(s,t){s.forEach(a=>{const n=a.position||[0,0],h=(a.width||.05)*this.planetRadius*.8,i=(a.length||.1)*this.planetRadius*.08,z=a.angle||0,c=a.color||[172/255,215/255,230/255,1],b=this.planetRadius*.015,l=Math.max(i,b),m=new O(h*2,l,h*1.5,4,2,4),u=m.attributes.position,e=new f;for(let r=0;r<u.count;r++){if(e.fromBufferAttribute(u,r),Math.abs(e.y)>l*.3){const F=Math.atan2(e.z,e.x),P=Math.sqrt(e.x*e.x+e.z*e.z),B=Math.round(F/(Math.PI/3))*(Math.PI/3),X=t.uniform(.8,1.2),T=P*X;e.x=Math.cos(B)*T,e.z=Math.sin(B)*T,e.y+=t.uniform(-l*.1,l*.1)}u.setXYZ(r,e.x,e.y,e.z)}u.needsUpdate=!0,m.computeVertexNormals();const G=new H({color:new I(c[0],c[1],c[2]),transparent:!0,opacity:.8,metalness:0,roughness:.02,clearcoat:1,clearcoatRoughness:0,transmission:.7,ior:1.31,thickness:.5,emissive:new I(c[0],c[1],c[2]),emissiveIntensity:.02,flatShading:!1,side:L}),M=new Z(m,G);let y=Math.min(1,Math.max(-1,n[1]));const w=Math.pow(Math.abs(y),.3),g=Math.sign(y)*w,S=t.uniform(-.3,.3)*(1-Math.abs(g)),V=Math.min(1,Math.max(-1,g+S)),d=Math.acos(Math.abs(V)),x=Math.atan2(n[0],.001)+z,k=this.planetRadius*t.uniform(1.0005,1.001),Y=k*Math.sin(d)*Math.cos(x),A=k*V,v=k*Math.sin(d)*Math.sin(x);M.position.set(Y,A,v);const C=M.position.clone().normalize(),p=new f,R=new f;Math.abs(C.x)<.9?p.set(1,0,0):p.set(0,1,0),p.crossVectors(p,C).normalize(),R.crossVectors(C,p).normalize();const o=new _;o.makeBasis(p,C,R),M.rotation.setFromRotationMatrix(o),M.rotateY(t.uniform(0,Math.PI*2));const E=t.uniform(.8,1.2);M.scale.set(E,E,E),this.crystals.push(M),this.featuresGroup.add(M)})}generateCracks(s){const t=new j(42);s.forEach(a=>{const n=a.angle||0,h=(a.length||1)*this.planetRadius*2,i=a.color||[80/255,80/255,80/255,.4],z=(a.width||1)*5e-4*this.planetRadius,c=t.uniform(.6,1),b=t.uniform(0,1)>.5?1:-1,l=Math.acos(c*b),m=[],u=20;for(let w=0;w<=u;w++){const g=w/u,S=Math.sin(g*Math.PI)*.1,d=n+(g-.5)*h/(this.planetRadius*Math.sin(Math.abs(l)))+S,x=this.planetRadius*1.002*Math.sin(Math.abs(l))*Math.cos(d),k=this.planetRadius*1.002*Math.cos(Math.abs(l))*b,Y=this.planetRadius*1.002*Math.sin(Math.abs(l))*Math.sin(d);m.push(new f(x,k,Y))}const e=new J(m),G=new K(e,u*2,z,8,!1),M=new Q({color:new I(i[0],i[1],i[2]),transparent:!0,opacity:i[3]||.4,emissive:new I(0,0,0),shininess:5}),y=new Z(G,M);this.cracks.push(y),this.featuresGroup.add(y)})}generateIceCaps(s,t){s.forEach(a=>{const n=a.position||[0,0],h=(a.radius||.3)*this.planetRadius,i=a.color||[.678,.847,1,.8],z=Math.atan2(n[1],n[0]),c=Math.acos(Math.min(1,Math.max(-1,Math.sqrt(n[0]**2+n[1]**2)))),b=this.planetRadius*1.002*Math.sin(c)*Math.cos(z),l=this.planetRadius*1.002*Math.cos(c),m=this.planetRadius*1.002*Math.sin(c)*Math.sin(z),u=new f(b,l,m),e=u.clone().normalize(),G=new D,M=Math.floor(t.uniform(8,20));for(let y=0;y<M;y++){const w=t.uniform(0,Math.PI*2),g=t.uniform(0,h*.8),S=Math.cos(w)*g,V=Math.sin(w)*g,d=new f,x=new f;Math.abs(e.y)<.99?d.crossVectors(e,new f(0,1,0)).normalize():d.crossVectors(e,new f(1,0,0)).normalize(),x.crossVectors(e,d).normalize();const A=u.clone().addScaledVector(d,S).addScaledVector(x,V).normalize().multiplyScalar(this.planetRadius*t.uniform(1.002,1.008)),v=t.uniform(h*.05,h*.15),C=t.uniform(v*.4,v*4),p=new W(v,C,6,1,!1),R=p.attributes.position,o=new f;for(let P=0;P<R.count;P++)if(o.fromBufferAttribute(R,P),o.y>.1&&o.y<C*.9){const B=Math.atan2(o.z,o.x),X=Math.sqrt(o.x*o.x+o.z*o.z),T=Math.round(B/(Math.PI/3))*(Math.PI/3),U=X*1.1;o.x=Math.cos(T)*U,o.z=Math.sin(T)*U,R.setXYZ(P,o.x,o.y,o.z)}R.needsUpdate=!0,p.computeVertexNormals();const E=new H({color:new I(i[0],i[1],i[2]),transparent:!0,opacity:.85,metalness:0,roughness:.05,clearcoat:1,clearcoatRoughness:0,transmission:.6,ior:1.31,thickness:.8,emissive:new I(i[0],i[1],i[2]),emissiveIntensity:.03,flatShading:!0,side:L}),r=new Z(p,E);r.position.copy(A),r.lookAt(0,0,0),r.rotateX(Math.PI/2),r.rotateZ(t.uniform(0,Math.PI*2));const F=t.uniform(.7,1.3);r.scale.set(F,F,F),G.add(r),this.iceCaps.push(r)}this.featuresGroup.add(G)})}addToScene(s,t){t&&this.featuresGroup.position.copy(t),s.add(this.featuresGroup)}update(){}getObject3D(){return this.featuresGroup}dispose(){this.crystals.forEach(s=>{s.geometry.dispose(),s.material instanceof q&&s.material.dispose()}),this.cracks.forEach(s=>{s.geometry.dispose(),s.material instanceof q&&s.material.dispose()}),this.iceCaps.forEach(s=>{s.geometry.dispose(),s.material instanceof q&&s.material.dispose()}),this.crystals=[],this.cracks=[],this.iceCaps=[],this.featuresGroup.clear()}}function et(N,s,t){const a=s.crystals,n=s.cracks,h=s.ice_caps;if(!a&&!n&&!h)return null;const i=t||Math.floor(Math.random()*1e6);return new $(N,{crystals:a||[],cracks:n||[],iceCaps:h||[],seed:i+9e3})}export{et as c};
