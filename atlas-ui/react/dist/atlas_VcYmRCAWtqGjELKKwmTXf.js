import{c as ce,R as ae}from"./atlas_DGu1Bn8a-_hPqzHJNbMPS.js";import{c as O,A as oe,a as u,b as q,d as fe,e as ne}from"./atlas_Bof6YutnM4ClbFbzfQJgi.js";import{c as b,L as z,a as ie}from"./atlas_DFrKiVLjTfSnxKHABIdtH.js";import{c as W}from"./atlas_B3G0nVKGb_Sh6GV5hTOK2.js";import{c as B,T as de}from"./atlas_BP88pe5XqumVTJRbGss0P.js";import{c as N,R as le}from"./atlas_CjMT7HFEzK_5wL0GL1-xJ.js";import{c as me,A as pe}from"./atlas_C0O52P_24VXpcB_jxaut3.js";import{P as he,c as ue}from"./atlas_CuF6K_2ac95P6Kfwbp2MW.js";import{g as w,c as _e,P as ye}from"./atlas_prc6n6EHR4PkDrnMI7rY7.js";import{P as ge}from"./atlas_CrejlvXhvk3PSYl8Y0-Ux.js";import{c as U}from"./atlas_Die4l310w4GgcJXICEaJA.js";import{c as V}from"./atlas_CPNmSB9c9geI7VeGmv_50.js";import{c as Ee}from"./atlas_D_Z9kLXe5Z62y8ILqZjmU.js";import{c as Se}from"./atlas_teHZozzhREL_uDu_SBLq9.js";import{c as be}from"./atlas_D2Djs8eMrcVnZYhvF1lDa.js";import{c as Ie}from"./atlas_BYOYeRvt0jagoND9k_LBo.js";import{c as j,D as Pe}from"./atlas_Dv5zcG4payEULtLCH-nhK.js";import{E as Fe,c as Y}from"./atlas_Dawph0Bnegclv3hz5-BtN.js";import{c as H,E as xe}from"./atlas_CnAcZgf1CHeI1iqhcdnx2.js";import{c as J,A as we}from"./atlas_QbmlgLogrDOvmoXLXCLB9.js";import{c as Te,S as Le}from"./atlas_uGj1i5O1wf59U_QSsp285.js";import{P as k}from"./atlas_tP7yZQkbMnkzoIESUHRlq.js";import{F as K}from"./atlas_U0jXmw9vb-xu76vvq6v7k.js";import{c as Ce,O as Ae}from"./atlas_yV9MyYA16YUoltUA6sN5N.js";import{c as Q,F as Me}from"./atlas_DvVsskN_HTLCiYbEOGrx4.js";import{c as X,A as $e}from"./atlas_2Gh0K-9V9qawBZ_7scjqe.js";import{c as ke}from"./atlas_DSP8IIHhBtRSPBimYXGVq.js";import{c as Z,L as ve}from"./atlas_CO59PBMGAYPmUebJVKw8u.js";import{c as R,M as Ge}from"./atlas_G11jOtiqtWEZPTfFz1MEv.js";import{c as Oe,F as qe}from"./atlas_rEY9R_zuXKeDTzM93yxTI.js";import{c as ze,V as We}from"./atlas_CwTJh-CNmZ59NuN_KkStO.js";import{g as D,C as Be}from"./atlas_DfFO9DeAqJfHmKzNHJUiw.js";const Ne=!1;class I{static instance;creators=new Map;effects=new Map;nextId=1;layerSystem;constructor(){this.registerDefaultEffects()}static getInstance(){return I.instance||(I.instance=new I),I.instance}registerDefaultEffects(){this.registerEffect("atmosphere_glow",{create:(e,t)=>new oe(t,e),fromPythonData:(e,t)=>O(t,e.atmosphere||{})}),this.registerEffect("atmosphere_clouds",{create:(e,t)=>new q(t,e),fromPythonData:(e,t)=>u(t,e.surface_elements||{})}),this.registerEffect("atmospheric_streaks",{create:(e,t)=>new we(t,e),fromPythonData:(e,t)=>J(t,e.atmosphere||{})}),this.registerEffect("atmosphere",{create:(e,t)=>new ne(t,e),fromPythonData:(e,t)=>fe(t,e)}),this.registerEffect("ring_system",{create:(e,t)=>new ae(t,e),fromPythonData:(e,t)=>ce(e.rings||{},t)}),this.registerEffect("fragmentation",{create:(e,t)=>new K(t,e),fromPythonData:(e,t)=>new K(t,{color:e.surface?.fragment_color||[.3,.3,.3],fragmentCount:e.surface?.fragment_count||20})}),this.registerEffect("land_masses",{create:(e,t)=>new z(t,e),fromPythonData:(e,t)=>b(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("ocean_waves",{create:(e,t)=>new Ae(e),fromPythonData:(e,t)=>Ce(e)}),this.registerEffect("aquifer_water",{create:(e,t,c)=>new $e(c,e),fromPythonData:(e,t,c)=>X(c,e)}),this.registerEffect("fluid_layers",{create:(e,t)=>new Me(t,e),fromPythonData:(e,t)=>Q(t,e)}),this.registerEffect("lava_flows",{create:(e,t)=>new ve(t,e),fromPythonData:(e,t)=>Z(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("molten_lava",{create:(e,t,c)=>new Ge(c,e),fromPythonData:(e,t,c)=>R(c,e,e.seeds?.planet_seed)}),this.registerEffect("fire_eruption",{create:(e,t)=>new qe(t,e),fromPythonData:(e,t,c)=>Oe(e,t)}),this.registerEffect("crystal_formations",{create:(e,t)=>(console.warn("Crystal formations effect not implemented yet"),null)}),this.registerEffect("star_field",{create:(e,t)=>new Le(t,e),fromPythonData:(e,t)=>Te(t,e.seeds?.planet_seed||e.planet_seed)}),this.registerEffect("tundra_snowflakes",{create:(e,t)=>new de(t,e),fromPythonData:(e,t)=>B(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("river_lines",{create:(e,t)=>new le(t,e),fromPythonData:(e,t)=>N(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("anomaly_phase_matter",{create:(e,t)=>new pe(t,e),fromPythonData:(e,t)=>me(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("pulsating_cube",{create:(e,t)=>new he(t,e),fromPythonData:(e,t)=>{const c=w(e);return ue(t,e.surface_elements||{},e.seeds?.planet_seed,c,e)}}),this.registerEffect("planet_rays",{create:(e,t)=>new ye(t,e),fromPythonData:(e,t)=>_e(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("visual_debug_3d",{create:(e,t)=>new We(t,e),fromPythonData:(e,t)=>ze(e,t)}),this.registerEffect("diamond_cracks",{create:(e,t)=>new Pe({...e,radius:t}),fromPythonData:(e,t)=>j(e,t,e.seeds?.shape_seed||e.seeds?.planet_seed)}),this.registerEffect("exotic_geometric_shapes",{create:(e,t)=>new Fe(t,e),fromPythonData:(e,t)=>{const c=w(e);return Y(t,e.surface_elements||{},e.seeds?.planet_seed,c)}}),this.registerEffect("exotic_doodles",{create:(e,t)=>new xe(t,e),fromPythonData:(e,t)=>H(t,e.surface_elements||{},e.seeds?.planet_seed)})}registerEffect(e,t){this.creators.set(e,t)}createEffect(e,t,c,f,h=0){const o=this.creators.get(e);if(!o)return console.warn(`Effect type '${e}' not registered`),null;try{const d=o.create(t,c,this.layerSystem);if(!d)return null;const _={id:`effect_${this.nextId++}`,type:e,effect:d,priority:h,enabled:!0};return this.effects.set(_.id,_),_}catch(d){return console.error(`Error creating effect '${e}':`,d),null}}createEffectFromPythonData(e,t,c,f,h=0){const o=this.creators.get(e);if(!o||!o.fromPythonData)return this.createEffect(e,t,c,f,h);try{const d=o.fromPythonData(t,c,this.layerSystem);if(!d)return null;const _={id:`effect_${this.nextId++}`,type:e,effect:d,priority:h,enabled:!0};return this.effects.set(_.id,_),_}catch(d){return console.error(`Error creating effect '${e}' from Python data:`,d),null}}createEffectsFromList(e,t,c){const f=[],h=e.sort((o,d)=>(o.priority||0)-(d.priority||0));for(const o of h){const d=this.createEffect(o.type,o.params,t,c,o.priority);d&&(d.enabled=o.enabled!==!1,f.push(d))}return f}createEffectsFromPythonPlanetData(e,t,c,f,h){const o=[];try{const d=w(e);if(h?this.layerSystem=h:this.layerSystem=new ge(c,d),e.surface_elements){const r=e.surface_elements;if(r.effects_3d&&Array.isArray(r.effects_3d))for(const m of r.effects_3d){if(m.type==="atmospheric_streaks"){const E=J(t,m.params,e.seeds?.shape_seed+3e3),S={id:`effect_${this.nextId++}`,type:"atmospheric_streaks",effect:E,priority:m.priority||0,enabled:!0,name:"Atmospheric Streaks"};this.effects.set(S.id,S),o.push(S),E.addToScene(f,c.position);continue}const y=this.createEffect(m.type,m.params,t,c,m.priority||0);y?(y.name=m.type.replace(/_/g," ").replace(/\b\w/g,E=>E.toUpperCase()),o.push(y),y.effect.apply&&y.effect.apply(c),y.effect.addToScene&&y.effect.addToScene(f,c.position)):console.error("❌ FALLO AL CREAR EFECTO:",m.type)}switch(r.type.toLowerCase()){case"gas_giant":if(this.layerSystem){const s=U(this.layerSystem,{...r,base_color:d,turbulence:e.turbulence||r.turbulence},e.seeds?.shape_seed||e.seeds?.planet_seed||e.seeds?.planet_seed),a=V(this.layerSystem,{...r,base_color:d,storm_intensity:e.storm_intensity||r.storm_intensity},(e.seeds?.shape_seed||e.seeds?.planet_seed)+1e3),l={id:`effect_${this.nextId++}`,type:"cloud_bands_layer",effect:s,priority:0,enabled:!0};this.effects.set(l.id,l),o.push(l);const i={id:`effect_${this.nextId++}`,type:"cloud_gyros_layer",effect:a,priority:1,enabled:!0};if(this.effects.set(i.id,i),o.push(i),r.polar_hexagon&&r.polar_hexagon.enabled){const n=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,p=new k({planetColor:d,hexagonData:r.polar_hexagon,planetRadius:t,currentTime:n}),g={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:p,priority:10,enabled:!0};this.effects.set(g.id,g),o.push(g),f&&p.addToScene(f)}}else console.error("❌ PlanetLayerSystem not initialized!");break;case"frozen_gas_giant":if(this.layerSystem){const s=U(this.layerSystem,{...r,base_color:d,turbulence:e.turbulence||r.turbulence,icy_tint:!0},e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"cloud_bands_layer",effect:s,priority:0,enabled:!0};if(this.effects.set(a.id,a),o.push(a),r.polar_hexagon&&r.polar_hexagon.enabled){const l=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,i=new k({planetColor:d,hexagonData:r.polar_hexagon,planetRadius:t,currentTime:l}),n={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:i,priority:10,enabled:!0};this.effects.set(n.id,n),o.push(n),f&&i.addToScene(f)}}break;case"aquifer":const m=X(this.layerSystem,e);if(m){const s={id:`effect_${this.nextId++}`,type:"aquifer_water",effect:m,priority:2,enabled:!0,name:"Aquifer Water Surface"};this.effects.set(s.id,s),o.push(s)}const y=ke(this.layerSystem,e);if(y){const s={id:`effect_${this.nextId++}`,type:"ocean_currents",effect:y,priority:1,enabled:!0,name:"Ocean Currents"};this.effects.set(s.id,s),o.push(s)}if(r.clouds&&r.clouds.length>0){const s=u(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),s.addToScene(f,c.position)}if(r.land_masses&&r.land_masses.length>0){const s=b(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+7e3);if(s){const a={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:3,enabled:!0,name:"Emergent Land Masses"};this.effects.set(a.id,a),o.push(a),s.addToScene(f,c.position)}}if(r.atmosphere_clouds&&r.atmosphere_clouds.length>0){const s=u(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+8e3);if(s){const a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:4,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),s.addToScene(f,c.position)}}break;case"nebulous":if(this.layerSystem){const s=V(this.layerSystem,{...r,base_color:d,storm_intensity:r.nebula_density||.6,color_variance:r.color_variance||.2},(e.seeds?.shape_seed||e.seeds?.planet_seed)+2e3),a={id:`effect_${this.nextId++}`,type:"cloud_gyros_layer",effect:s,priority:0,enabled:!0};if(this.effects.set(a.id,a),o.push(a),r.polar_hexagon&&r.polar_hexagon.enabled){const l=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,i=new k({planetColor:d,hexagonData:r.polar_hexagon,planetRadius:t,currentTime:l}),n={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:i,priority:10,enabled:!0};this.effects.set(n.id,n),o.push(n),f&&i.addToScene(f)}}break;case"metallic":case"metallic_3d":if(this.layerSystem){const s=be(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"metallic_surface_layer",effect:s,priority:0,enabled:!0};this.effects.set(a.id,a),o.push(a)}break;case"diamond":if(this.layerSystem){const s=Ie(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"diamond_surface_layer",effect:s,priority:0,enabled:!0};this.effects.set(a.id,a),o.push(a);const l=j(e,t,e.seeds?.shape_seed||e.seeds?.planet_seed),i={id:`effect_${this.nextId++}`,type:"diamond_cracks",effect:l,priority:1,enabled:!0};if(this.effects.set(i.id,i),o.push(i),l.addToScene(f,c.position),r.clouds&&r.clouds.length>0){const n=u(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),p={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:n,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(p.id,p),o.push(p),n.addToScene(f,c.position)}}break;case"rocky":if(this.layerSystem){const s=Ee(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"rocky_terrain_layer",effect:s,priority:0,enabled:!0};if(this.effects.set(a.id,a),o.push(a),r.clouds&&r.clouds.length>0){const l=u(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:l,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(i.id,i),o.push(i),l.addToScene(f,c.position)}}break;case"icy":if(this.layerSystem){const s=Se(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"icy_terrain_layer",effect:s,priority:0,enabled:!0};this.effects.set(a.id,a),o.push(a);const l=ie(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+8e3);if(l){const n={id:`effect_${this.nextId++}`,type:"transparent_land_masses",effect:l,priority:1,enabled:!0,name:"Ice Formations"};this.effects.set(n.id,n),o.push(n),l.addToScene(f,c.position)}else console.warn("❄️ Failed to create transparent LandMasses for Icy planet");if(r.clouds&&r.clouds.length>0){const n=u(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),p={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:n,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(p.id,p),o.push(p),n.addToScene(f,c.position)}const i=W(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+9e3);if(i){const n={id:`effect_${this.nextId++}`,type:"icy_features",effect:i,priority:2,enabled:!0,name:"Ice Crystals & Features"};this.effects.set(n.id,n),o.push(n),i.addToScene(f,c.position)}}break;case"oceanic":const E=Q(t,e);if(E){const s={id:`effect_${this.nextId++}`,type:"fluid_layers",effect:E,priority:3,enabled:!0,name:"Fluid Ocean Layers"};this.effects.set(s.id,s),o.push(s),E.addToScene(f,c.position)}if(r.green_patches&&r.green_patches.length>0){const s=b(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(s){const a={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:5,enabled:!0,name:"Land Masses (Islands)"};this.effects.set(a.id,a),o.push(a),s.addToScene(f,c.position)}}if(r.clouds&&r.clouds.length>0){const s=u(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),s.addToScene(f,c.position)}break;case"tundra":if(r.green_patches&&r.green_patches.length>0){const s=b(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(s){const a={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:5,enabled:!0,name:"Tundra Terrain"};this.effects.set(a.id,a),o.push(a),s.addToScene(f,c.position)}}const S=W(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+9e3);if(S){const s={id:`effect_${this.nextId++}`,type:"icy_features",effect:S,priority:6,enabled:!0,name:"Snow Patches & Ice"};this.effects.set(s.id,s),o.push(s),S.addToScene(f,c.position)}if(r.clouds&&r.clouds.length>0){const s=u(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),s.addToScene(f,c.position)}const T=B(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+15e3);if(T){const s={id:`effect_${this.nextId++}`,type:"tundra_snowflakes",effect:T,priority:20,enabled:!0,name:"Snowflakes"};this.effects.set(s.id,s),o.push(s),T.addToScene(f,c.position)}break;case"arid":let P;if(r.clouds&&r.clouds.length>0?P=u(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3):P=new q(t,{color:new Be(.9,.8,.7),cloudCount:20,size:4.2,opacity:.7,density:1.2,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,rotationSpeed:.004,movementAmplitude:.012,puffiness:1.3,timeSpeed:1}),P){const s={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:P,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(s.id,s),o.push(s),P.addToScene(f,c.position)}let F;if(r.green_patches&&r.green_patches.length>0){const s={...r,green_patches:r.green_patches.map(a=>({...a,color:[.5,0,0,a.color?.[3]||1]}))};F=b(t,s,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3)}else F=new z(t,{seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3,greenPatches:Array.from({length:25},(s,a)=>{const l=(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3+a*100,i=Math.sin(l)*.5+.5,n=Math.acos(1-2*(a+i)/25),p=2*Math.PI*(a*2.399%1);let g;return a<8?g=.25+i*.25:a<16?g=.15+i*.15:g=.08+i*.12,{position_3d:[Math.sin(n)*Math.cos(p),Math.sin(n)*Math.sin(p),Math.cos(n)],size:g,sides:12+Math.floor(i*16),color:[.5,0,0,.7+i*.2]}})});if(F){const s={id:`effect_${this.nextId++}`,type:"land_masses",effect:F,priority:5,enabled:!0,name:"Arid Terrain"};this.effects.set(s.id,s),o.push(s),F.addToScene(f,c.position)}const L=N(t,r,e.seeds?.shape_seed||e.seeds?.planet_seed);if(L){const s={id:`effect_${this.nextId++}`,type:"river_lines",effect:L,priority:6,enabled:!0,name:"Dried River Channels"};this.effects.set(s.id,s),o.push(s),L.addToScene(f,c.position)}break;case"molten_core":case"molten core":const v=R(this.layerSystem,e);if(v){const s={id:`effect_${this.nextId++}`,type:"molten_lava",effect:v,priority:2,enabled:!0,name:"Molten Lava Surface"};this.effects.set(s.id,s),o.push(s)}const C=Z(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+9e3);if(C){const s={id:`effect_${this.nextId++}`,type:"lava_flows",effect:C,priority:4,enabled:!0,name:"Lava Flows & Fire Whips"};this.effects.set(s.id,s),o.push(s),C.addToScene(f,c.position)}const A=this.createEffectFromPythonData("fire_eruption",e,t,c)?.effect;if(A){const s={id:`effect_${this.nextId++}`,type:"fire_eruption",effect:A,priority:15,enabled:!0,name:"Fire Eruptions"};this.effects.set(s.id,s),o.push(s),A.addToScene(f,c.position)}if(r.green_patches&&r.green_patches.length>0){const s={...r,green_patches:r.green_patches.map(l=>({...l,color:[1,.55,0,l.color?.[3]||.9]}))},a=b(t,s,(e.seeds?.planet_seed||e.seeds?.shape_seed)+1e4);if(a){const l={id:`effect_${this.nextId++}`,type:"land_masses",effect:a,priority:3,enabled:!0,name:"Incandescent Land Masses"};this.effects.set(l.id,l),o.push(l),a.addToScene(f,c.position)}}if(r.clouds&&r.clouds.length>0){const s=u(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Molten Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),s.addToScene(f,c.position)}break;case"exotic":if(r.clouds&&r.clouds.length>0){const s=u(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Exotic Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),s.addToScene(f,c.position)}const M=Y(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3,d);if(M){const s={id:`effect_${this.nextId++}`,type:"exotic_geometric_shapes",effect:M,priority:10,enabled:!0,name:"Exotic Geometric Shapes"};this.effects.set(s.id,s),o.push(s),M.addToScene(f,c.position)}const $=H(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3,e);if($){const s={id:`effect_${this.nextId++}`,type:"exotic_doodles",effect:$,priority:12,enabled:!0,name:"Exotic Doodles"};this.effects.set(s.id,s),o.push(s),$.addToScene(f,c.position)}break;case"anomaly":const G=["anomaly_phase_matter","pulsating_cube","planet_rays"],te=e.seeds?.planet_seed||Math.floor(Math.random()*1e6),se=G.length;for(let s=0;s<se;s++){const a=G[s],l=te+s*1e4,i=this.createEffectFromPythonData(a,{...e,seeds:{...e.seeds,planet_seed:l}},t,c,10+s);i&&(i.name=a.replace(/_/g," ").replace(/\b\w/g,n=>n.toUpperCase()),o.push(i),i.effect.addToScene&&i.effect.addToScene(f,c.position))}if(e.atmosphere&&e.atmosphere.type!=="None"){const s=this.createEffectFromPythonData("atmosphere",e.atmosphere,t,c,5);s&&(o.push(s),s.effect.addToScene(f,c.position))}break;default:if(e.planet_info?.type?.toLowerCase()==="anomaly"){const a=["anomaly_phase_matter","pulsating_cube","planet_rays"],l=e.seeds?.planet_seed||Math.floor(Math.random()*1e6),i=a.length;for(let n=0;n<i;n++){const p=a[n],g=l+n*1e4,x=this.createEffectFromPythonData(p,{...e,seeds:{...e.seeds,planet_seed:g}},t,c,10+n);x&&(x.name=p.replace(/_/g," ").replace(/\b\w/g,re=>re.toUpperCase()),o.push(x),x.effect.addToScene&&x.effect.addToScene(f,c.position))}if(e.atmosphere&&e.atmosphere.type!=="None"){const n=this.createEffectFromPythonData("atmosphere",e.atmosphere,t,c,5);n&&(o.push(n),n.effect.addToScene(f,c.position))}}else if(c.material instanceof D){const s=w(e);c.material.color.copy(s)}break}}else if(c.material instanceof D){const r=w(e);c.material.color.copy(r)}const _=e.planet_info?.type?.toLowerCase()||e.surface_elements?.type?.toLowerCase(),ee=_==="anomaly"||e.surface_elements?.type==="anomaly";if(e.atmosphere&&!ee){if(e.atmosphere.streaks||["Gas Giant","Frozen Gas Giant"].includes(e.planet_info?.type)){const r=O(t,e.atmosphere||{},e.seeds?.shape_seed+2e3);if(r){const m={id:`effect_${this.nextId++}`,type:"atmosphere_glow",effect:r,priority:20,enabled:!0};this.effects.set(m.id,m),o.push(m),r.addToScene(f,c.position)}}if(e.atmosphere.type&&e.atmosphere.type!=="None"){const r={...e.atmosphere};_==="oceanic"&&(r.opacity=Math.min(r.opacity||.3,.15),r.width=Math.min(r.width||15,8));const m=this.createEffectFromPythonData("atmosphere",r,t,c,5);m&&(o.push(m),m.effect.addToScene(f,c.position))}}if(e.rings&&e.rings.has_rings||["Gas Giant","Frozen Gas Giant","Super Earth"].includes(e.planet_info?.type)){const r=this.createEffectFromPythonData("ring_system",e,t,c,1);r?(o.push(r),r.effect.addToScene(f,c.position)):console.warn("⚠️ Failed to create ring effect")}if(e.surface_elements?.has_fragmentation_zones){const r=this.createEffectFromPythonData("fragmentation",e,t,c,5);r&&(o.push(r),r.effect.addToScene(f,c.position))}this.layerSystem&&this.layerSystem.addToScene(f);try{const r=this.createEffectFromPythonData("star_field",e,t,c,-100);r&&r.effect&&(r.effect.addToScene(f,c.position),o.push(r))}catch(r){console.warn("Could not create StarField:",r)}return o.forEach((r,m)=>{}),o.length===0&&console.warn("⚠️ NO EFFECTS WERE CREATED! Check the data structure and conditions."),o}catch(d){throw console.error("Error in EffectRegistry.createEffectsFromPythonPlanetData:",d),d}}getEffect(e){return this.effects.get(e)||null}getEffectsByType(e){return Array.from(this.effects.values()).filter(t=>t.type===e)}getAllEffects(){return Array.from(this.effects.values())}toggleEffect(e,t){const c=this.effects.get(e);if(c){c.enabled=t!==void 0?t:!c.enabled;const f=c.effect;if(f&&f.getObject3D){const h=f.getObject3D();h&&(h.visible=c.enabled)}if(this.layerSystem){const h=this.layerSystem.getLayerMeshes(),d={cloud_bands_layer:"cloudBands",cloud_gyros_layer:"cloudGyros",metallic_surface_layer:"metallicSurface",diamond_surface_layer:"diamondSurface",rocky_terrain_layer:"rockyTerrain",icy_terrain_layer:"icyTerrain",aquifer_water:"aquiferWater",ocean_currents:"oceanCurrents",molten_lava:"moltenLava"}[c.type];d&&h[d]&&(h[d].visible=c.enabled)}}else console.warn(`⚠️ Effect not found: ${e}`)}updateAllEffects(e,t){this.layerSystem&&this.layerSystem.update(e,t);for(const c of this.effects.values())if(c.enabled&&c.effect.update)try{c.effect.update(e,t)}catch(f){console.error(`Error updating effect ${c.type}:`,f)}}updateLightForAllEffects(e){this.layerSystem&&this.layerSystem.updateFromThreeLight(e);for(const t of this.effects.values())if(t.enabled&&t.effect.updateFromThreeLight)try{t.effect.updateFromThreeLight(e)}catch(c){console.error(`Error updating light for effect ${t.type}:`,c)}}removeEffect(e){const t=this.effects.get(e);t&&(t.effect.dispose&&t.effect.dispose(),this.effects.delete(e))}clearAllEffects(){this.layerSystem&&(this.layerSystem.dispose(),this.layerSystem=void 0);for(const e of this.effects.values())e.effect.dispose&&e.effect.dispose();this.effects.clear(),this.nextId=1}getStats(){const e=Array.from(this.effects.values());return{registeredTypes:this.creators.size,activeEffects:e.length,enabledEffects:e.filter(t=>t.enabled).length}}getAvailableEffectTypes(){return Array.from(this.creators.keys())}}const bt=I.getInstance();export{bt as e};
