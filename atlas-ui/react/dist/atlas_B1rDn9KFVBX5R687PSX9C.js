import{c as me,A as pe,S as he}from"./atlas_C7ZhNUnMOt3kEE8jtIwhb.js";import{c as _e,R as ue}from"./atlas_CO7GL9L1BdUO9FMG9rAYj.js";import{c as Y,A as ye,a as _,b as W,d as ge,e as Ee}from"./atlas_BJmqUwSAtSz2lbLaCoKmI.js";import{c as b,L as B,a as be}from"./atlas_D63QaUUYZpE4vUeJ7bo4u.js";import{c as J}from"./atlas_B4MEyRvOxBJwLUnYgKr1n.js";import{c as K,T as Se,a as Ie}from"./atlas_eKRtq8F4vYA6iEw3vBFPH.js";import{c as N,R as Pe}from"./atlas_CEos4XMk4RXliK8hZ9oGA.js";import{P as xe,c as Fe}from"./atlas_COZWZ4oXT0wzTF2e5w2AX.js";import{g as C,c as Te,P as we}from"./atlas_DO-x3oz2ReEvLfZD84S8N.js";import{P as Ce}from"./atlas_ByNbOLwKafkNr9cjA7v5P.js";import{c as Q}from"./atlas_Bp1Oo9G_fwMHkHpGOHnJp.js";import{c as X}from"./atlas_CB9ULGk1jNjwDW0mQFTwf.js";import{c as ve}from"./atlas_C52pAXyLJn7rcU2GZmALs.js";import{c as Le}from"./atlas_D6fGssyZN3Qb95tOXbR9O.js";import{c as Me}from"./atlas_WxM8evqJAcXmy16dpUREd.js";import{c as $e}from"./atlas_BcMt38Klv1Prhkv5c33oq.js";import{c as Z,D as Ae}from"./atlas_rz2QzX3WgfkQHYeOQmzPU.js";import{E as ke,c as R}from"./atlas_-XZnfC7JAvfTXIroV7-Dm.js";import{c as D,E as Ge}from"./atlas_CoyOhdIg_4gnUe2KnKyGv.js";import{c as ee,C as ze}from"./atlas_B19zRNgNwr82ZHA-ZdDlA.js";import{c as se,A as Oe}from"./atlas_ClOdcyVeXf6FLGqHa8Wlu.js";import{c as qe,S as We}from"./atlas_Ce-HennnlrJA01PB5zkH_.js";import{P as H}from"./atlas_7GpmCoG65Z4njhY3XJXyn.js";import{F as te}from"./atlas_DEfQyiR0pQu1_7DfvRZBQ.js";import{c as Be,O as Ne}from"./atlas_CPs_ZvffKcG9qH8A2HpV0.js";import{c as re,F as He}from"./atlas_DEm_ap4LMj3s2zyjslU4U.js";import{c as ce,A as Ue}from"./atlas_CxDaBwOZTIEffS9wbFsgc.js";import{c as je}from"./atlas_ChjUHKK6UE0CSdWpWP1Uo.js";import{c as ae,L as Ve}from"./atlas_CqAOVSEIpz2Gn6Zfo14V4.js";import{c as oe,M as Ye}from"./atlas_BAE4uplBISgd0YR1wI9B3.js";import{c as Je,F as Ke}from"./atlas_CPs7ZcITgy-K_M8qNShWN.js";import{c as Qe,C as Xe}from"./atlas_9uVp0Yr8le0zxCpp5_IJP.js";import{c as Ze,V as Re}from"./atlas_xVmazClZCaTx6Q71daoNz.js";import{j as fe,C as U}from"./atlas_BjkcO1_mNssSqp05cLhjd.js";const De=!1;class I{static instance;creators=new Map;effects=new Map;nextId=1;layerSystem;constructor(){this.registerDefaultEffects()}static getInstance(){return I.instance||(I.instance=new I),I.instance}registerDefaultEffects(){this.registerEffect("atmosphere_glow",{create:(e,s)=>new ye(s,e),fromPythonData:(e,s)=>Y(s,e.atmosphere||{})}),this.registerEffect("atmosphere_clouds",{create:(e,s)=>new W(s,e),fromPythonData:(e,s)=>_(s,e.surface_elements||{})}),this.registerEffect("atmospheric_streaks",{create:(e,s)=>new Oe(s,e),fromPythonData:(e,s)=>se(s,e.atmosphere||{})}),this.registerEffect("atmosphere",{create:(e,s)=>new Ee(s,e),fromPythonData:(e,s)=>ge(s,e)}),this.registerEffect("ring_system",{create:(e,s)=>new ue(s,e),fromPythonData:(e,s)=>_e(e.rings||{},s)}),this.registerEffect("fragmentation",{create:(e,s)=>new te(s,e),fromPythonData:(e,s)=>new te(s,{color:e.surface?.fragment_color||[.3,.3,.3],fragmentCount:e.surface?.fragment_count||20})}),this.registerEffect("land_masses",{create:(e,s)=>new B(s,e),fromPythonData:(e,s)=>b(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("ocean_waves",{create:(e,s)=>new Ne(e),fromPythonData:(e,s)=>Be(e)}),this.registerEffect("aquifer_water",{create:(e,s,c)=>new Ue(c,e),fromPythonData:(e,s,c)=>ce(c,e)}),this.registerEffect("fluid_layers",{create:(e,s)=>new He(s,e),fromPythonData:(e,s)=>re(s,e)}),this.registerEffect("lava_flows",{create:(e,s)=>new Ve(s,e),fromPythonData:(e,s)=>ae(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("molten_lava",{create:(e,s,c)=>new Ye(c,e),fromPythonData:(e,s,c)=>oe(c,e,e.seeds?.planet_seed)}),this.registerEffect("fire_eruption",{create:(e,s)=>new Ke(s,e),fromPythonData:(e,s,c)=>Je(e,s)}),this.registerEffect("carbon_trails",{create:(e,s)=>new Xe(s,e),fromPythonData:(e,s,c)=>Qe(e,s)}),this.registerEffect("crystal_formations",{create:(e,s)=>(console.warn("Crystal formations effect not implemented yet"),null)}),this.registerEffect("star_field",{create:(e,s)=>new We(s,e),fromPythonData:(e,s)=>qe(s,e.seeds?.planet_seed||e.planet_seed)}),this.registerEffect("tundra_snowflakes",{create:(e,s)=>new Se(s,e),fromPythonData:(e,s)=>K(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("river_lines",{create:(e,s)=>new Pe(s,e),fromPythonData:(e,s)=>N(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("anomaly_phase_matter",{create:(e,s)=>new pe(s,e),fromPythonData:(e,s)=>me(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("pulsating_cube",{create:(e,s)=>new xe(s,e),fromPythonData:(e,s)=>{const c=C(e);return Fe(s,e.surface_elements||{},e.seeds?.planet_seed,c,e)}}),this.registerEffect("planet_rays",{create:(e,s)=>new we(s,e),fromPythonData:(e,s)=>Te(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("visual_debug_3d",{create:(e,s)=>new Re(s,e),fromPythonData:(e,s)=>Ze(e,s)}),this.registerEffect("diamond_cracks",{create:(e,s)=>new Ae({...e,radius:s}),fromPythonData:(e,s)=>Z(e,s,e.seeds?.shape_seed||e.seeds?.planet_seed)}),this.registerEffect("exotic_geometric_shapes",{create:(e,s)=>new ke(s,e),fromPythonData:(e,s)=>{const c=C(e);return R(s,e.surface_elements||{},e.seeds?.planet_seed,c)}}),this.registerEffect("exotic_doodles",{create:(e,s)=>new Ge(s,e),fromPythonData:(e,s)=>D(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("cave_surface_holes",{create:(e,s,c)=>new ze(s,e),fromPythonData:(e,s,c)=>ee(s,e,e.seeds?.planet_seed)})}registerEffect(e,s){this.creators.set(e,s)}createEffect(e,s,c,f,h=0){const o=this.creators.get(e);if(!o)return console.warn(`Effect type '${e}' not registered`),null;try{const l=o.create(s,c,this.layerSystem);if(!l)return null;const u={id:`effect_${this.nextId++}`,type:e,effect:l,priority:h,enabled:!0};return this.effects.set(u.id,u),u}catch(l){return console.error(`Error creating effect '${e}':`,l),null}}createEffectFromPythonData(e,s,c,f,h=0){const o=this.creators.get(e);if(!o||!o.fromPythonData)return this.createEffect(e,s,c,f,h);try{const l=o.fromPythonData(s,c,this.layerSystem);if(!l)return null;const u={id:`effect_${this.nextId++}`,type:e,effect:l,priority:h,enabled:!0};return this.effects.set(u.id,u),u}catch(l){return console.error(`Error creating effect '${e}' from Python data:`,l),null}}createEffectsFromList(e,s,c){const f=[],h=e.sort((o,l)=>(o.priority||0)-(l.priority||0));for(const o of h){const l=this.createEffect(o.type,o.params,s,c,o.priority);l&&(l.enabled=o.enabled!==!1,f.push(l))}return f}createEffectsFromPythonPlanetData(e,s,c,f,h){const o=[];try{const l=C(e);if(h?this.layerSystem=h:this.layerSystem=new Ce(c,l),e.surface_elements){const r=e.surface_elements;if(r.effects_3d&&Array.isArray(r.effects_3d))for(const p of r.effects_3d){if(p.type==="atmospheric_streaks"){const E=se(s,p.params,e.seeds?.shape_seed+3e3),S={id:`effect_${this.nextId++}`,type:"atmospheric_streaks",effect:E,priority:p.priority||0,enabled:!0,name:"Atmospheric Streaks"};this.effects.set(S.id,S),o.push(S),E.addToScene(f,c.position);continue}const y=this.createEffect(p.type,p.params,s,c,p.priority||0);y?(y.name=p.type.replace(/_/g," ").replace(/\b\w/g,E=>E.toUpperCase()),o.push(y),y.effect.apply&&y.effect.apply(c),y.effect.addToScene&&y.effect.addToScene(f,c.position)):console.error("❌ FALLO AL CREAR EFECTO:",p.type)}switch(r.type.toLowerCase()){case"gas_giant":if(this.layerSystem){const t=Q(this.layerSystem,{...r,base_color:l,turbulence:e.turbulence||r.turbulence},e.seeds?.shape_seed||e.seeds?.planet_seed||e.seeds?.planet_seed),a=X(this.layerSystem,{...r,base_color:l,storm_intensity:e.storm_intensity||r.storm_intensity},(e.seeds?.shape_seed||e.seeds?.planet_seed)+1e3),n={id:`effect_${this.nextId++}`,type:"cloud_bands_layer",effect:t,priority:0,enabled:!0};this.effects.set(n.id,n),o.push(n);const d={id:`effect_${this.nextId++}`,type:"cloud_gyros_layer",effect:a,priority:1,enabled:!0};if(this.effects.set(d.id,d),o.push(d),r.polar_hexagon&&r.polar_hexagon.enabled){const i=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,m=new H({planetColor:l,hexagonData:r.polar_hexagon,planetRadius:s,currentTime:i}),g={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:m,priority:10,enabled:!0};this.effects.set(g.id,g),o.push(g),f&&m.addToScene(f)}}else console.error("❌ PlanetLayerSystem not initialized!");break;case"frozen_gas_giant":if(this.layerSystem){const t=Q(this.layerSystem,{...r,base_color:l,turbulence:e.turbulence||r.turbulence,icy_tint:!0},e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"cloud_bands_layer",effect:t,priority:0,enabled:!0};if(this.effects.set(a.id,a),o.push(a),r.polar_hexagon&&r.polar_hexagon.enabled){const n=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,d=new H({planetColor:l,hexagonData:r.polar_hexagon,planetRadius:s,currentTime:n}),i={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:d,priority:10,enabled:!0};this.effects.set(i.id,i),o.push(i),f&&d.addToScene(f)}}break;case"aquifer":const p=ce(this.layerSystem,e);if(p){const t={id:`effect_${this.nextId++}`,type:"aquifer_water",effect:p,priority:2,enabled:!0,name:"Aquifer Water Surface"};this.effects.set(t.id,t),o.push(t)}const y=je(this.layerSystem,e);if(y){const t={id:`effect_${this.nextId++}`,type:"ocean_currents",effect:y,priority:1,enabled:!0,name:"Ocean Currents"};this.effects.set(t.id,t),o.push(t)}if(r.clouds&&r.clouds.length>0){const t=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}if(r.land_masses&&r.land_masses.length>0){const t=b(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+7e3);if(t){const a={id:`effect_${this.nextId++}`,type:"land_masses",effect:t,priority:3,enabled:!0,name:"Emergent Land Masses"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}}if(r.atmosphere_clouds&&r.atmosphere_clouds.length>0){const t=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+8e3);if(t){const a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:4,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}}break;case"nebulous":if(this.layerSystem){const t=X(this.layerSystem,{...r,base_color:l,storm_intensity:r.nebula_density||.6,color_variance:r.color_variance||.2},(e.seeds?.shape_seed||e.seeds?.planet_seed)+2e3),a={id:`effect_${this.nextId++}`,type:"cloud_gyros_layer",effect:t,priority:0,enabled:!0};if(this.effects.set(a.id,a),o.push(a),r.polar_hexagon&&r.polar_hexagon.enabled){const n=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,d=new H({planetColor:l,hexagonData:r.polar_hexagon,planetRadius:s,currentTime:n}),i={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:d,priority:10,enabled:!0};this.effects.set(i.id,i),o.push(i),f&&d.addToScene(f)}}break;case"metallic":case"metallic_3d":if(this.layerSystem){const t=Me(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"metallic_surface_layer",effect:t,priority:0,enabled:!0};this.effects.set(a.id,a),o.push(a)}break;case"diamond":if(this.layerSystem){const t=$e(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"diamond_surface_layer",effect:t,priority:0,enabled:!0};this.effects.set(a.id,a),o.push(a);const n=Z(e,s,e.seeds?.shape_seed||e.seeds?.planet_seed),d={id:`effect_${this.nextId++}`,type:"diamond_cracks",effect:n,priority:1,enabled:!0};if(this.effects.set(d.id,d),o.push(d),n.addToScene(f,c.position),r.clouds&&r.clouds.length>0){const i=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),m={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:i,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(m.id,m),o.push(m),i.addToScene(f,c.position)}}break;case"rocky":if(this.layerSystem){const t=ve(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"rocky_terrain_layer",effect:t,priority:0,enabled:!0};if(this.effects.set(a.id,a),o.push(a),r.clouds&&r.clouds.length>0){const n=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),d={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:n,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(d.id,d),o.push(d),n.addToScene(f,c.position)}}break;case"icy":if(this.layerSystem){const t=Le(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"icy_terrain_layer",effect:t,priority:0,enabled:!0};this.effects.set(a.id,a),o.push(a);const n=be(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+8e3);if(n){const i={id:`effect_${this.nextId++}`,type:"transparent_land_masses",effect:n,priority:1,enabled:!0,name:"Ice Formations"};this.effects.set(i.id,i),o.push(i),n.addToScene(f,c.position)}else console.warn("❄️ Failed to create transparent LandMasses for Icy planet");if(r.clouds&&r.clouds.length>0){const i=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),m={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:i,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(m.id,m),o.push(m),i.addToScene(f,c.position)}const d=J(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+9e3);if(d){const i={id:`effect_${this.nextId++}`,type:"icy_features",effect:d,priority:2,enabled:!0,name:"Ice Crystals & Features"};this.effects.set(i.id,i),o.push(i),d.addToScene(f,c.position)}}break;case"oceanic":const E=re(s,e);if(E){const t={id:`effect_${this.nextId++}`,type:"fluid_layers",effect:E,priority:3,enabled:!0,name:"Fluid Ocean Layers"};this.effects.set(t.id,t),o.push(t),E.addToScene(f,c.position)}if(r.green_patches&&r.green_patches.length>0){const t=b(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(t){const a={id:`effect_${this.nextId++}`,type:"land_masses",effect:t,priority:5,enabled:!0,name:"Land Masses (Islands)"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}}if(r.clouds&&r.clouds.length>0){const t=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}break;case"tundra":if(r.green_patches&&r.green_patches.length>0){const t=b(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(t){const a={id:`effect_${this.nextId++}`,type:"land_masses",effect:t,priority:5,enabled:!0,name:"Tundra Terrain"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}}const S=J(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+9e3);if(S){const t={id:`effect_${this.nextId++}`,type:"icy_features",effect:S,priority:6,enabled:!0,name:"Snow Patches & Ice"};this.effects.set(t.id,t),o.push(t),S.addToScene(f,c.position)}if(r.clouds&&r.clouds.length>0){const t=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}const L=K(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+15e3);if(L){const t={id:`effect_${this.nextId++}`,type:"tundra_snowflakes",effect:L,priority:20,enabled:!0,name:"Snowflakes"};this.effects.set(t.id,t),o.push(t),L.addToScene(f,c.position)}break;case"arid":let P;if(r.clouds&&r.clouds.length>0?P=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3):P=new W(s,{color:new U(.9,.8,.7),cloudCount:20,size:4.2,opacity:.7,density:1.2,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,rotationSpeed:.004,movementAmplitude:.012,puffiness:1.3,timeSpeed:1}),P){const t={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:P,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(t.id,t),o.push(t),P.addToScene(f,c.position)}let x;if(r.green_patches&&r.green_patches.length>0){const t={...r,green_patches:r.green_patches.map(a=>({...a,color:[.5,0,0,a.color?.[3]||1]}))};x=b(s,t,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3)}else x=new B(s,{seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3,greenPatches:Array.from({length:25},(t,a)=>{const n=(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3+a*100,d=Math.sin(n)*.5+.5,i=Math.acos(1-2*(a+d)/25),m=2*Math.PI*(a*2.399%1);let g;return a<8?g=.25+d*.25:a<16?g=.15+d*.15:g=.08+d*.12,{position_3d:[Math.sin(i)*Math.cos(m),Math.sin(i)*Math.sin(m),Math.cos(i)],size:g,sides:12+Math.floor(d*16),color:[.5,0,0,.7+d*.2]}})});if(x){const t={id:`effect_${this.nextId++}`,type:"land_masses",effect:x,priority:5,enabled:!0,name:"Arid Terrain"};this.effects.set(t.id,t),o.push(t),x.addToScene(f,c.position)}const M=N(s,r,e.seeds?.shape_seed||e.seeds?.planet_seed);if(M){const t={id:`effect_${this.nextId++}`,type:"river_lines",effect:M,priority:6,enabled:!0,name:"Dried River Channels"};this.effects.set(t.id,t),o.push(t),M.addToScene(f,c.position)}break;case"molten_core":case"molten core":const j=oe(this.layerSystem,e);if(j){const t={id:`effect_${this.nextId++}`,type:"molten_lava",effect:j,priority:2,enabled:!0,name:"Molten Lava Surface"};this.effects.set(t.id,t),o.push(t)}const $=ae(s,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+9e3);if($){const t={id:`effect_${this.nextId++}`,type:"lava_flows",effect:$,priority:4,enabled:!0,name:"Lava Flows & Fire Whips"};this.effects.set(t.id,t),o.push(t),$.addToScene(f,c.position)}const A=this.createEffectFromPythonData("fire_eruption",e,s,c)?.effect;if(A){const t={id:`effect_${this.nextId++}`,type:"fire_eruption",effect:A,priority:15,enabled:!0,name:"Fire Eruptions"};this.effects.set(t.id,t),o.push(t),A.addToScene(f,c.position)}if(r.green_patches&&r.green_patches.length>0){const t={...r,green_patches:r.green_patches.map(n=>({...n,color:[1,.55,0,n.color?.[3]||.9]}))},a=b(s,t,(e.seeds?.planet_seed||e.seeds?.shape_seed)+1e4);if(a){const n={id:`effect_${this.nextId++}`,type:"land_masses",effect:a,priority:3,enabled:!0,name:"Incandescent Land Masses"};this.effects.set(n.id,n),o.push(n),a.addToScene(f,c.position)}}if(r.clouds&&r.clouds.length>0){const t=_(s,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:15,enabled:!0,name:"Molten Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}break;case"exotic":if(r.clouds&&r.clouds.length>0){const t=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:15,enabled:!0,name:"Exotic Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}const k=R(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3,l);if(k){const t={id:`effect_${this.nextId++}`,type:"exotic_geometric_shapes",effect:k,priority:10,enabled:!0,name:"Exotic Geometric Shapes"};this.effects.set(t.id,t),o.push(t),k.addToScene(f,c.position)}const G=D(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3,e);if(G){const t={id:`effect_${this.nextId++}`,type:"exotic_doodles",effect:G,priority:12,enabled:!0,name:"Exotic Doodles"};this.effects.set(t.id,t),o.push(t),G.addToScene(f,c.position)}break;case"cave":let F;if(r.atmosphere_clouds&&r.atmosphere_clouds.clouds&&r.atmosphere_clouds.clouds.length>0?F=_(s,r.atmosphere_clouds,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3):F=new W(s,{color:new U(.75,.75,.75),cloudCount:12,size:3.5,opacity:.65,density:.8,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,rotationSpeed:.003,movementAmplitude:.008,puffiness:1.1,timeSpeed:.8}),F){const t={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:F,priority:15,enabled:!0,name:"Cave Atmospheric Clouds"};this.effects.set(t.id,t),o.push(t),F.addToScene(f,c.position)}let T;if(r.green_patches&&r.green_patches.length>0)T=b(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3);else{const t=new he((e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3),a=[];for(let n=0;n<10;n++){const d=t.random()*2*Math.PI,i=Math.acos(t.random()*2-1);let m;n<3?m=.2+t.random()*.2:n<7?m=.12+t.random()*.13:m=.08+t.random()*.07,a.push({position_3d:[Math.sin(i)*Math.cos(d),Math.sin(i)*Math.sin(d),Math.cos(i)],size:m,sides:12+Math.floor(t.random()*8),color:[.29,.25,.21,.75+t.random()*.15]})}T=new B(s,{greenPatches:a,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3})}if(T){const t={id:`effect_${this.nextId++}`,type:"land_masses",effect:T,priority:5,enabled:!0,name:"Cave Land Masses"};this.effects.set(t.id,t),o.push(t),T.addToScene(f,c.position)}const v=ee(s,e,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(v){const t={id:`effect_${this.nextId++}`,type:"cave_surface_holes",effect:v,priority:10,enabled:!0,name:"Cave Surface Holes"};if(this.effects.set(t.id,t),o.push(t),v.addToScene(f,c.position),this.layerSystem){const a=this.layerSystem.baseMaterial?.uniforms?.baseColor?.value||new U(9127187);v.applyToPlanetSystem(this.layerSystem,a)}}const z=N(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+7e3);if(z){const t={id:`effect_${this.nextId++}`,type:"river_lines",effect:z,priority:8,enabled:!0,name:"Cave Drainage Channels"};this.effects.set(t.id,t),o.push(t),z.addToScene(f,c.position)}break;case"anomaly":const V=["anomaly_phase_matter","pulsating_cube","planet_rays"],ie=e.seeds?.planet_seed||Math.floor(Math.random()*1e6),de=V.length;for(let t=0;t<de;t++){const a=V[t],n=ie+t*1e4,d=this.createEffectFromPythonData(a,{...e,seeds:{...e.seeds,planet_seed:n}},s,c,10+t);d&&(d.name=a.replace(/_/g," ").replace(/\b\w/g,i=>i.toUpperCase()),o.push(d),d.effect.addToScene&&d.effect.addToScene(f,c.position))}if(e.atmosphere&&e.atmosphere.type!=="None"){const t=this.createEffectFromPythonData("atmosphere",e.atmosphere,s,c,5);t&&(o.push(t),t.effect.addToScene(f,c.position))}break;case"carbon":if(r.clouds&&r.clouds.length>0){const t=_(s,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:15,enabled:!0,name:"Carbon Atmospheric Dust"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}if(r.green_patches&&r.green_patches.length>0){const t={...r,green_patches:r.green_patches.map(n=>({...n,color:[.1,.07,.06,n.color?.[3]||.9],size:(n.size||.1)*1.5}))},a=b(s,t,(e.seeds?.planet_seed||e.seeds?.shape_seed)+6e3);if(a){const n={id:`effect_${this.nextId++}`,type:"land_masses",effect:a,priority:5,enabled:!0,name:"Carbon Formations"};this.effects.set(n.id,n),o.push(n),a.addToScene(f,c.position)}}const O=Ie(s,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+15e3);if(O){const t={id:`effect_${this.nextId++}`,type:"tundra_snowflakes",effect:O,priority:20,enabled:!0,name:"Carbon Dust Particles"};this.effects.set(t.id,t),o.push(t),O.addToScene(f,c.position)}const q=this.createEffectFromPythonData("carbon_trails",e,s,c);if(q){const t={id:`effect_${this.nextId++}`,type:"carbon_trails",effect:q.effect,priority:25,enabled:!0,name:"Carbon Gas Trails"};this.effects.set(t.id,t),o.push(t),q.effect.addToScene(f,c.position)}break;default:if(e.planet_info?.type?.toLowerCase()==="anomaly"){const a=["anomaly_phase_matter","pulsating_cube","planet_rays"],n=e.seeds?.planet_seed||Math.floor(Math.random()*1e6),d=a.length;for(let i=0;i<d;i++){const m=a[i],g=n+i*1e4,w=this.createEffectFromPythonData(m,{...e,seeds:{...e.seeds,planet_seed:g}},s,c,10+i);w&&(w.name=m.replace(/_/g," ").replace(/\b\w/g,le=>le.toUpperCase()),o.push(w),w.effect.addToScene&&w.effect.addToScene(f,c.position))}if(e.atmosphere&&e.atmosphere.type!=="None"){const i=this.createEffectFromPythonData("atmosphere",e.atmosphere,s,c,5);i&&(o.push(i),i.effect.addToScene(f,c.position))}}else if(c.material instanceof fe){const t=C(e);c.material.color.copy(t)}break}}else if(c.material instanceof fe){const r=C(e);c.material.color.copy(r)}const u=e.planet_info?.type?.toLowerCase()||e.surface_elements?.type?.toLowerCase(),ne=u==="anomaly"||e.surface_elements?.type==="anomaly";if(e.atmosphere&&!ne){if(e.atmosphere.streaks||["Gas Giant","Frozen Gas Giant"].includes(e.planet_info?.type)){const r=Y(s,e.atmosphere||{},e.seeds?.shape_seed+2e3);if(r){const p={id:`effect_${this.nextId++}`,type:"atmosphere_glow",effect:r,priority:20,enabled:!0};this.effects.set(p.id,p),o.push(p),r.addToScene(f,c.position)}}if(e.atmosphere.type&&e.atmosphere.type!=="None"){const r={...e.atmosphere};u==="oceanic"&&(r.opacity=Math.min(r.opacity||.3,.15),r.width=Math.min(r.width||15,8));const p=this.createEffectFromPythonData("atmosphere",r,s,c,5);p&&(o.push(p),p.effect.addToScene(f,c.position))}}if(e.rings&&e.rings.has_rings||["Gas Giant","Frozen Gas Giant","Super Earth"].includes(e.planet_info?.type)){const r=this.createEffectFromPythonData("ring_system",e,s,c,1);r?(o.push(r),r.effect.addToScene(f,c.position)):console.warn("⚠️ Failed to create ring effect")}if(e.surface_elements?.has_fragmentation_zones){const r=this.createEffectFromPythonData("fragmentation",e,s,c,5);r&&(o.push(r),r.effect.addToScene(f,c.position))}this.layerSystem&&this.layerSystem.addToScene(f);try{const r=this.createEffectFromPythonData("star_field",e,s,c,-100);r&&r.effect&&(r.effect.addToScene(f,c.position),o.push(r))}catch(r){console.warn("Could not create StarField:",r)}return o.forEach((r,p)=>{}),o.length===0&&console.warn("⚠️ NO EFFECTS WERE CREATED! Check the data structure and conditions."),o}catch(l){throw console.error("Error in EffectRegistry.createEffectsFromPythonPlanetData:",l),l}}getEffect(e){return this.effects.get(e)||null}getEffectsByType(e){return Array.from(this.effects.values()).filter(s=>s.type===e)}getAllEffects(){return Array.from(this.effects.values())}toggleEffect(e,s){const c=this.effects.get(e);if(c){c.enabled=s!==void 0?s:!c.enabled;const f=c.effect;if(f&&f.getObject3D){const h=f.getObject3D();h&&(h.visible=c.enabled)}if(this.layerSystem){const h=this.layerSystem.getLayerMeshes(),l={cloud_bands_layer:"cloudBands",cloud_gyros_layer:"cloudGyros",metallic_surface_layer:"metallicSurface",diamond_surface_layer:"diamondSurface",rocky_terrain_layer:"rockyTerrain",icy_terrain_layer:"icyTerrain",aquifer_water:"aquiferWater",ocean_currents:"oceanCurrents",molten_lava:"moltenLava"}[c.type];l&&h[l]&&(h[l].visible=c.enabled)}}else console.warn(`⚠️ Effect not found: ${e}`)}updateAllEffects(e,s){this.layerSystem&&this.layerSystem.update(e,s);for(const c of this.effects.values())if(c.enabled&&c.effect.update)try{c.effect.update(e,s)}catch(f){console.error(`Error updating effect ${c.type}:`,f)}}updateLightForAllEffects(e){this.layerSystem&&this.layerSystem.updateFromThreeLight(e);for(const s of this.effects.values())if(s.enabled&&s.effect.updateFromThreeLight)try{s.effect.updateFromThreeLight(e)}catch(c){console.error(`Error updating light for effect ${s.type}:`,c)}}removeEffect(e){const s=this.effects.get(e);s&&(s.effect.dispose&&s.effect.dispose(),this.effects.delete(e))}clearAllEffects(){this.layerSystem&&(this.layerSystem.dispose(),this.layerSystem=void 0);for(const e of this.effects.values())e.effect.dispose&&e.effect.dispose();this.effects.clear(),this.nextId=1}getStats(){const e=Array.from(this.effects.values());return{registeredTypes:this.creators.size,activeEffects:e.length,enabledEffects:e.filter(s=>s.enabled).length}}getAvailableEffectTypes(){return Array.from(this.creators.keys())}}const Gs=I.getInstance();export{Gs as e};
