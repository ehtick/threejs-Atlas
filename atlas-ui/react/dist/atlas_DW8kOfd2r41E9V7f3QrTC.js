import{S as x,D as O,g as A}from"./atlas_ChU1OZn73_ret8fa2ScFF.js";import{R as M}from"./atlas_IQ72mvJMYHB5jxjSku4yG.js";import{V as R,C as f,G as N,s as V,N as v,D as U,M as C,B as F,a as k,Y as w,A as L,P as G,e as z}from"./atlas_S2gaYUaVDGx2fzGLEfKud.js";const s={OPACITY:{min:.5,max:.95},SIZE:{min:1,max:1},PULSE_INTERVAL:{min:3,max:6},FADE_IN_DURATION:{min:1.5,max:3},FADE_OUT_DURATION:{min:2,max:4},VISIBLE_DURATION:{min:3,max:6},CORNER_RADIUS:{min:.3,max:1.5},EMISSIVE_INTENSITY:{min:.08,max:.15},TIME_SPEED:{min:.1,max:3}};class Y{cubeGroup;cube;material;geometry;params;planetRadius;startTime;nextPulseTime;currentState;stateStartTime;rng;orbitalVisibilityFactor;particleSystem;particleGeometry;particleMaterial;particleCount=800;particlePositions;particleVelocities;particleTargets;particleOrigins;particleProgress;particleSurfacePoints;planetPosition=new R;constructor(o,t={}){this.planetRadius=o;const r=t.seed||Math.floor(Math.random()*1e6);this.rng=new x(r),this.startTime=t.startTime||r%1e4/1e3,this.params={color:t.color||new f(16739125),opacity:t.opacity||this.rng.uniform(s.OPACITY.min,s.OPACITY.max),size:t.size||this.rng.uniform(s.SIZE.min,s.SIZE.max),seed:r,pulseInterval:t.pulseInterval||[this.rng.uniform(s.PULSE_INTERVAL.min,s.PULSE_INTERVAL.max),this.rng.uniform(s.PULSE_INTERVAL.min,s.PULSE_INTERVAL.max)],fadeInDuration:t.fadeInDuration||this.rng.uniform(s.FADE_IN_DURATION.min,s.FADE_IN_DURATION.max),fadeOutDuration:t.fadeOutDuration||this.rng.uniform(s.FADE_OUT_DURATION.min,s.FADE_OUT_DURATION.max),visibleDuration:t.visibleDuration||this.rng.uniform(s.VISIBLE_DURATION.min,s.VISIBLE_DURATION.max),cornerRadius:t.cornerRadius||this.rng.uniform(s.CORNER_RADIUS.min,s.CORNER_RADIUS.max),emissiveIntensity:t.emissiveIntensity||this.rng.uniform(s.EMISSIVE_INTENSITY.min,s.EMISSIVE_INTENSITY.max),startTime:this.startTime,timeSpeed:t.timeSpeed||this.rng.uniform(s.TIME_SPEED.min,s.TIME_SPEED.max),orbitalData:t.orbitalData,currentTime:t.currentTime||0},this.initializeStateFromAbsoluteTime(),this.orbitalVisibilityFactor=this.calculateOrbitalVisibility(),this.cubeGroup=new N,this.initParticleSystem();const i=o*2.35,c=i*this.params.cornerRadius*.2;this.geometry=new M(i,i,i,8,c),this.geometry.computeVertexNormals(),this.geometry.normalizeNormals(),this.params.color instanceof f?this.params.color:new f(this.params.color),this.material=new V({color:new f(.99,.99,.99),transparent:!0,opacity:0,metalness:0,roughness:0,transmission:.99,ior:1.33,thickness:1.5,clearcoat:.5,clearcoatRoughness:0,emissive:new f(.02,.02,.02),emissiveIntensity:1,side:U,depthWrite:!1,depthTest:!0,blending:v,alphaTest:0,flatShading:!1,vertexColors:!1,fog:!1}),this.cube=new C(this.geometry,this.material),this.cube.renderOrder=999,this.cubeGroup.add(this.cube),this.cubeGroup.visible=!0}initializeStateFromAbsoluteTime(){const o=this.params.cosmicOriginTime||O,t=A(o,this.params.timeSpeed,this.startTime),r=(this.params.pulseInterval[0]+this.params.pulseInterval[1])/2,i=this.params.fadeInDuration+this.params.visibleDuration+this.params.fadeOutDuration+r,c=t%i,m=this.params.fadeInDuration,h=m+this.params.visibleDuration,a=h+this.params.fadeOutDuration;c<m?(this.currentState="fading_in",this.stateStartTime=t-c,this.nextPulseTime=t-c):c<h?(this.currentState="visible",this.stateStartTime=t-(c-m),this.nextPulseTime=t-c):c<a?(this.currentState="fading_out",this.stateStartTime=t-(c-h),this.nextPulseTime=t-c):(this.currentState="hidden",this.stateStartTime=t-(c-a),this.nextPulseTime=t+(i-c))}calculateOrbitalVisibility(){if(!this.params.orbitalData||!this.params.orbitalData.enabled)return 1;const t=(this.params.currentTime||0)%this.params.orbitalData.cycle_duration_years/this.params.orbitalData.cycle_duration_years,r=this.params.orbitalData.visible_duration_years/this.params.orbitalData.cycle_duration_years;if(t<r){const i=t/r;return i<.1?i/.1:i>.9?(1-i)/.1:1}else return 0}addToScene(o,t){t&&(this.cubeGroup.position.copy(t),this.planetPosition.copy(t)),o.add(this.cubeGroup)}update(o){const t=this.params.cosmicOriginTime||O,r=A(t,this.params.timeSpeed,this.startTime),i=r-this.stateStartTime;if(this.orbitalVisibilityFactor=this.calculateOrbitalVisibility(),this.orbitalVisibilityFactor<=.001){this.currentState="hidden",this.material.opacity=0,this.cubeGroup.visible=!1;return}switch(this.cube.rotation.x=r*.1,this.cube.rotation.y=r*.15,this.cube.rotation.z=r*.05,this.updateParticles(r),this.currentState){case"hidden":this.material.opacity=0,r>=this.nextPulseTime&&(this.currentState="fading_in",this.stateStartTime=r);break;case"fading_in":const c=Math.min(i/this.params.fadeInDuration,1),m=Math.max(0,(c-.3)/.7),h=this.smoothstep(0,1,m)*this.params.opacity*this.orbitalVisibilityFactor;this.material.opacity=h,c>=1&&(this.currentState="visible",this.stateStartTime=r);break;case"visible":this.material.opacity=this.params.opacity*this.orbitalVisibilityFactor,i>=this.params.visibleDuration&&(this.currentState="fading_out",this.stateStartTime=r);break;case"fading_out":const a=Math.min(i/this.params.fadeOutDuration,1),e=Math.min(1,a*1.3),n=(1-this.smoothstep(0,1,e))*this.params.opacity*this.orbitalVisibilityFactor;if(this.material.opacity=n,a>=1){this.currentState="hidden",this.stateStartTime=r;const p=this.rng.uniform(this.params.pulseInterval[0],this.params.pulseInterval[1]);this.nextPulseTime=r+p}break}this.cubeGroup.visible=this.material.opacity>.001}smoothstep(o,t,r){const i=Math.max(0,Math.min(1,(r-o)/(t-o)));return i*i*(3-2*i)}updateParams(o){if(this.params={...this.params,...o},o.color!==void 0){const t=o.color instanceof f?o.color:new f(o.color);this.material.color=t}o.opacity!==void 0&&(this.material.opacity=o.opacity)}getObject3D(){return this.cubeGroup}initParticleSystem(){this.particlePositions=new Float32Array(this.particleCount*3),this.particleVelocities=new Float32Array(this.particleCount*3),this.particleTargets=new Float32Array(this.particleCount*3),this.particleOrigins=new Float32Array(this.particleCount*3),this.particleProgress=new Float32Array(this.particleCount),this.particleSurfacePoints=new Float32Array(this.particleCount*3);const t=this.planetRadius*2.35/2;for(let r=0;r<this.particleCount;r++){const i=r*3;this.particleOrigins[i]=0,this.particleOrigins[i+1]=0,this.particleOrigins[i+2]=0,this.particlePositions[i]=0,this.particlePositions[i+1]=0,this.particlePositions[i+2]=0;const c=this.rng.uniform(0,Math.PI*2),m=Math.acos(this.rng.uniform(-1,1));this.particleSurfacePoints[i]=this.planetRadius*Math.sin(m)*Math.cos(c),this.particleSurfacePoints[i+1]=this.planetRadius*Math.sin(m)*Math.sin(c),this.particleSurfacePoints[i+2]=this.planetRadius*Math.cos(m);const h=this.rng.uniform(0,1);let a,e,n;if(h<.7){const p=Math.floor(this.rng.uniform(0,6)),l=this.rng.uniform(-.9,.9),u=this.rng.uniform(-.9,.9);switch(p){case 0:a=t,e=l*t,n=u*t;break;case 1:a=-t,e=l*t,n=u*t;break;case 2:a=l*t,e=t,n=u*t;break;case 3:a=l*t,e=-t,n=u*t;break;case 4:a=l*t,e=u*t,n=t;break;case 5:a=l*t,e=u*t,n=-t;break;default:a=0,e=0,n=0}}else{const p=Math.floor(this.rng.uniform(0,12)),l=this.rng.uniform(-.95,.95);switch(p){case 0:a=l*t,e=t,n=t;break;case 1:a=l*t,e=-t,n=t;break;case 2:a=l*t,e=t,n=-t;break;case 3:a=l*t,e=-t,n=-t;break;case 4:a=t,e=l*t,n=t;break;case 5:a=-t,e=l*t,n=t;break;case 6:a=t,e=l*t,n=-t;break;case 7:a=-t,e=l*t,n=-t;break;case 8:a=t,e=t,n=l*t;break;case 9:a=-t,e=t,n=l*t;break;case 10:a=t,e=-t,n=l*t;break;case 11:a=-t,e=-t,n=l*t;break;default:a=0,e=0,n=0}}this.particleTargets[i]=a,this.particleTargets[i+1]=e,this.particleTargets[i+2]=n,this.particleVelocities[i]=this.rng.uniform(-.3,.3),this.particleVelocities[i+1]=this.rng.uniform(-.3,.3),this.particleVelocities[i+2]=this.rng.uniform(-.3,.3),this.particleProgress[r]=0}this.particleGeometry=new F,this.particleGeometry.setAttribute("position",new k(this.particlePositions,3)),this.particleMaterial=new w({color:new f(1,1,1),size:this.planetRadius*.008,transparent:!0,opacity:0,blending:L,depthWrite:!1,sizeAttenuation:!0,vertexColors:!1}),this.particleMaterial.isPulsatingCubeParticle=!0,this.particleSystem=new G(this.particleGeometry,this.particleMaterial),this.particleSystem.renderOrder=998,this.cubeGroup.add(this.particleSystem)}updateParticles(o){const t=this.particleGeometry.attributes.position.array;let r=0,i=0;switch(this.currentState){case"hidden":r=0,i=-.1;break;case"fading_in":const a=o-this.stateStartTime;i=Math.min(a/this.params.fadeInDuration,1),r=this.smoothstep(0,1,i);break;case"visible":r=1,i=1;break;case"fading_out":const e=o-this.stateStartTime;i=1-Math.min(e/this.params.fadeOutDuration,1),r=this.smoothstep(0,1,i);break}const c=o,m=this.cube.matrixWorld,h=new z().extractRotation(m);for(let a=0;a<this.particleCount;a++){const e=a*3,n=a/this.particleCount*.4,p=Math.max(-.1,Math.min(1,i*1.3-n)),l=Math.max(0,p);let u,T,S;if(l<.3){const I=l/.3,d=this.smoothstep(0,1,I),b=this.particleSurfacePoints[e],g=this.particleSurfacePoints[e+1],y=this.particleSurfacePoints[e+2];u=b*d,T=g*d,S=y*d}else{const I=(l-.3)/.7,d=this.smoothstep(0,1,I),b=new R(this.particleTargets[e],this.particleTargets[e+1],this.particleTargets[e+2]);b.applyMatrix4(h);const g=this.particleSurfacePoints[e],y=this.particleSurfacePoints[e+1],D=this.particleSurfacePoints[e+2];if(u=g+(b.x-g)*d,T=y+(b.y-y)*d,S=D+(b.z-D)*d,I<.5){const _=Math.sin(I*Math.PI*2)*this.planetRadius*.1;u*=1+_*.1,T*=1+_*.1,S*=1+_*.1}}const E=Math.sin(c*2+a*.1)*.01*this.planetRadius;t[e]=u+this.particleVelocities[e]*E,t[e+1]=T+this.particleVelocities[e+1]*E,t[e+2]=S+this.particleVelocities[e+2]*E}this.particleMaterial.opacity=r*this.orbitalVisibilityFactor,this.particleMaterial.size=this.planetRadius*.012*(.5+r)*this.orbitalVisibilityFactor,this.particleGeometry.attributes.position.needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose(),this.particleGeometry.dispose(),this.particleMaterial.dispose()}}function X(P,o,t,r,i){const c=i?.surface_elements?.pulsating_cube;if(!c?.enabled)return null;const m=t||Math.floor(Math.random()*1e6),h=new x(m+4e3),a=h.uniform(s.TIME_SPEED.min,s.TIME_SPEED.max),e=m%1e4/1e3,n=i?.timing?.elapsed_time?i.timing.elapsed_time/(365.25*24*3600):0,p={color:r||new f(16739125),opacity:h.uniform(s.OPACITY.min,s.OPACITY.max),size:h.uniform(s.SIZE.min,s.SIZE.max),seed:m,pulseInterval:[h.uniform(s.PULSE_INTERVAL.min,s.PULSE_INTERVAL.max),h.uniform(s.PULSE_INTERVAL.min,s.PULSE_INTERVAL.max)],fadeInDuration:h.uniform(s.FADE_IN_DURATION.min,s.FADE_IN_DURATION.max),fadeOutDuration:h.uniform(s.FADE_OUT_DURATION.min,s.FADE_OUT_DURATION.max),visibleDuration:h.uniform(s.VISIBLE_DURATION.min,s.VISIBLE_DURATION.max),cornerRadius:h.uniform(s.CORNER_RADIUS.min,s.CORNER_RADIUS.max),emissiveIntensity:h.uniform(s.EMISSIVE_INTENSITY.min,s.EMISSIVE_INTENSITY.max),startTime:e,timeSpeed:a,orbitalData:c,currentTime:n};return new Y(P,p)}export{Y as P,X as c};
