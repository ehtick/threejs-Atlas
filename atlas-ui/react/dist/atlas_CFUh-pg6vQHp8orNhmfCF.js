import{c as ve,A as Fe,S as Ce}from"./atlas_BJ-3dIBoTMvLRTvbW4jvB.js";import{c as we,R as Le}from"./atlas_xRQAuIdLDLUWwjQ1hhLJT.js";import{c as ie,A as Me,a as _,b as X,d as $e,e as ke}from"./atlas_DlxiDl5H4dCc4RtFDNV4-.js";import{c as h,L as Z,a as Ae}from"./atlas_Ccem9BSdBGELhfnElOo6_.js";import{c as ce}from"./atlas_Dod4TvMiKE71aV5xLhCIO.js";import{c as ae,T as Ge,a as We,b as ze,d as Oe}from"./atlas_Bce-1eIeRLx7SAlY51ZC8.js";import{c as R,R as Ve}from"./atlas_DLWyiQr-j-hUe0BblWQax.js";import{P as qe,c as Ne}from"./atlas_Bu5UDKz6Fxm2j5znUfuqR.js";import{g as C,c as Be,P as He}from"./atlas_BoQX836U_P5ievxCWB0fm.js";import{P as Ue}from"./atlas_C3eT5YO8N8uINAkU4sfC8.js";import{c as oe}from"./atlas_D3JuxdFXN9TN3Y0vT6vrH.js";import{c as ne}from"./atlas_BkU-BZFNU0Kk3GbuSxcOt.js";import{c as fe}from"./atlas_BWX0SzH4ZKildB05q9kmO.js";import{c as je}from"./atlas_0q73re8OGTbBFm-cq7mIP.js";import{c as Ye}from"./atlas_BSgVuGGMitm85ML_uFlwR.js";import{c as Ke}from"./atlas_BmPjqYkKBdIjG0mMXhEJD.js";import{c as Je}from"./atlas_D3GNhDOca9tM2xz4UF0kl.js";import{c as D,T as Qe}from"./atlas_CEoXpB5Qz5gnhpnI1rVml.js";import{E as Xe,c as de}from"./atlas_Bm5CmJ6Y3wiNPdy4xBPs9.js";import{c as le,E as Ze}from"./atlas_ClhQ4eskJsGKIwiNnH7TI.js";import{c as me,C as Re}from"./atlas_CUq1rz_tq3RwyJKJXdtJS.js";import{c as De,V as es}from"./atlas_D343D3gC5Bhf8E3SyGD-Q.js";import{c as ss,M as ts}from"./atlas_Dj0t6QoI2gZodGI_3YUXn.js";import{c as rs,M as is}from"./atlas_BEAtmhQR2pKLss0iVjM9O.js";import{c as _e,A as cs}from"./atlas_CYsk2fyQCI6aUldiF2q00.js";import{c as as,S as os}from"./atlas_OQLtGineOrjae7tCq3Z1z.js";import{P as ee}from"./atlas_Bw0fu8vSuhWaeAZKJqlzI.js";import{F as pe}from"./atlas_465Qga5-jgR2SaZeKrI3B.js";import{c as ns,O as fs}from"./atlas_D8F237FmEt-gxC2GKz619.js";import{c as ue,F as ds}from"./atlas_CMogpnnx9irO0RjvZ_Elu.js";import{c as he,A as ls}from"./atlas_DFoW4HgmlLMTSp87OppFy.js";import{c as ge,O as ms}from"./atlas_CeFCrUiRjVtyJj2C26XU3.js";import{c as ye,L as _s}from"./atlas_CnFeX1UquwFONPWwyH0Y0.js";import{c as ps,L as us}from"./atlas_DrzNaGnbXhyGGPqXgh5dg.js";import{c as Ee,M as hs}from"./atlas_DjKkgDbOS3WgacErnTNEP.js";import{c as gs,F as ys}from"./atlas_CwxbYudOIvRzf9WYQJAGh.js";import{c as Es,C as Ss}from"./atlas_D_AoWN1edZOb1F97i-xfg.js";import{c as bs,R as Is}from"./atlas_BNEH8HDGdmhsX1S5s8FdV.js";import{c as Se}from"./atlas_BShgu7srGlsrNBeL27QMh.js";import{c as xs,V as Ps}from"./atlas_ZjaJ_43RPC4E1k8nfj4yf.js";import{j as be,C as se}from"./atlas_CqUMNY_RyRklhCsbOI68T.js";const Ts=!1;class I{static instance;creators=new Map;effects=new Map;nextId=1;layerSystem;constructor(){this.registerDefaultEffects()}static getInstance(){return I.instance||(I.instance=new I),I.instance}registerDefaultEffects(){this.registerEffect("atmosphere_glow",{create:(e,t)=>new Me(t,e),fromPythonData:(e,t)=>ie(t,e.atmosphere||{})}),this.registerEffect("atmosphere_clouds",{create:(e,t)=>new X(t,e),fromPythonData:(e,t)=>_(t,e.surface_elements||{},void 0,e.timing?.cosmic_origin_time)}),this.registerEffect("atmospheric_streaks",{create:(e,t)=>new cs(t,e),fromPythonData:(e,t)=>_e(t,e.atmosphere||{})}),this.registerEffect("atmosphere",{create:(e,t)=>new ke(t,e),fromPythonData:(e,t)=>$e(t,e)}),this.registerEffect("ring_system",{create:(e,t)=>new Le(t,e),fromPythonData:(e,t)=>we(e.rings||{},t)}),this.registerEffect("fragmentation",{create:(e,t)=>new pe(t,e),fromPythonData:(e,t)=>new pe(t,{color:e.surface?.fragment_color||[.3,.3,.3],fragmentCount:e.surface?.fragment_count||20})}),this.registerEffect("land_masses",{create:(e,t)=>new Z(t,e),fromPythonData:(e,t)=>h(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("ocean_waves",{create:(e,t)=>new fs(e),fromPythonData:(e,t)=>ns(e)}),this.registerEffect("aquifer_water",{create:(e,t,c)=>new ls(c,e),fromPythonData:(e,t,c)=>he(c,e)}),this.registerEffect("ocean_currents",{create:(e,t,c)=>new ms(c,e),fromPythonData:(e,t,c)=>ge(c,e)}),this.registerEffect("fluid_layers",{create:(e,t)=>new ds(t,e),fromPythonData:(e,t)=>ue(t,e)}),this.registerEffect("lava_flows",{create:(e,t)=>new _s(t,e),fromPythonData:(e,t)=>ye(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("lava_rivers",{create:(e,t,c)=>new us(t,e),fromPythonData:(e,t,c)=>ps(e,t)}),this.registerEffect("molten_lava",{create:(e,t,c)=>new hs(c,e),fromPythonData:(e,t,c)=>Ee(c,e,e.seeds?.planet_seed)}),this.registerEffect("fire_eruption",{create:(e,t)=>new ys(t,e),fromPythonData:(e,t,c)=>gs(e,t)}),this.registerEffect("carbon_trails",{create:(e,t)=>new Ss(t,e),fromPythonData:(e,t,c)=>Es(e,t)}),this.registerEffect("radiation_rings",{create:(e,t)=>new Is(t,e),fromPythonData:(e,t)=>bs(t,e,e.seeds?.planet_seed)}),this.registerEffect("crystal_formations",{create:(e,t)=>(console.warn("Crystal formations effect not implemented yet"),null)}),this.registerEffect("star_field",{create:(e,t)=>new os(t,e),fromPythonData:(e,t)=>as(t,e.seeds?.planet_seed||e.planet_seed)}),this.registerEffect("tundra_snowflakes",{create:(e,t)=>new Ge(t,e),fromPythonData:(e,t)=>ae(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("toxic_post_processing",{create:(e,t)=>null,fromPythonData:(e,t)=>null}),this.registerEffect("river_lines",{create:(e,t)=>new Ve(t,e),fromPythonData:(e,t)=>R(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("anomaly_phase_matter",{create:(e,t)=>new Fe(t,e),fromPythonData:(e,t)=>ve(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("pulsating_cube",{create:(e,t)=>new qe(t,e),fromPythonData:(e,t)=>{const c=C(e);return Ne(t,e.surface_elements||{},e.seeds?.planet_seed,c,e)}}),this.registerEffect("planet_rays",{create:(e,t)=>new He(t,e),fromPythonData:(e,t)=>Be(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("visual_debug_3d",{create:(e,t)=>new Ps(t,e),fromPythonData:(e,t)=>xs(e,t)}),this.registerEffect("terrain_cracks",{create:(e,t)=>new Qe({...e,radius:t}),fromPythonData:(e,t)=>D(e,t,e.seeds?.shape_seed||e.seeds?.planet_seed)}),this.registerEffect("exotic_geometric_shapes",{create:(e,t)=>new Xe(t,e),fromPythonData:(e,t)=>{const c=C(e);return de(t,e.surface_elements||{},e.seeds?.planet_seed,c)}}),this.registerEffect("exotic_doodles",{create:(e,t)=>new Ze(t,e),fromPythonData:(e,t)=>le(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("cave_surface_holes",{create:(e,t,c)=>new Re(t,e),fromPythonData:(e,t,c)=>me(t,e,e.seeds?.planet_seed)}),this.registerEffect("vegetation",{create:(e,t,c)=>new es(t,e),fromPythonData:(e,t,c)=>De(t,e.surface_elements||{},e.seeds?.planet_seed,e.timing?.cosmic_origin_time)}),this.registerEffect("magma_flows",{create:(e,t,c)=>new ts(t,e),fromPythonData:(e,t,c)=>ss(t,e.surface_elements||{},e.seeds?.planet_seed,e.timing?.cosmic_origin_time)}),this.registerEffect("magma_eruptions",{create:(e,t,c)=>new is(t,e),fromPythonData:(e,t,c)=>rs(t,e.surface_elements||{},e.seeds?.planet_seed,e.timing?.cosmic_origin_time)})}registerEffect(e,t){this.creators.set(e,t)}createEffect(e,t,c,o,u=0){const a=this.creators.get(e);if(!a)return console.warn(`Effect type '${e}' not registered`),null;try{const l=a.create(t,c,this.layerSystem);if(!l)return null;const g={id:`effect_${this.nextId++}`,type:e,effect:l,priority:u,enabled:!0};return this.effects.set(g.id,g),g}catch(l){return console.error(`Error creating effect '${e}':`,l),null}}createEffectFromPythonData(e,t,c,o,u=0){const a=this.creators.get(e);if(!a||!a.fromPythonData)return this.createEffect(e,t,c,o,u);try{const l=a.fromPythonData(t,c,this.layerSystem);if(!l)return null;const g={id:`effect_${this.nextId++}`,type:e,effect:l,priority:u,enabled:!0};return this.effects.set(g.id,g),g}catch(l){return console.error(`Error creating effect '${e}' from Python data:`,l),null}}createEffectsFromList(e,t,c){const o=[],u=e.sort((a,l)=>(a.priority||0)-(l.priority||0));for(const a of u){const l=this.createEffect(a.type,a.params,t,c,a.priority);l&&(l.enabled=a.enabled!==!1,o.push(l))}return o}createEffectsFromPythonPlanetData(e,t,c,o,u){const a=[];try{const l=C(e);if(u?this.layerSystem=u:this.layerSystem=new Ue(c,l),e.surface_elements){const r=e.surface_elements;if(r.effects_3d&&Array.isArray(r.effects_3d))for(const p of r.effects_3d){if(p.type==="atmospheric_streaks"){const S=_e(t,p.params,e.seeds?.shape_seed+3e3),b={id:`effect_${this.nextId++}`,type:"atmospheric_streaks",effect:S,priority:p.priority||0,enabled:!0,name:"Atmospheric Streaks"};this.effects.set(b.id,b),a.push(b),S.addToScene(o,c.position);continue}const y=this.createEffect(p.type,p.params,t,c,p.priority||0);y?(y.name=p.type.replace(/_/g," ").replace(/\b\w/g,S=>S.toUpperCase()),a.push(y),y.effect.apply&&y.effect.apply(c),y.effect.addToScene&&y.effect.addToScene(o,c.position)):console.error("❌ FALLO AL CREAR EFECTO:",p.type)}switch(r.type.toLowerCase()){case"gas_giant":if(this.layerSystem){const s=oe(this.layerSystem,{...r,base_color:l,turbulence:e.turbulence||r.turbulence},e.seeds?.shape_seed||e.seeds?.planet_seed||e.seeds?.planet_seed),i=ne(this.layerSystem,{...r,base_color:l,storm_intensity:e.storm_intensity||r.storm_intensity},(e.seeds?.shape_seed||e.seeds?.planet_seed)+1e3),n={id:`effect_${this.nextId++}`,type:"cloud_bands_layer",effect:s,priority:0,enabled:!0};this.effects.set(n.id,n),a.push(n);const d={id:`effect_${this.nextId++}`,type:"cloud_gyros_layer",effect:i,priority:1,enabled:!0};if(this.effects.set(d.id,d),a.push(d),r.polar_hexagon&&r.polar_hexagon.enabled){const f=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,m=new ee({planetColor:l,hexagonData:r.polar_hexagon,planetRadius:t,currentTime:f}),E={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:m,priority:10,enabled:!0};this.effects.set(E.id,E),a.push(E),o&&m.addToScene(o)}}else console.error("❌ PlanetLayerSystem not initialized!");break;case"frozen_gas_giant":if(this.layerSystem){const s=oe(this.layerSystem,{...r,base_color:l,turbulence:e.turbulence||r.turbulence,icy_tint:!0},e.seeds?.shape_seed||e.seeds?.planet_seed),i={id:`effect_${this.nextId++}`,type:"cloud_bands_layer",effect:s,priority:0,enabled:!0};if(this.effects.set(i.id,i),a.push(i),r.polar_hexagon&&r.polar_hexagon.enabled){const n=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,d=new ee({planetColor:l,hexagonData:r.polar_hexagon,planetRadius:t,currentTime:n}),f={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:d,priority:10,enabled:!0};this.effects.set(f.id,f),a.push(f),o&&d.addToScene(o)}}break;case"aquifer":const p=he(this.layerSystem,e);if(p){const s={id:`effect_${this.nextId++}`,type:"aquifer_water",effect:p,priority:2,enabled:!0,name:"Aquifer Water Surface"};this.effects.set(s.id,s),a.push(s)}const y=ge(this.layerSystem,e);if(y){const s={id:`effect_${this.nextId++}`,type:"ocean_currents",effect:y,priority:1,enabled:!0,name:"Ocean Currents"};this.effects.set(s.id,s),a.push(s)}if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}if(r.land_masses&&r.land_masses.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+7e3);if(s){const i={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:3,enabled:!0,name:"Emergent Land Masses"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}if(r.atmosphere_clouds&&r.atmosphere_clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+8e3,e.timing?.cosmic_origin_time);if(s){const i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:4,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}break;case"nebulous":if(this.layerSystem){const s=ne(this.layerSystem,{...r,base_color:l,storm_intensity:r.nebula_density||.6,color_variance:r.color_variance||.2},(e.seeds?.shape_seed||e.seeds?.planet_seed)+2e3),i={id:`effect_${this.nextId++}`,type:"cloud_gyros_layer",effect:s,priority:0,enabled:!0};if(this.effects.set(i.id,i),a.push(i),r.polar_hexagon&&r.polar_hexagon.enabled){const n=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,d=new ee({planetColor:l,hexagonData:r.polar_hexagon,planetRadius:t,currentTime:n}),f={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:d,priority:10,enabled:!0};this.effects.set(f.id,f),a.push(f),o&&d.addToScene(o)}}break;case"metallic":case"metallic_3d":if(this.layerSystem){const s=Ke(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),i={id:`effect_${this.nextId++}`,type:"metallic_surface_layer",effect:s,priority:0,enabled:!0};this.effects.set(i.id,i),a.push(i)}break;case"diamond":if(this.layerSystem){const s=Je(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),i={id:`effect_${this.nextId++}`,type:"diamond_surface_layer",effect:s,priority:0,enabled:!0};this.effects.set(i.id,i),a.push(i);const n=D(e,t,e.seeds?.shape_seed||e.seeds?.planet_seed),d={id:`effect_${this.nextId++}`,type:"terrain_cracks",effect:n,priority:1,enabled:!0};if(this.effects.set(d.id,d),a.push(d),n.addToScene(o,c.position),r.clouds&&r.clouds.length>0){const f=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),m={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:f,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(m.id,m),a.push(m),f.addToScene(o,c.position)}}break;case"rocky":if(this.layerSystem){const s=fe(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed,"ROCKY"),i={id:`effect_${this.nextId++}`,type:"rocky_terrain_layer",effect:s,priority:0,enabled:!0};if(this.effects.set(i.id,i),a.push(i),r.clouds&&r.clouds.length>0){const n=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),d={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:n,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(d.id,d),a.push(d),n.addToScene(o,c.position)}}break;case"icy":if(this.layerSystem){const s=Ye(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),i={id:`effect_${this.nextId++}`,type:"icy_terrain_layer",effect:s,priority:0,enabled:!0};this.effects.set(i.id,i),a.push(i);const n=Ae(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+8e3);if(n){const f={id:`effect_${this.nextId++}`,type:"transparent_land_masses",effect:n,priority:1,enabled:!0,name:"Ice Formations"};this.effects.set(f.id,f),a.push(f),n.addToScene(o,c.position)}else console.warn("❄️ Failed to create transparent LandMasses for Icy planet");if(r.clouds&&r.clouds.length>0){const f=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),m={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:f,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(m.id,m),a.push(m),f.addToScene(o,c.position)}const d=ce(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+9e3);if(d){const f={id:`effect_${this.nextId++}`,type:"icy_features",effect:d,priority:2,enabled:!0,name:"Ice Crystals & Features"};this.effects.set(f.id,f),a.push(f),d.addToScene(o,c.position)}}break;case"oceanic":const S=ue(t,e);if(S){const s={id:`effect_${this.nextId++}`,type:"fluid_layers",effect:S,priority:3,enabled:!0,name:"Fluid Ocean Layers"};this.effects.set(s.id,s),a.push(s),S.addToScene(o,c.position)}if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(s){const i={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:5,enabled:!0,name:"Land Masses (Islands)"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}break;case"tundra":if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(s){const i={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:5,enabled:!0,name:"Tundra Terrain"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}const b=ce(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+9e3);if(b){const s={id:`effect_${this.nextId++}`,type:"icy_features",effect:b,priority:6,enabled:!0,name:"Snow Patches & Ice"};this.effects.set(s.id,s),a.push(s),b.addToScene(o,c.position)}if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}const L=ae(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+15e3);if(L){const s={id:`effect_${this.nextId++}`,type:"tundra_snowflakes",effect:L,priority:20,enabled:!0,name:"Snowflakes"};this.effects.set(s.id,s),a.push(s),L.addToScene(o,c.position)}break;case"arid":let x;if(r.clouds&&r.clouds.length>0?x=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time):x=new X(t,{color:new se(.9,.8,.7),cloudCount:20,size:4.2,opacity:.7,density:1.2,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,rotationSpeed:.004,movementAmplitude:.012,puffiness:1.3,timeSpeed:1}),x){const s={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:x,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(s.id,s),a.push(s),x.addToScene(o,c.position)}let P;if(r.green_patches&&r.green_patches.length>0){const s={...r,green_patches:r.green_patches.map(i=>({...i,color:[.5,0,0,i.color?.[3]||1]}))};P=h(t,s,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3)}else P=new Z(t,{seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3,greenPatches:Array.from({length:25},(s,i)=>{const n=(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3+i*100,d=Math.sin(n)*.5+.5,f=Math.acos(1-2*(i+d)/25),m=2*Math.PI*(i*2.399%1);let E;return i<8?E=.25+d*.25:i<16?E=.15+d*.15:E=.08+d*.12,{position_3d:[Math.sin(f)*Math.cos(m),Math.sin(f)*Math.sin(m),Math.cos(f)],size:E,sides:12+Math.floor(d*16),color:[.5,0,0,.7+d*.2]}})});if(P){const s={id:`effect_${this.nextId++}`,type:"land_masses",effect:P,priority:5,enabled:!0,name:"Arid Terrain"};this.effects.set(s.id,s),a.push(s),P.addToScene(o,c.position)}const M=R(t,r,e.seeds?.shape_seed||e.seeds?.planet_seed);if(M){const s={id:`effect_${this.nextId++}`,type:"river_lines",effect:M,priority:6,enabled:!0,name:"Dried River Channels"};this.effects.set(s.id,s),a.push(s),M.addToScene(o,c.position)}break;case"savannah":if(this.layerSystem){const s=je(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed,"SAVANNAH"),i={id:`effect_${this.nextId++}`,type:"savannah_terrain_layer",effect:s,priority:2,enabled:!0,name:"Savannah Terrain Layer"};this.effects.set(i.id,i),a.push(i)}if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time);if(s){const i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Savannah Atmospheric Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(s){const i={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:5,enabled:!0,name:"Savannah Terrain"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}break;case"desert":if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time);if(s){const i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Desert Dust Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(s){const i={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:5,enabled:!0,name:"Desert Oases"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}const $=Se(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+7e3,"desert");if($){const s={id:`effect_${this.nextId++}`,type:"super_earth_water_features",effect:$,priority:6,enabled:!0,name:"Desert Rare Water Mass"};this.effects.set(s.id,s),a.push(s),$.addToScene(o,c.position)}const k=Oe(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+15e3);if(k){const s={id:`effect_${this.nextId++}`,type:"tundra_snowflakes",effect:k,priority:20,enabled:!0,name:"Desert Sandstorms"};this.effects.set(s.id,s),a.push(s),k.addToScene(o,c.position)}break;case"molten_core":case"molten core":const te=Ee(this.layerSystem,e);if(te){const s={id:`effect_${this.nextId++}`,type:"molten_lava",effect:te,priority:2,enabled:!0,name:"Molten Lava Surface"};this.effects.set(s.id,s),a.push(s)}const A=ye(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+9e3);if(A){const s={id:`effect_${this.nextId++}`,type:"lava_flows",effect:A,priority:4,enabled:!0,name:"Lava Flows & Fire Whips"};this.effects.set(s.id,s),a.push(s),A.addToScene(o,c.position)}const G=this.createEffectFromPythonData("fire_eruption",e,t,c)?.effect;if(G){const s={id:`effect_${this.nextId++}`,type:"fire_eruption",effect:G,priority:15,enabled:!0,name:"Fire Eruptions"};this.effects.set(s.id,s),a.push(s),G.addToScene(o,c.position)}if(r.green_patches&&r.green_patches.length>0){const s={...r,green_patches:r.green_patches.map(n=>({...n,color:[1,.55,0,n.color?.[3]||.9]}))},i=h(t,s,(e.seeds?.planet_seed||e.seeds?.shape_seed)+1e4);if(i){const n={id:`effect_${this.nextId++}`,type:"land_masses",effect:i,priority:3,enabled:!0,name:"Incandescent Land Masses"};this.effects.set(n.id,n),a.push(n),i.addToScene(o,c.position)}}if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+4e3,e.timing?.cosmic_origin_time),i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Molten Atmospheric Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}break;case"lava":const W=D(e,t,e.seeds?.shape_seed||e.seeds?.planet_seed);if(W){const s={id:`effect_${this.nextId++}`,type:"terrain_cracks",effect:W,priority:1,enabled:!0,name:"Lava Terrain Cracks"};this.effects.set(s.id,s),a.push(s),W.addToScene(o,c.position)}const z=this.createEffectFromPythonData("lava_rivers",e,t,c)?.effect;if(z){const s={id:`effect_${this.nextId++}`,type:"lava_rivers",effect:z,priority:8,enabled:!0,name:"Lava Rivers"};this.effects.set(s.id,s),a.push(s),z.addToScene(o,c.position)}const O=this.createEffectFromPythonData("fire_eruption",e,t,c)?.effect;if(O){const s={id:`effect_${this.nextId++}`,type:"fire_eruption",effect:O,priority:12,enabled:!0,name:"Lava Planet Fire Eruptions"};this.effects.set(s.id,s),a.push(s),O.addToScene(o,c.position)}if(r.green_patches&&r.green_patches.length>0){const s={...r,green_patches:r.green_patches.map(n=>({...n,color:[.8,.3,0,n.color?.[3]||.7]}))},i=h(t,s,(e.seeds?.planet_seed||e.seeds?.shape_seed)+11e3);if(i){const n={id:`effect_${this.nextId++}`,type:"land_masses",effect:i,priority:3,enabled:!0,name:"Lava Land Masses"};this.effects.set(n.id,n),a.push(n),i.addToScene(o,c.position)}}if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+7e3,e.timing?.cosmic_origin_time);if(s){const i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:16,enabled:!0,name:"Volcanic Ash Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}break;case"exotic":if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Exotic Atmospheric Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}const V=de(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3,l);if(V){const s={id:`effect_${this.nextId++}`,type:"exotic_geometric_shapes",effect:V,priority:10,enabled:!0,name:"Exotic Geometric Shapes"};this.effects.set(s.id,s),a.push(s),V.addToScene(o,c.position)}const q=le(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3,e);if(q){const s={id:`effect_${this.nextId++}`,type:"exotic_doodles",effect:q,priority:12,enabled:!0,name:"Exotic Doodles"};this.effects.set(s.id,s),a.push(s),q.addToScene(o,c.position)}break;case"cave":let T;if(r.atmosphere_clouds&&r.atmosphere_clouds.clouds&&r.atmosphere_clouds.clouds.length>0?T=_(t,r.atmosphere_clouds,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time):T=new X(t,{color:new se(.75,.75,.75),cloudCount:12,size:3.5,opacity:.65,density:.8,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,rotationSpeed:.003,movementAmplitude:.008,puffiness:1.1,timeSpeed:.8}),T){const s={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:T,priority:15,enabled:!0,name:"Cave Atmospheric Clouds"};this.effects.set(s.id,s),a.push(s),T.addToScene(o,c.position)}let v;if(r.green_patches&&r.green_patches.length>0)v=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3);else{const s=new Ce((e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3),i=[];for(let n=0;n<10;n++){const d=s.random()*2*Math.PI,f=Math.acos(s.random()*2-1);let m;n<3?m=.2+s.random()*.2:n<7?m=.12+s.random()*.13:m=.08+s.random()*.07,i.push({position_3d:[Math.sin(f)*Math.cos(d),Math.sin(f)*Math.sin(d),Math.cos(f)],size:m,sides:12+Math.floor(s.random()*8),color:[.29,.25,.21,.75+s.random()*.15]})}v=new Z(t,{greenPatches:i,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3})}if(v){const s={id:`effect_${this.nextId++}`,type:"land_masses",effect:v,priority:5,enabled:!0,name:"Cave Land Masses"};this.effects.set(s.id,s),a.push(s),v.addToScene(o,c.position)}if(this.layerSystem){const s=fe(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed,"CAVE"),i={id:`effect_${this.nextId++}`,type:"rocky_terrain_layer",effect:s,priority:1,enabled:!0,name:"Cave Rocky Terrain"};this.effects.set(i.id,i),a.push(i)}const w=me(t,e,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(w){const s={id:`effect_${this.nextId++}`,type:"cave_surface_holes",effect:w,priority:10,enabled:!0,name:"Cave Surface Holes"};if(this.effects.set(s.id,s),a.push(s),w.addToScene(o,c.position),this.layerSystem){const i=this.layerSystem.baseMaterial?.uniforms?.baseColor?.value||new se(9127187);w.applyToPlanetSystem(this.layerSystem,i)}}const N=R(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+7e3);if(N){const s={id:`effect_${this.nextId++}`,type:"river_lines",effect:N,priority:8,enabled:!0,name:"Cave Drainage Channels"};this.effects.set(s.id,s),a.push(s),N.addToScene(o,c.position)}break;case"anomaly":const re=["anomaly_phase_matter","pulsating_cube","planet_rays"],xe=e.seeds?.planet_seed||Math.floor(Math.random()*1e6),Pe=re.length;for(let s=0;s<Pe;s++){const i=re[s],n=xe+s*1e4,d=this.createEffectFromPythonData(i,{...e,seeds:{...e.seeds,planet_seed:n}},t,c,10+s);d&&(d.name=i.replace(/_/g," ").replace(/\b\w/g,f=>f.toUpperCase()),a.push(d),d.effect.addToScene&&d.effect.addToScene(o,c.position))}if(e.atmosphere&&e.atmosphere.type!=="None"){const s=this.createEffectFromPythonData("atmosphere",e.atmosphere,t,c,5);s&&(a.push(s),s.effect.addToScene(o,c.position))}break;case"carbon":if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+4e3,e.timing?.cosmic_origin_time),i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Carbon Atmospheric Dust"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}if(r.green_patches&&r.green_patches.length>0){const s={...r,green_patches:r.green_patches.map(n=>({...n,color:[.1,.07,.06,n.color?.[3]||.9],size:(n.size||.1)*1.5}))},i=h(t,s,(e.seeds?.planet_seed||e.seeds?.shape_seed)+6e3);if(i){const n={id:`effect_${this.nextId++}`,type:"land_masses",effect:i,priority:5,enabled:!0,name:"Carbon Formations"};this.effects.set(n.id,n),a.push(n),i.addToScene(o,c.position)}}const B=ze(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+15e3);if(B){const s={id:`effect_${this.nextId++}`,type:"tundra_snowflakes",effect:B,priority:20,enabled:!0,name:"Carbon Dust Particles"};this.effects.set(s.id,s),a.push(s),B.addToScene(o,c.position)}const H=this.createEffectFromPythonData("carbon_trails",e,t,c);if(H){const s={id:`effect_${this.nextId++}`,type:"carbon_trails",effect:H.effect,priority:25,enabled:!0,name:"Carbon Gas Trails"};this.effects.set(s.id,s),a.push(s),H.effect.addToScene(o,c.position)}break;case"forest":const U=this.createEffectFromPythonData("vegetation",e,t,c);if(U){const s={id:`effect_${this.nextId++}`,type:"vegetation",effect:U.effect,priority:10,enabled:!0,name:"Forest Vegetation"};this.effects.set(s.id,s),a.push(s),U.effect.addToScene(o,c.position)}if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time);if(s){const i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Forest Atmospheric Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}if(r.green_patches&&r.green_patches.length>0){const s={...r,green_patches:r.green_patches.map(n=>({...n,size:(n.size||.1)*1.5,color:n.color||[.2,.4,.1,1]}))},i=h(t,s,(e.seeds?.planet_seed||e.seeds?.shape_seed)+6e3);if(i){const n={id:`effect_${this.nextId++}`,type:"land_masses",effect:i,priority:5,enabled:!0,name:"Forest Land Masses"};this.effects.set(n.id,n),a.push(n),i.addToScene(o,c.position)}}break;case"magma":const j=this.createEffectFromPythonData("magma_flows",e,t,c);if(j){const s={id:`effect_${this.nextId++}`,type:"magma_flows",effect:j.effect,priority:12,enabled:!0,name:"Magma Flows & Lakes"};this.effects.set(s.id,s),a.push(s),j.effect.addToScene(o,c.position)}const Y=this.createEffectFromPythonData("magma_eruptions",e,t,c);if(Y){const s={id:`effect_${this.nextId++}`,type:"magma_eruptions",effect:Y.effect,priority:13,enabled:!0,name:"Magma Eruptions & Arcs"};this.effects.set(s.id,s),a.push(s),Y.effect.addToScene(o,c.position)}if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time);if(s){const i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Magma Atmospheric Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+6e3);if(s){const i={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:5,enabled:!0,name:"Magmatic Land Masses"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}break;case"toxic":if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Toxic Purple Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4500);if(s){const i={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:10,enabled:!0,name:"Toxic Contaminated Areas"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}const K=We(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+15e3);if(K){const s={id:`effect_${this.nextId++}`,type:"tundra_snowflakes",effect:K,priority:20,enabled:!0,name:"Toxic Particles"};this.effects.set(s.id,s),a.push(s),K.addToScene(o,c.position)}break;case"radioactive":if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3,e.timing?.cosmic_origin_time),i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Radioactive Toxic Clouds"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(s){const i={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:10,enabled:!0,name:"Radioactive Contaminated Areas"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}const J=this.createEffectFromPythonData("radiation_rings",e,t,c);if(J){const s={id:`effect_${this.nextId++}`,type:"radiation_rings",effect:J.effect,priority:21,enabled:!0,name:"Radioactive Surface Rings"};this.effects.set(s.id,s),a.push(s),J.effect.addToScene(o,c.position)}break;case"super_earth":if(r.clouds&&r.clouds.length>0){const s=_(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+8e3,e.timing?.cosmic_origin_time);if(s){const i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Super Earth Dense Atmosphere"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+9e3);if(s){const i={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:5,enabled:!0,name:"Super Earth Massive Continents"};this.effects.set(i.id,i),a.push(i),s.addToScene(o,c.position)}}const Q=Se(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+11e3);if(Q){const s={id:`effect_${this.nextId++}`,type:"super_earth_water_features",effect:Q,priority:6,enabled:!0,name:"Super Earth Water Features"};this.effects.set(s.id,s),a.push(s),Q.addToScene(o,c.position)}break;default:if(e.planet_info?.type?.toLowerCase()==="anomaly"){const i=["anomaly_phase_matter","pulsating_cube","planet_rays"],n=e.seeds?.planet_seed||Math.floor(Math.random()*1e6),d=i.length;for(let f=0;f<d;f++){const m=i[f],E=n+f*1e4,F=this.createEffectFromPythonData(m,{...e,seeds:{...e.seeds,planet_seed:E}},t,c,10+f);F&&(F.name=m.replace(/_/g," ").replace(/\b\w/g,Te=>Te.toUpperCase()),a.push(F),F.effect.addToScene&&F.effect.addToScene(o,c.position))}if(e.atmosphere&&e.atmosphere.type!=="None"){const f=this.createEffectFromPythonData("atmosphere",e.atmosphere,t,c,5);f&&(a.push(f),f.effect.addToScene(o,c.position))}}else if(c.material instanceof be){const s=C(e);c.material.color.copy(s)}break}}else if(c.material instanceof be){const r=C(e);c.material.color.copy(r)}const g=e.planet_info?.type?.toLowerCase()||e.surface_elements?.type?.toLowerCase(),Ie=g==="anomaly"||e.surface_elements?.type==="anomaly";if(e.atmosphere&&!Ie){if(e.atmosphere.streaks||["Gas Giant","Frozen Gas Giant"].includes(e.planet_info?.type)){const r=ie(t,e.atmosphere||{},e.seeds?.shape_seed+2e3);if(r){const p={id:`effect_${this.nextId++}`,type:"atmosphere_glow",effect:r,priority:20,enabled:!0};this.effects.set(p.id,p),a.push(p),r.addToScene(o,c.position)}}if(e.atmosphere.type&&e.atmosphere.type!=="None"){const r={...e.atmosphere};g==="oceanic"&&(r.opacity=Math.min(r.opacity||.3,.15),r.width=Math.min(r.width||15,8));const p=this.createEffectFromPythonData("atmosphere",r,t,c,5);p&&(a.push(p),p.effect.addToScene(o,c.position))}}if(e.rings&&e.rings.has_rings||["Gas Giant","Frozen Gas Giant","Super Earth"].includes(e.planet_info?.type)){const r=this.createEffectFromPythonData("ring_system",e,t,c,1);r?(a.push(r),r.effect.addToScene(o,c.position)):console.warn("⚠️ Failed to create ring effect")}if(e.surface_elements?.has_fragmentation_zones){const r=this.createEffectFromPythonData("fragmentation",e,t,c,5);r&&(a.push(r),r.effect.addToScene(o,c.position))}this.layerSystem&&this.layerSystem.addToScene(o);try{const r=this.createEffectFromPythonData("star_field",e,t,c,-100);r&&r.effect&&(r.effect.addToScene(o,c.position),a.push(r))}catch(r){console.warn("Could not create StarField:",r)}return a.forEach((r,p)=>{}),a.length===0&&console.warn("⚠️ NO EFFECTS WERE CREATED! Check the data structure and conditions."),a}catch(l){throw console.error("Error in EffectRegistry.createEffectsFromPythonPlanetData:",l),l}}getEffect(e){return this.effects.get(e)||null}getEffectsByType(e){return Array.from(this.effects.values()).filter(t=>t.type===e)}getAllEffects(){return Array.from(this.effects.values())}toggleEffect(e,t){const c=this.effects.get(e);if(c){c.enabled=t!==void 0?t:!c.enabled;const o=c.effect;if(o&&o.getObject3D){const u=o.getObject3D();u&&(u.visible=c.enabled)}if(this.layerSystem){const u=this.layerSystem.getLayerMeshes(),l={cloud_bands_layer:"cloudBands",cloud_gyros_layer:"cloudGyros",metallic_surface_layer:"metallicSurface",diamond_surface_layer:"diamondSurface",rocky_terrain_layer:"rockyTerrain",savannah_terrain_layer:"savannahTerrain",icy_terrain_layer:"icyTerrain",aquifer_water:"aquiferWater",ocean_currents:"oceanCurrents",molten_lava:"moltenLava"}[c.type];l&&u[l]&&(u[l].visible=c.enabled)}}else console.warn(`⚠️ Effect not found: ${e}`)}updateAllEffects(e,t,c){this.layerSystem&&this.layerSystem.update(e,t);for(const o of this.effects.values())if(o.enabled&&o.effect.update)try{o.type==="star_field"&&c&&"updateWithCamera"in o.effect?o.effect.updateWithCamera(e,c):o.effect.update(e,t)}catch(u){console.error(`Error updating effect ${o.type}:`,u)}}updateLightForAllEffects(e){this.layerSystem&&this.layerSystem.updateFromThreeLight(e);for(const t of this.effects.values())if(t.enabled&&t.effect.updateFromThreeLight)try{t.effect.updateFromThreeLight(e)}catch(c){console.error(`Error updating light for effect ${t.type}:`,c)}}removeEffect(e){const t=this.effects.get(e);t&&(t.effect.dispose&&t.effect.dispose(),this.effects.delete(e))}clearAllEffects(){this.layerSystem&&(this.layerSystem.dispose(),this.layerSystem=void 0);for(const e of this.effects.values())e.effect.dispose&&e.effect.dispose();this.effects.clear(),this.nextId=1}getStats(){const e=Array.from(this.effects.values());return{registeredTypes:this.creators.size,activeEffects:e.length,enabledEffects:e.filter(t=>t.enabled).length}}getAvailableEffectTypes(){return Array.from(this.creators.keys())}}const pt=I.getInstance();export{pt as e};
