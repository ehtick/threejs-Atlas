import{c as be,A as Ie,S as Pe}from"./atlas_BRxuskCzJ8TfEkc5-9Hxt.js";import{c as Fe,R as ve}from"./atlas_4AI3JYrWLtEl2BfOakD7u.js";import{c as D,A as xe,a as p,b as Y,d as Te,e as we}from"./atlas_BBaLau-t1Bf09RyfJul7d.js";import{c as h,L as K,a as Ce}from"./atlas_C3x4pmPPzP5rLHmAMwBvi.js";import{c as ee}from"./atlas_BPymYXFqDtWz6D86-TKR-.js";import{c as se,T as Me,a as Le}from"./atlas_CYtIzdRZWOz86-y-y36J6.js";import{c as J,R as $e}from"./atlas_DeK1Q4vK4b69UoXq150Ke.js";import{P as Ae,c as ke}from"./atlas_BBvZUZjIftk2m7T-MiExz.js";import{g as w,c as Ge,P as ze}from"./atlas_Bd8ZnklBFYJspo-qdkw_h.js";import{P as Oe}from"./atlas_DXetng5pZcvIgfe9H4XOJ.js";import{c as te}from"./atlas_C3kb7r9oXDKzVS33wDxqK.js";import{c as re}from"./atlas_DZ99MjrkcrvgVTxVc9rlt.js";import{c as ce}from"./atlas_BKEOP4OME-T8Gw63ToNgI.js";import{c as We}from"./atlas_C5T_yTiTViCGwQZYkM_1B.js";import{c as qe}from"./atlas_7lDMSJ7g-761qvwU9NcdW.js";import{c as Ve}from"./atlas_CjViMkc6MBIK9ICDqZ2aQ.js";import{c as ie,D as Be}from"./atlas_InMTiAe-qAmnwxRCYFEBQ.js";import{E as Ne,c as ae}from"./atlas_DcwhTyqykZzc0M39tqIED.js";import{c as oe,E as He}from"./atlas_BpyHLAAG8-dvm6vF0duj4.js";import{c as fe,C as Ue}from"./atlas_CqOedertE05N16bKbh2vd.js";import{c as je,V as Ye}from"./atlas_BZBwQIedy7q_OJuVOknsF.js";import{c as Ke,M as Je}from"./atlas_8S6ursc6j4VvJPykiOZGh.js";import{c as Qe,M as Xe}from"./atlas_DN2e9DuMzjHz6uNe2YQBP.js";import{c as ne,A as Ze}from"./atlas_QQEZ-Devop0nDWkgvRQZL.js";import{c as Re,S as De}from"./atlas_B0K52wfnoLsWCLFUIh218.js";import{P as Q}from"./atlas_BUmVdqraEKvUyyVRVjKmM.js";import{F as de}from"./atlas_BkmCjbfa4vqpFz4JbDGn4.js";import{c as es,O as ss}from"./atlas_BCOSTDsgDhq4iuEaSyTj6.js";import{c as le,F as ts}from"./atlas_BteZgAnnZx2RvU-jcE_oZ.js";import{c as me,A as rs}from"./atlas_DIrGaHblUYZoXeCwei5nJ.js";import{c as _e,O as cs}from"./atlas_D38G4YGSStypWZo3xXKzk.js";import{c as pe,L as is}from"./atlas_5wLXNaqMb3ezscVFmYngB.js";import{c as as,L as os}from"./atlas_S_Rt-UgRecqRTF8eQDp_A.js";import{c as ue,M as fs}from"./atlas_BjpKx3c4TpUMp-2eFrqgZ.js";import{c as ns,F as ds}from"./atlas_aLel-FInqPFRjA-yFd7au.js";import{c as ls,C as ms}from"./atlas_D2EHFWdLvRC7lTxPO2EBs.js";import{c as _s,R as ps}from"./atlas_XD6n2boKsg1TguZE2Vre2.js";import{c as us}from"./atlas_Ds-hYBo_5ozcEMVlP09Lx.js";import{c as hs,V as ys}from"./atlas_DNFPyEECZY3LSSZ-3j3Tn.js";import{j as he,C as X}from"./atlas_Dg_ET6FsNHb7HwLobcNa6.js";const gs=!1;class I{static instance;creators=new Map;effects=new Map;nextId=1;layerSystem;constructor(){this.registerDefaultEffects()}static getInstance(){return I.instance||(I.instance=new I),I.instance}registerDefaultEffects(){this.registerEffect("atmosphere_glow",{create:(e,t)=>new xe(t,e),fromPythonData:(e,t)=>D(t,e.atmosphere||{})}),this.registerEffect("atmosphere_clouds",{create:(e,t)=>new Y(t,e),fromPythonData:(e,t)=>p(t,e.surface_elements||{},void 0,e.timing?.cosmic_origin_time)}),this.registerEffect("atmospheric_streaks",{create:(e,t)=>new Ze(t,e),fromPythonData:(e,t)=>ne(t,e.atmosphere||{})}),this.registerEffect("atmosphere",{create:(e,t)=>new we(t,e),fromPythonData:(e,t)=>Te(t,e)}),this.registerEffect("ring_system",{create:(e,t)=>new ve(t,e),fromPythonData:(e,t)=>Fe(e.rings||{},t)}),this.registerEffect("fragmentation",{create:(e,t)=>new de(t,e),fromPythonData:(e,t)=>new de(t,{color:e.surface?.fragment_color||[.3,.3,.3],fragmentCount:e.surface?.fragment_count||20})}),this.registerEffect("land_masses",{create:(e,t)=>new K(t,e),fromPythonData:(e,t)=>h(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("ocean_waves",{create:(e,t)=>new ss(e),fromPythonData:(e,t)=>es(e)}),this.registerEffect("aquifer_water",{create:(e,t,i)=>new rs(i,e),fromPythonData:(e,t,i)=>me(i,e)}),this.registerEffect("ocean_currents",{create:(e,t,i)=>new cs(i,e),fromPythonData:(e,t,i)=>_e(i,e)}),this.registerEffect("fluid_layers",{create:(e,t)=>new ts(t,e),fromPythonData:(e,t)=>le(t,e)}),this.registerEffect("lava_flows",{create:(e,t)=>new is(t,e),fromPythonData:(e,t)=>pe(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("lava_rivers",{create:(e,t,i)=>new os(t,e),fromPythonData:(e,t,i)=>as(e,t)}),this.registerEffect("molten_lava",{create:(e,t,i)=>new fs(i,e),fromPythonData:(e,t,i)=>ue(i,e,e.seeds?.planet_seed)}),this.registerEffect("fire_eruption",{create:(e,t)=>new ds(t,e),fromPythonData:(e,t,i)=>ns(e,t)}),this.registerEffect("carbon_trails",{create:(e,t)=>new ms(t,e),fromPythonData:(e,t,i)=>ls(e,t)}),this.registerEffect("radiation_rings",{create:(e,t)=>new ps(t,e),fromPythonData:(e,t)=>_s(t,e,e.seeds?.planet_seed)}),this.registerEffect("crystal_formations",{create:(e,t)=>(console.warn("Crystal formations effect not implemented yet"),null)}),this.registerEffect("star_field",{create:(e,t)=>new De(t,e),fromPythonData:(e,t)=>Re(t,e.seeds?.planet_seed||e.planet_seed)}),this.registerEffect("tundra_snowflakes",{create:(e,t)=>new Me(t,e),fromPythonData:(e,t)=>se(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("river_lines",{create:(e,t)=>new $e(t,e),fromPythonData:(e,t)=>J(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("anomaly_phase_matter",{create:(e,t)=>new Ie(t,e),fromPythonData:(e,t)=>be(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("pulsating_cube",{create:(e,t)=>new Ae(t,e),fromPythonData:(e,t)=>{const i=w(e);return ke(t,e.surface_elements||{},e.seeds?.planet_seed,i,e)}}),this.registerEffect("planet_rays",{create:(e,t)=>new ze(t,e),fromPythonData:(e,t)=>Ge(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("visual_debug_3d",{create:(e,t)=>new ys(t,e),fromPythonData:(e,t)=>hs(e,t)}),this.registerEffect("diamond_cracks",{create:(e,t)=>new Be({...e,radius:t}),fromPythonData:(e,t)=>ie(e,t,e.seeds?.shape_seed||e.seeds?.planet_seed)}),this.registerEffect("exotic_geometric_shapes",{create:(e,t)=>new Ne(t,e),fromPythonData:(e,t)=>{const i=w(e);return ae(t,e.surface_elements||{},e.seeds?.planet_seed,i)}}),this.registerEffect("exotic_doodles",{create:(e,t)=>new He(t,e),fromPythonData:(e,t)=>oe(t,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("cave_surface_holes",{create:(e,t,i)=>new Ue(t,e),fromPythonData:(e,t,i)=>fe(t,e,e.seeds?.planet_seed)}),this.registerEffect("vegetation",{create:(e,t,i)=>new Ye(t,e),fromPythonData:(e,t,i)=>je(t,e.surface_elements||{},e.seeds?.planet_seed,e.timing?.cosmic_origin_time)}),this.registerEffect("magma_flows",{create:(e,t,i)=>new Je(t,e),fromPythonData:(e,t,i)=>Ke(t,e.surface_elements||{},e.seeds?.planet_seed,e.timing?.cosmic_origin_time)}),this.registerEffect("magma_eruptions",{create:(e,t,i)=>new Xe(t,e),fromPythonData:(e,t,i)=>Qe(t,e.surface_elements||{},e.seeds?.planet_seed,e.timing?.cosmic_origin_time)})}registerEffect(e,t){this.creators.set(e,t)}createEffect(e,t,i,o,u=0){const a=this.creators.get(e);if(!a)return console.warn(`Effect type '${e}' not registered`),null;try{const l=a.create(t,i,this.layerSystem);if(!l)return null;const y={id:`effect_${this.nextId++}`,type:e,effect:l,priority:u,enabled:!0};return this.effects.set(y.id,y),y}catch(l){return console.error(`Error creating effect '${e}':`,l),null}}createEffectFromPythonData(e,t,i,o,u=0){const a=this.creators.get(e);if(!a||!a.fromPythonData)return this.createEffect(e,t,i,o,u);try{const l=a.fromPythonData(t,i,this.layerSystem);if(!l)return null;const y={id:`effect_${this.nextId++}`,type:e,effect:l,priority:u,enabled:!0};return this.effects.set(y.id,y),y}catch(l){return console.error(`Error creating effect '${e}' from Python data:`,l),null}}createEffectsFromList(e,t,i){const o=[],u=e.sort((a,l)=>(a.priority||0)-(l.priority||0));for(const a of u){const l=this.createEffect(a.type,a.params,t,i,a.priority);l&&(l.enabled=a.enabled!==!1,o.push(l))}return o}createEffectsFromPythonPlanetData(e,t,i,o,u){const a=[];try{const l=w(e);if(u?this.layerSystem=u:this.layerSystem=new Oe(i,l),e.surface_elements){const r=e.surface_elements;if(r.effects_3d&&Array.isArray(r.effects_3d))for(const _ of r.effects_3d){if(_.type==="atmospheric_streaks"){const S=ne(t,_.params,e.seeds?.shape_seed+3e3),b={id:`effect_${this.nextId++}`,type:"atmospheric_streaks",effect:S,priority:_.priority||0,enabled:!0,name:"Atmospheric Streaks"};this.effects.set(b.id,b),a.push(b),S.addToScene(o,i.position);continue}const g=this.createEffect(_.type,_.params,t,i,_.priority||0);g?(g.name=_.type.replace(/_/g," ").replace(/\b\w/g,S=>S.toUpperCase()),a.push(g),g.effect.apply&&g.effect.apply(i),g.effect.addToScene&&g.effect.addToScene(o,i.position)):console.error("❌ FALLO AL CREAR EFECTO:",_.type)}switch(r.type.toLowerCase()){case"gas_giant":if(this.layerSystem){const s=te(this.layerSystem,{...r,base_color:l,turbulence:e.turbulence||r.turbulence},e.seeds?.shape_seed||e.seeds?.planet_seed||e.seeds?.planet_seed),c=re(this.layerSystem,{...r,base_color:l,storm_intensity:e.storm_intensity||r.storm_intensity},(e.seeds?.shape_seed||e.seeds?.planet_seed)+1e3),f={id:`effect_${this.nextId++}`,type:"cloud_bands_layer",effect:s,priority:0,enabled:!0};this.effects.set(f.id,f),a.push(f);const d={id:`effect_${this.nextId++}`,type:"cloud_gyros_layer",effect:c,priority:1,enabled:!0};if(this.effects.set(d.id,d),a.push(d),r.polar_hexagon&&r.polar_hexagon.enabled){const n=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,m=new Q({planetColor:l,hexagonData:r.polar_hexagon,planetRadius:t,currentTime:n}),E={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:m,priority:10,enabled:!0};this.effects.set(E.id,E),a.push(E),o&&m.addToScene(o)}}else console.error("❌ PlanetLayerSystem not initialized!");break;case"frozen_gas_giant":if(this.layerSystem){const s=te(this.layerSystem,{...r,base_color:l,turbulence:e.turbulence||r.turbulence,icy_tint:!0},e.seeds?.shape_seed||e.seeds?.planet_seed),c={id:`effect_${this.nextId++}`,type:"cloud_bands_layer",effect:s,priority:0,enabled:!0};if(this.effects.set(c.id,c),a.push(c),r.polar_hexagon&&r.polar_hexagon.enabled){const f=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,d=new Q({planetColor:l,hexagonData:r.polar_hexagon,planetRadius:t,currentTime:f}),n={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:d,priority:10,enabled:!0};this.effects.set(n.id,n),a.push(n),o&&d.addToScene(o)}}break;case"aquifer":const _=me(this.layerSystem,e);if(_){const s={id:`effect_${this.nextId++}`,type:"aquifer_water",effect:_,priority:2,enabled:!0,name:"Aquifer Water Surface"};this.effects.set(s.id,s),a.push(s)}const g=_e(this.layerSystem,e);if(g){const s={id:`effect_${this.nextId++}`,type:"ocean_currents",effect:g,priority:1,enabled:!0,name:"Ocean Currents"};this.effects.set(s.id,s),a.push(s)}if(r.clouds&&r.clouds.length>0){const s=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),c={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}if(r.land_masses&&r.land_masses.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+7e3);if(s){const c={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:3,enabled:!0,name:"Emergent Land Masses"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}}if(r.atmosphere_clouds&&r.atmosphere_clouds.length>0){const s=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+8e3,e.timing?.cosmic_origin_time);if(s){const c={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:4,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}}break;case"nebulous":if(this.layerSystem){const s=re(this.layerSystem,{...r,base_color:l,storm_intensity:r.nebula_density||.6,color_variance:r.color_variance||.2},(e.seeds?.shape_seed||e.seeds?.planet_seed)+2e3),c={id:`effect_${this.nextId++}`,type:"cloud_gyros_layer",effect:s,priority:0,enabled:!0};if(this.effects.set(c.id,c),a.push(c),r.polar_hexagon&&r.polar_hexagon.enabled){const f=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,d=new Q({planetColor:l,hexagonData:r.polar_hexagon,planetRadius:t,currentTime:f}),n={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:d,priority:10,enabled:!0};this.effects.set(n.id,n),a.push(n),o&&d.addToScene(o)}}break;case"metallic":case"metallic_3d":if(this.layerSystem){const s=qe(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),c={id:`effect_${this.nextId++}`,type:"metallic_surface_layer",effect:s,priority:0,enabled:!0};this.effects.set(c.id,c),a.push(c)}break;case"diamond":if(this.layerSystem){const s=Ve(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),c={id:`effect_${this.nextId++}`,type:"diamond_surface_layer",effect:s,priority:0,enabled:!0};this.effects.set(c.id,c),a.push(c);const f=ie(e,t,e.seeds?.shape_seed||e.seeds?.planet_seed),d={id:`effect_${this.nextId++}`,type:"diamond_cracks",effect:f,priority:1,enabled:!0};if(this.effects.set(d.id,d),a.push(d),f.addToScene(o,i.position),r.clouds&&r.clouds.length>0){const n=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),m={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:n,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(m.id,m),a.push(m),n.addToScene(o,i.position)}}break;case"rocky":if(this.layerSystem){const s=ce(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed,"ROCKY"),c={id:`effect_${this.nextId++}`,type:"rocky_terrain_layer",effect:s,priority:0,enabled:!0};if(this.effects.set(c.id,c),a.push(c),r.clouds&&r.clouds.length>0){const f=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),d={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:f,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(d.id,d),a.push(d),f.addToScene(o,i.position)}}break;case"icy":if(this.layerSystem){const s=We(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),c={id:`effect_${this.nextId++}`,type:"icy_terrain_layer",effect:s,priority:0,enabled:!0};this.effects.set(c.id,c),a.push(c);const f=Ce(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+8e3);if(f){const n={id:`effect_${this.nextId++}`,type:"transparent_land_masses",effect:f,priority:1,enabled:!0,name:"Ice Formations"};this.effects.set(n.id,n),a.push(n),f.addToScene(o,i.position)}else console.warn("❄️ Failed to create transparent LandMasses for Icy planet");if(r.clouds&&r.clouds.length>0){const n=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),m={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:n,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(m.id,m),a.push(m),n.addToScene(o,i.position)}const d=ee(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+9e3);if(d){const n={id:`effect_${this.nextId++}`,type:"icy_features",effect:d,priority:2,enabled:!0,name:"Ice Crystals & Features"};this.effects.set(n.id,n),a.push(n),d.addToScene(o,i.position)}}break;case"oceanic":const S=le(t,e);if(S){const s={id:`effect_${this.nextId++}`,type:"fluid_layers",effect:S,priority:3,enabled:!0,name:"Fluid Ocean Layers"};this.effects.set(s.id,s),a.push(s),S.addToScene(o,i.position)}if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(s){const c={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:5,enabled:!0,name:"Land Masses (Islands)"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}}if(r.clouds&&r.clouds.length>0){const s=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),c={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}break;case"tundra":if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(s){const c={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:5,enabled:!0,name:"Tundra Terrain"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}}const b=ee(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+9e3);if(b){const s={id:`effect_${this.nextId++}`,type:"icy_features",effect:b,priority:6,enabled:!0,name:"Snow Patches & Ice"};this.effects.set(s.id,s),a.push(s),b.addToScene(o,i.position)}if(r.clouds&&r.clouds.length>0){const s=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),c={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}const M=se(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+15e3);if(M){const s={id:`effect_${this.nextId++}`,type:"tundra_snowflakes",effect:M,priority:20,enabled:!0,name:"Snowflakes"};this.effects.set(s.id,s),a.push(s),M.addToScene(o,i.position)}break;case"arid":let P;if(r.clouds&&r.clouds.length>0?P=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time):P=new Y(t,{color:new X(.9,.8,.7),cloudCount:20,size:4.2,opacity:.7,density:1.2,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,rotationSpeed:.004,movementAmplitude:.012,puffiness:1.3,timeSpeed:1}),P){const s={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:P,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(s.id,s),a.push(s),P.addToScene(o,i.position)}let F;if(r.green_patches&&r.green_patches.length>0){const s={...r,green_patches:r.green_patches.map(c=>({...c,color:[.5,0,0,c.color?.[3]||1]}))};F=h(t,s,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3)}else F=new K(t,{seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3,greenPatches:Array.from({length:25},(s,c)=>{const f=(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3+c*100,d=Math.sin(f)*.5+.5,n=Math.acos(1-2*(c+d)/25),m=2*Math.PI*(c*2.399%1);let E;return c<8?E=.25+d*.25:c<16?E=.15+d*.15:E=.08+d*.12,{position_3d:[Math.sin(n)*Math.cos(m),Math.sin(n)*Math.sin(m),Math.cos(n)],size:E,sides:12+Math.floor(d*16),color:[.5,0,0,.7+d*.2]}})});if(F){const s={id:`effect_${this.nextId++}`,type:"land_masses",effect:F,priority:5,enabled:!0,name:"Arid Terrain"};this.effects.set(s.id,s),a.push(s),F.addToScene(o,i.position)}const L=J(t,r,e.seeds?.shape_seed||e.seeds?.planet_seed);if(L){const s={id:`effect_${this.nextId++}`,type:"river_lines",effect:L,priority:6,enabled:!0,name:"Dried River Channels"};this.effects.set(s.id,s),a.push(s),L.addToScene(o,i.position)}break;case"molten_core":case"molten core":const Z=ue(this.layerSystem,e);if(Z){const s={id:`effect_${this.nextId++}`,type:"molten_lava",effect:Z,priority:2,enabled:!0,name:"Molten Lava Surface"};this.effects.set(s.id,s),a.push(s)}const $=pe(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+9e3);if($){const s={id:`effect_${this.nextId++}`,type:"lava_flows",effect:$,priority:4,enabled:!0,name:"Lava Flows & Fire Whips"};this.effects.set(s.id,s),a.push(s),$.addToScene(o,i.position)}const A=this.createEffectFromPythonData("fire_eruption",e,t,i)?.effect;if(A){const s={id:`effect_${this.nextId++}`,type:"fire_eruption",effect:A,priority:15,enabled:!0,name:"Fire Eruptions"};this.effects.set(s.id,s),a.push(s),A.addToScene(o,i.position)}if(r.green_patches&&r.green_patches.length>0){const s={...r,green_patches:r.green_patches.map(f=>({...f,color:[1,.55,0,f.color?.[3]||.9]}))},c=h(t,s,(e.seeds?.planet_seed||e.seeds?.shape_seed)+1e4);if(c){const f={id:`effect_${this.nextId++}`,type:"land_masses",effect:c,priority:3,enabled:!0,name:"Incandescent Land Masses"};this.effects.set(f.id,f),a.push(f),c.addToScene(o,i.position)}}if(r.clouds&&r.clouds.length>0){const s=p(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+4e3,e.timing?.cosmic_origin_time),c={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Molten Atmospheric Clouds"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}break;case"lava":const k=this.createEffectFromPythonData("lava_rivers",e,t,i)?.effect;if(k){const s={id:`effect_${this.nextId++}`,type:"lava_rivers",effect:k,priority:8,enabled:!0,name:"Lava Rivers"};this.effects.set(s.id,s),a.push(s),k.addToScene(o,i.position)}const G=this.createEffectFromPythonData("fire_eruption",e,t,i)?.effect;if(G){const s={id:`effect_${this.nextId++}`,type:"fire_eruption",effect:G,priority:12,enabled:!0,name:"Lava Planet Fire Eruptions"};this.effects.set(s.id,s),a.push(s),G.addToScene(o,i.position)}if(r.green_patches&&r.green_patches.length>0){const s={...r,green_patches:r.green_patches.map(f=>({...f,color:[.8,.3,0,f.color?.[3]||.7]}))},c=h(t,s,(e.seeds?.planet_seed||e.seeds?.shape_seed)+11e3);if(c){const f={id:`effect_${this.nextId++}`,type:"land_masses",effect:c,priority:3,enabled:!0,name:"Lava Land Masses"};this.effects.set(f.id,f),a.push(f),c.addToScene(o,i.position)}}if(r.clouds&&r.clouds.length>0){const s=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+7e3,e.timing?.cosmic_origin_time);if(s){const c={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:16,enabled:!0,name:"Volcanic Ash Clouds"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}}break;case"exotic":if(r.clouds&&r.clouds.length>0){const s=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time),c={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Exotic Atmospheric Clouds"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}const z=ae(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3,l);if(z){const s={id:`effect_${this.nextId++}`,type:"exotic_geometric_shapes",effect:z,priority:10,enabled:!0,name:"Exotic Geometric Shapes"};this.effects.set(s.id,s),a.push(s),z.addToScene(o,i.position)}const O=oe(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3,e);if(O){const s={id:`effect_${this.nextId++}`,type:"exotic_doodles",effect:O,priority:12,enabled:!0,name:"Exotic Doodles"};this.effects.set(s.id,s),a.push(s),O.addToScene(o,i.position)}break;case"cave":let v;if(r.atmosphere_clouds&&r.atmosphere_clouds.clouds&&r.atmosphere_clouds.clouds.length>0?v=p(t,r.atmosphere_clouds,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time):v=new Y(t,{color:new X(.75,.75,.75),cloudCount:12,size:3.5,opacity:.65,density:.8,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,rotationSpeed:.003,movementAmplitude:.008,puffiness:1.1,timeSpeed:.8}),v){const s={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:v,priority:15,enabled:!0,name:"Cave Atmospheric Clouds"};this.effects.set(s.id,s),a.push(s),v.addToScene(o,i.position)}let x;if(r.green_patches&&r.green_patches.length>0)x=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3);else{const s=new Pe((e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3),c=[];for(let f=0;f<10;f++){const d=s.random()*2*Math.PI,n=Math.acos(s.random()*2-1);let m;f<3?m=.2+s.random()*.2:f<7?m=.12+s.random()*.13:m=.08+s.random()*.07,c.push({position_3d:[Math.sin(n)*Math.cos(d),Math.sin(n)*Math.sin(d),Math.cos(n)],size:m,sides:12+Math.floor(s.random()*8),color:[.29,.25,.21,.75+s.random()*.15]})}x=new K(t,{greenPatches:c,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3})}if(x){const s={id:`effect_${this.nextId++}`,type:"land_masses",effect:x,priority:5,enabled:!0,name:"Cave Land Masses"};this.effects.set(s.id,s),a.push(s),x.addToScene(o,i.position)}if(this.layerSystem){const s=ce(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed,"CAVE"),c={id:`effect_${this.nextId++}`,type:"rocky_terrain_layer",effect:s,priority:1,enabled:!0,name:"Cave Rocky Terrain"};this.effects.set(c.id,c),a.push(c)}const C=fe(t,e,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(C){const s={id:`effect_${this.nextId++}`,type:"cave_surface_holes",effect:C,priority:10,enabled:!0,name:"Cave Surface Holes"};if(this.effects.set(s.id,s),a.push(s),C.addToScene(o,i.position),this.layerSystem){const c=this.layerSystem.baseMaterial?.uniforms?.baseColor?.value||new X(9127187);C.applyToPlanetSystem(this.layerSystem,c)}}const W=J(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+7e3);if(W){const s={id:`effect_${this.nextId++}`,type:"river_lines",effect:W,priority:8,enabled:!0,name:"Cave Drainage Channels"};this.effects.set(s.id,s),a.push(s),W.addToScene(o,i.position)}break;case"anomaly":const R=["anomaly_phase_matter","pulsating_cube","planet_rays"],ge=e.seeds?.planet_seed||Math.floor(Math.random()*1e6),Ee=R.length;for(let s=0;s<Ee;s++){const c=R[s],f=ge+s*1e4,d=this.createEffectFromPythonData(c,{...e,seeds:{...e.seeds,planet_seed:f}},t,i,10+s);d&&(d.name=c.replace(/_/g," ").replace(/\b\w/g,n=>n.toUpperCase()),a.push(d),d.effect.addToScene&&d.effect.addToScene(o,i.position))}if(e.atmosphere&&e.atmosphere.type!=="None"){const s=this.createEffectFromPythonData("atmosphere",e.atmosphere,t,i,5);s&&(a.push(s),s.effect.addToScene(o,i.position))}break;case"carbon":if(r.clouds&&r.clouds.length>0){const s=p(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+4e3,e.timing?.cosmic_origin_time),c={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Carbon Atmospheric Dust"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}if(r.green_patches&&r.green_patches.length>0){const s={...r,green_patches:r.green_patches.map(f=>({...f,color:[.1,.07,.06,f.color?.[3]||.9],size:(f.size||.1)*1.5}))},c=h(t,s,(e.seeds?.planet_seed||e.seeds?.shape_seed)+6e3);if(c){const f={id:`effect_${this.nextId++}`,type:"land_masses",effect:c,priority:5,enabled:!0,name:"Carbon Formations"};this.effects.set(f.id,f),a.push(f),c.addToScene(o,i.position)}}const q=Le(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+15e3);if(q){const s={id:`effect_${this.nextId++}`,type:"tundra_snowflakes",effect:q,priority:20,enabled:!0,name:"Carbon Dust Particles"};this.effects.set(s.id,s),a.push(s),q.addToScene(o,i.position)}const V=this.createEffectFromPythonData("carbon_trails",e,t,i);if(V){const s={id:`effect_${this.nextId++}`,type:"carbon_trails",effect:V.effect,priority:25,enabled:!0,name:"Carbon Gas Trails"};this.effects.set(s.id,s),a.push(s),V.effect.addToScene(o,i.position)}break;case"forest":const B=this.createEffectFromPythonData("vegetation",e,t,i);if(B){const s={id:`effect_${this.nextId++}`,type:"vegetation",effect:B.effect,priority:10,enabled:!0,name:"Forest Vegetation"};this.effects.set(s.id,s),a.push(s),B.effect.addToScene(o,i.position)}if(r.clouds&&r.clouds.length>0){const s=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time);if(s){const c={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Forest Atmospheric Clouds"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}}if(r.green_patches&&r.green_patches.length>0){const s={...r,green_patches:r.green_patches.map(f=>({...f,size:(f.size||.1)*1.5,color:f.color||[.2,.4,.1,1]}))},c=h(t,s,(e.seeds?.planet_seed||e.seeds?.shape_seed)+6e3);if(c){const f={id:`effect_${this.nextId++}`,type:"land_masses",effect:c,priority:5,enabled:!0,name:"Forest Land Masses"};this.effects.set(f.id,f),a.push(f),c.addToScene(o,i.position)}}break;case"magma":const N=this.createEffectFromPythonData("magma_flows",e,t,i);if(N){const s={id:`effect_${this.nextId++}`,type:"magma_flows",effect:N.effect,priority:12,enabled:!0,name:"Magma Flows & Lakes"};this.effects.set(s.id,s),a.push(s),N.effect.addToScene(o,i.position)}const H=this.createEffectFromPythonData("magma_eruptions",e,t,i);if(H){const s={id:`effect_${this.nextId++}`,type:"magma_eruptions",effect:H.effect,priority:13,enabled:!0,name:"Magma Eruptions & Arcs"};this.effects.set(s.id,s),a.push(s),H.effect.addToScene(o,i.position)}if(r.clouds&&r.clouds.length>0){const s=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,e.timing?.cosmic_origin_time);if(s){const c={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Magma Atmospheric Clouds"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}}if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+6e3);if(s){const c={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:5,enabled:!0,name:"Magmatic Land Masses"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}}break;case"radioactive":if(r.clouds&&r.clouds.length>0){const s=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3,e.timing?.cosmic_origin_time),c={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Radioactive Toxic Clouds"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(s){const c={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:10,enabled:!0,name:"Radioactive Contaminated Areas"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}}const U=this.createEffectFromPythonData("radiation_rings",e,t,i);if(U){const s={id:`effect_${this.nextId++}`,type:"radiation_rings",effect:U.effect,priority:21,enabled:!0,name:"Radioactive Surface Rings"};this.effects.set(s.id,s),a.push(s),U.effect.addToScene(o,i.position)}break;case"super_earth":if(r.clouds&&r.clouds.length>0){const s=p(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+8e3,e.timing?.cosmic_origin_time);if(s){const c={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:s,priority:15,enabled:!0,name:"Super Earth Dense Atmosphere"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}}if(r.green_patches&&r.green_patches.length>0){const s=h(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+9e3);if(s){const c={id:`effect_${this.nextId++}`,type:"land_masses",effect:s,priority:5,enabled:!0,name:"Super Earth Massive Continents"};this.effects.set(c.id,c),a.push(c),s.addToScene(o,i.position)}}const j=us(t,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+11e3);if(j){const s={id:`effect_${this.nextId++}`,type:"super_earth_water_features",effect:j,priority:6,enabled:!0,name:"Super Earth Water Features"};this.effects.set(s.id,s),a.push(s),j.addToScene(o,i.position)}break;default:if(e.planet_info?.type?.toLowerCase()==="anomaly"){const c=["anomaly_phase_matter","pulsating_cube","planet_rays"],f=e.seeds?.planet_seed||Math.floor(Math.random()*1e6),d=c.length;for(let n=0;n<d;n++){const m=c[n],E=f+n*1e4,T=this.createEffectFromPythonData(m,{...e,seeds:{...e.seeds,planet_seed:E}},t,i,10+n);T&&(T.name=m.replace(/_/g," ").replace(/\b\w/g,Se=>Se.toUpperCase()),a.push(T),T.effect.addToScene&&T.effect.addToScene(o,i.position))}if(e.atmosphere&&e.atmosphere.type!=="None"){const n=this.createEffectFromPythonData("atmosphere",e.atmosphere,t,i,5);n&&(a.push(n),n.effect.addToScene(o,i.position))}}else if(i.material instanceof he){const s=w(e);i.material.color.copy(s)}break}}else if(i.material instanceof he){const r=w(e);i.material.color.copy(r)}const y=e.planet_info?.type?.toLowerCase()||e.surface_elements?.type?.toLowerCase(),ye=y==="anomaly"||e.surface_elements?.type==="anomaly";if(e.atmosphere&&!ye){if(e.atmosphere.streaks||["Gas Giant","Frozen Gas Giant"].includes(e.planet_info?.type)){const r=D(t,e.atmosphere||{},e.seeds?.shape_seed+2e3);if(r){const _={id:`effect_${this.nextId++}`,type:"atmosphere_glow",effect:r,priority:20,enabled:!0};this.effects.set(_.id,_),a.push(_),r.addToScene(o,i.position)}}if(e.atmosphere.type&&e.atmosphere.type!=="None"){const r={...e.atmosphere};y==="oceanic"&&(r.opacity=Math.min(r.opacity||.3,.15),r.width=Math.min(r.width||15,8));const _=this.createEffectFromPythonData("atmosphere",r,t,i,5);_&&(a.push(_),_.effect.addToScene(o,i.position))}}if(e.rings&&e.rings.has_rings||["Gas Giant","Frozen Gas Giant","Super Earth"].includes(e.planet_info?.type)){const r=this.createEffectFromPythonData("ring_system",e,t,i,1);r?(a.push(r),r.effect.addToScene(o,i.position)):console.warn("⚠️ Failed to create ring effect")}if(e.surface_elements?.has_fragmentation_zones){const r=this.createEffectFromPythonData("fragmentation",e,t,i,5);r&&(a.push(r),r.effect.addToScene(o,i.position))}this.layerSystem&&this.layerSystem.addToScene(o);try{const r=this.createEffectFromPythonData("star_field",e,t,i,-100);r&&r.effect&&(r.effect.addToScene(o,i.position),a.push(r))}catch(r){console.warn("Could not create StarField:",r)}return a.forEach((r,_)=>{}),a.length===0&&console.warn("⚠️ NO EFFECTS WERE CREATED! Check the data structure and conditions."),a}catch(l){throw console.error("Error in EffectRegistry.createEffectsFromPythonPlanetData:",l),l}}getEffect(e){return this.effects.get(e)||null}getEffectsByType(e){return Array.from(this.effects.values()).filter(t=>t.type===e)}getAllEffects(){return Array.from(this.effects.values())}toggleEffect(e,t){const i=this.effects.get(e);if(i){i.enabled=t!==void 0?t:!i.enabled;const o=i.effect;if(o&&o.getObject3D){const u=o.getObject3D();u&&(u.visible=i.enabled)}if(this.layerSystem){const u=this.layerSystem.getLayerMeshes(),l={cloud_bands_layer:"cloudBands",cloud_gyros_layer:"cloudGyros",metallic_surface_layer:"metallicSurface",diamond_surface_layer:"diamondSurface",rocky_terrain_layer:"rockyTerrain",icy_terrain_layer:"icyTerrain",aquifer_water:"aquiferWater",ocean_currents:"oceanCurrents",molten_lava:"moltenLava"}[i.type];l&&u[l]&&(u[l].visible=i.enabled)}}else console.warn(`⚠️ Effect not found: ${e}`)}updateAllEffects(e,t){this.layerSystem&&this.layerSystem.update(e,t);for(const i of this.effects.values())if(i.enabled&&i.effect.update)try{i.effect.update(e,t)}catch(o){console.error(`Error updating effect ${i.type}:`,o)}}updateLightForAllEffects(e){this.layerSystem&&this.layerSystem.updateFromThreeLight(e);for(const t of this.effects.values())if(t.enabled&&t.effect.updateFromThreeLight)try{t.effect.updateFromThreeLight(e)}catch(i){console.error(`Error updating light for effect ${t.type}:`,i)}}removeEffect(e){const t=this.effects.get(e);t&&(t.effect.dispose&&t.effect.dispose(),this.effects.delete(e))}clearAllEffects(){this.layerSystem&&(this.layerSystem.dispose(),this.layerSystem=void 0);for(const e of this.effects.values())e.effect.dispose&&e.effect.dispose();this.effects.clear(),this.nextId=1}getStats(){const e=Array.from(this.effects.values());return{registeredTypes:this.creators.size,activeEffects:e.length,enabledEffects:e.filter(t=>t.enabled).length}}getAvailableEffectTypes(){return Array.from(this.creators.keys())}}const at=I.getInstance();export{at as e};
