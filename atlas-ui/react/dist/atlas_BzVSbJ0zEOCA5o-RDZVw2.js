import{S as E,g as _,D as B}from"./atlas_DxIUfhfJiL6S17-iYXL6q.js";import{G as W,C as o,V as k,n as A,T as F,a as L,z as N,N as X,M as U}from"./atlas_DhOIq2w9B2IVYJei_u5Oy.js";class R{snowflakeGroup;planetRadius;materials=[];particleSystems=[];trailPositions=[];trailColors=[];globalWindDirection;rng;startTime;timeSpeed;trailLength=15;particleCount;rotationSpeed;particleOpacity;windSpeedMultiplier;verticalOscillation;gustCycles;gustPhases;gustZones;burstZone;burstCycleDuration;burstDuration;burstStartOffset;constructor(s,i={}){this.snowflakeGroup=new W,this.planetRadius=s;const c=i.seed||Math.floor(Math.random()*1e6);this.rng=new E(c),this.particleCount=i.particleCount||10,i.windSpeed;const p=(i.size||1)*(s*.2),a=i.opacity||1;this.globalWindDirection=this.rng.uniform(0,Math.PI*2),this.startTime=this.rng.uniform(0,1e3),this.timeSpeed=this.rng.uniform(2,4),this.rotationSpeed=this.rng.uniform(.2,.8),this.particleOpacity=this.rng.uniform(.05,.25),this.windSpeedMultiplier=this.rng.uniform(1.1,2.5),this.verticalOscillation=this.rng.uniform(.1,.4),this.gustCycles=[],this.gustPhases=[],this.gustZones=[];for(let h=0;h<this.particleCount;h++){this.gustCycles.push(this.rng.uniform(15,30)),this.gustPhases.push(this.rng.uniform(0,1));const r=this.rng.uniform(0,Math.PI*2),e=this.rng.uniform(Math.PI*.3,Math.PI*.6);this.gustZones.push({start:r,end:(r+e)%(Math.PI*2)})}this.burstZone={lat:this.rng.uniform(-Math.PI/3,Math.PI/3),lon:this.rng.uniform(0,Math.PI*2),radius:this.rng.uniform(1.2,2)},this.burstCycleDuration=this.rng.uniform(45,75),this.burstDuration=this.rng.uniform(8,15),this.burstStartOffset=this.rng.uniform(0,this.burstCycleDuration);const t=i.colors||[new o(1,1,1),new o(.9,.9,.9),new o(.7,.7,.7),new o(.5,.5,.5),new o(.3,.3,.3)];this.createSnowflakeSystem(this.particleCount,p,a,t)}createSnowflakeSystem(s,i,c,p){const a=[];for(let r=0;r<s;r++){let e,f,g,C=0;do{const M=(this.rng.uniform(-1,1)+this.rng.uniform(-1,1))*.2,O=this.rng.uniform(-1,1)*this.burstZone.radius;e=Math.max(0,Math.min(Math.PI,this.burstZone.lat+Math.PI/2+M)),f=(this.burstZone.lon+O)%(Math.PI*2);const I=Math.abs(e-(this.burstZone.lat+Math.PI/2)),b=Math.min(Math.abs(f-this.burstZone.lon),Math.PI*2-Math.abs(f-this.burstZone.lon));g=Math.max(I/.3,b/this.burstZone.radius),C++}while(g>1&&C<10);g>1&&(e=this.burstZone.lat+Math.PI/2+this.rng.uniform(-.1,.1),f=this.burstZone.lon+this.rng.uniform(-this.burstZone.radius,this.burstZone.radius));const d=this.planetRadius*this.rng.uniform(1.001,1.005),n=d*Math.sin(e)*Math.cos(f),Z=d*Math.cos(e),v=d*Math.sin(e)*Math.sin(f);a.push(n,Z,v)}const t=[],h=new o;for(let r=0;r<this.trailLength;r++){const e=Math.pow(1-r/(this.trailLength-1),1.5);h.setRGB(e,e,e),t.push(h.r,h.g,h.b)}for(let r=0;r<s;r++){const e=r*3,f=a[e],g=a[e+1],C=a[e+2],d=new Float32Array(this.trailLength*3),n=[];for(let u=0;u<this.trailLength;u++){const y=u*.1,w=f+this.rng.uniform(-1,1)*y*this.planetRadius*.01,S=g+this.rng.uniform(-1,1)*y*this.planetRadius*.01,z=C+this.rng.uniform(-1,1)*y*this.planetRadius*.01;d[u*3]=w,d[u*3+1]=S,d[u*3+2]=z,n.push(new k(w,S,z))}const Z=new A(n,!1),v=this.planetRadius*.003,M=3,O=Math.max(8,this.trailLength-1),I=new F(Z,O,v,M,!1),b=new Float32Array(I.attributes.position.count*3),G=I.attributes.uv.array;for(let u=0;u<b.length/3;u++){const y=G[u*2],w=Math.pow(1-y,1.5);b[u*3]=w,b[u*3+1]=w,b[u*3+2]=w}I.setAttribute("color",new L(b,3));const D=new N({vertexColors:!0,transparent:!0,opacity:this.particleOpacity,blending:X,depthTest:!0}),m=new U(I,D);this.materials.push(D),this.particleSystems.push(m),this.trailPositions.push(d),this.trailColors.push(new Float32Array(t)),m.rnd=this.rng.uniform(0,1),m.particleIndex=r,m.tubeRadius=v,m.tubularSegments=O,m.radialSegments=M,this.snowflakeGroup.add(m)}}update(s=.016){const c=_(B,this.timeSpeed,this.startTime),a=(Date.now()/1e3+this.burstStartOffset)%this.burstCycleDuration;a<this.burstDuration&&a/this.burstDuration,this.snowflakeGroup.visible=!0,this.particleSystems.forEach((t,h)=>{const r=t.rnd,e=t.particleIndex,f=t.tubeRadius,g=t.tubularSegments,C=t.radialSegments,d=this.calculateTrailPath(c,e,r),n=this.trailPositions[h];for(let l=this.trailLength-1;l>0;l--){const x=l*3,T=(l-1)*3;n[x]=n[T],n[x+1]=n[T+1],n[x+2]=n[T+2]}n[0]=d.x,n[1]=d.y,n[2]=d.z;const Z=[];for(let l=0;l<this.trailLength;l++)Z.push(new k(n[l*3],n[l*3+1],n[l*3+2]));const v=new A(Z,!1);t.geometry.dispose(),t.geometry=new F(v,g,f,C,!1);const M=new Float32Array(t.geometry.attributes.position.count*3),O=t.geometry.attributes.uv.array;for(let l=0;l<M.length/3;l++){const x=O[l*2],T=Math.pow(1-x,1.5);M[l*3]=T,M[l*3+1]=T,M[l*3+2]=T}t.geometry.setAttribute("color",new L(M,3));const I=Date.now()/1e3,b=this.gustCycles[h],G=this.gustPhases[h],D=(I/b+G)%1;let m=0;D<.3?m=D/.3:D<.7?m=1:m=(1-D)/.3;const u=new k(n[0],n[1],n[2]),y=Math.atan2(u.z,u.x),w=y<0?y+Math.PI*2:y,S=this.gustZones[h];let z=!1;S.start<S.end?z=w>=S.start&&w<=S.end:z=w>=S.start||w<=S.end,this.materials[h].opacity=z?this.particleOpacity*m:0})}calculateTrailPath(s,i,c){s+=10*c+i*.1;const p=this.burstZone.lon+(c-.5)*this.burstZone.radius,a=this.burstZone.lat+Math.PI/2+(c-.5)*.2,t=this.windSpeedMultiplier,h=s*t,r=p+Math.cos(this.globalWindDirection)*h,e=a+this.verticalOscillation*Math.sin(s*.5+c),f=.015*Math.sin(s*2+c*10),g=this.planetRadius*(1.005+f),C=g*Math.sin(e)*Math.cos(r),d=g*Math.cos(e),n=g*Math.sin(e)*Math.sin(r);return{x:C,y:d,z:n}}addToScene(s,i){i&&this.snowflakeGroup.position.copy(i),s.add(this.snowflakeGroup)}getObject3D(){return this.snowflakeGroup}dispose(){this.materials.forEach(s=>s.dispose()),this.particleSystems.forEach(s=>s.geometry.dispose()),this.materials=[],this.particleSystems=[],this.trailPositions=[],this.trailColors=[],this.snowflakeGroup.clear()}}function H(P,s,i){if(s.type!=="tundra")return null;const c=i||Math.floor(Math.random()*1e6),p=s.snow_intensity||.7,a=s.wind_strength||1,t=Math.floor(p*200+50),h=a*5;return new R(P,{particleCount:t,windSpeed:h,size:1.2,opacity:.9,seed:c+15e3})}function Y(P,s,i){const c=i||Math.floor(Math.random()*1e6),p=[new o(.8,.7,.6),new o(.9,.8,.7),new o(.6,.5,.4),new o(1,.9,.8),new o(.7,.6,.5)],a=15,t=2.5;return new R(P,{particleCount:a,windSpeed:t,size:1.5,opacity:1,colors:p,seed:c+15e3})}function q(P,s,i){const c=i||Math.floor(Math.random()*1e6),p=[new o(.9,.8,.6),new o(.8,.7,.5),new o(.7,.6,.4),new o(1,.9,.7),new o(.6,.5,.3)],a=12,t=3.5;return new R(P,{particleCount:a,windSpeed:t,size:1.3,opacity:.8,colors:p,seed:c+15e3})}function J(P,s,i){const c=i||Math.floor(Math.random()*1e6),p=[new o(.5,0,.8),new o(.7,.2,.7),new o(.4,0,.6),new o(.8,0,.8),new o(.3,.6,.3)],a=18,t=2.8;return new R(P,{particleCount:a,windSpeed:t,size:1.1,opacity:.7,colors:p,seed:c+15e3})}export{R as T,J as a,Y as b,H as c,q as d};
