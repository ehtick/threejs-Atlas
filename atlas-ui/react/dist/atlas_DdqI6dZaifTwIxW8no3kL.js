import{D as I,S as M}from"./atlas_devLC-KyT9W7vfPUn064J.js";import{G as A,C as g,q as P,V as u,J as y,b as _,l as R,K as D,H as F,M as v,A as L,i as x}from"./atlas_B2lpKXcKkLCAPkjGiW29w.js";const h={COMPONENT_COUNT:{min:32,max:200},COMPONENT_SIZE:{min:.01,max:.02},ORBITAL_RADIUS:{min:1.4,max:3.5},ASSEMBLY_DURATION:{min:8,max:15},FIRING_DURATION:{min:3,max:7},DISASSEMBLY_DURATION:{min:5,max:10},WAIT_DURATION:{min:10,max:20},CYCLE_OFFSET:{min:0,max:30}};var E=(b=>(b.SAUCER_BASE="saucer_base",b.SAUCER_TOP="saucer_top",b.COMMAND_DOME="command_dome",b.ENGINE_RING="engine_ring",b.WEAPON_ARRAY="weapon_array",b.ANTENNA="antenna",b))(E||{});const B=[{name:"compact_mothership",isSpecial:!0,rarity:1,components:[{type:"saucer_base",position:[0,0,0],rotation:[0,0,0]},{type:"saucer_top",position:[0,.08,0],rotation:[0,0,0]},{type:"command_dome",position:[0,.18,0],rotation:[0,0,0]},{type:"engine_ring",position:[0,-.05,0],rotation:[0,0,0]},{type:"weapon_array",position:[.4,.02,0],rotation:[0,0,0]},{type:"antenna",position:[0,.25,0],rotation:[0,0,0]}]}];class U{group;components=[];constructionSites=[];params;rng;planetRadius;cosmicOffset;materials={};constructor(t,s={}){this.planetRadius=t;const o=s.seed||Math.floor(Math.random()*1e6);this.rng=new M(o),this.params={color:s.color||[.8,.85,.9],componentCount:s.componentCount||Math.floor(this.rng.random()*(h.COMPONENT_COUNT.max-h.COMPONENT_COUNT.min)+h.COMPONENT_COUNT.min),componentSize:s.componentSize||this.rng.random()*(h.COMPONENT_SIZE.max-h.COMPONENT_SIZE.min)+h.COMPONENT_SIZE.min,orbitalRadius:s.orbitalRadius||this.rng.random()*(h.ORBITAL_RADIUS.max-h.ORBITAL_RADIUS.min)+h.ORBITAL_RADIUS.min,constructionSpeed:s.constructionSpeed||1,cosmicOriginTime:s.cosmicOriginTime||I,seed:o},this.cosmicOffset=o%100*.1,this.group=new A,this.createMaterials(),this.initializeComponents(),this.createConstructionSites(),this.preAssignComponentsToSites(),this.initializeToCurrentState()}createMaterials(){new g(this.params.color[0],this.params.color[1],this.params.color[2]),this.materials.steel=new P({color:new g(.85,.85,.9),specular:new g(1,1,1),shininess:200,reflectivity:.8}),this.materials.titanium=new P({color:new g(.75,.75,.8),specular:new g(.95,.95,1),shininess:180,reflectivity:.7}),this.materials.copper=new P({color:new g(.8,.8,.85),specular:new g(1,1,1),shininess:250,emissive:new g(.05,.05,.08)}),this.materials.glowing=new P({color:new g(.9,.9,.95),specular:new g(1,1,1),shininess:300,emissive:new g(.1,.1,.15),transparent:!0,opacity:.95})}initializeComponents(){const t=this.params.componentCount,s=this.planetRadius*this.params.orbitalRadius,o=this.planetRadius*this.params.componentSize;for(let e=0;e<t;e++){const r=this.getRandomComponentType(),i=this.createComponentMesh(r,o),n=this.rng.random()*Math.PI*2,a=s+(this.rng.random()-.5)*s*.3,l=(this.rng.random()-.5)*s*.6,m=new u(Math.cos(n)*a,l,Math.sin(n)*a);i.position.copy(m),i.rotation.set(this.rng.random()*Math.PI*2,this.rng.random()*Math.PI*2,this.rng.random()*Math.PI*2);const p={id:e,mesh:i,type:r,state:"free_move",targetPosition:m.clone(),targetRotation:new y(0,0,0),originalPosition:m.clone(),originalRotation:new y(this.rng.random()*Math.PI*2,this.rng.random()*Math.PI*2,this.rng.random()*Math.PI*2),velocity:new u((this.rng.random()-.5)*.01,(this.rng.random()-.5)*.01,(this.rng.random()-.5)*.01),assemblyProgress:0,orbitalRadius:a,orbitalSpeed:(this.rng.random()*.3+.1)*(this.rng.random()>.5?1:-1),orbitalPhase:n,orbitalInclination:(this.rng.random()-.5)*Math.PI*.4,rotationSpeed:new u((this.rng.random()-.5)*.02,(this.rng.random()-.5)*.015,(this.rng.random()-.5)*.02)};this.components.push(p),this.group.add(i)}}getRandomComponentType(){const t=Object.values(E);return t[Math.floor(this.rng.random()*t.length)]}createComponentMesh(t,s){let o,e;switch(t){case"saucer_base":o=new R(s*8,s*8.5,s*1.2,32),e=this.materials.steel;break;case"saucer_top":o=new R(s*5,s*5.5,s*.8,24),e=this.materials.titanium;break;case"command_dome":o=new _(s*3,16,8,0,Math.PI*2,0,Math.PI/2),e=this.materials.glowing;break;case"engine_ring":o=new F(s*6,s*.8,8,16),e=this.materials.copper;break;case"weapon_array":o=new D(s*.5,s*4,4,8),e=this.materials.titanium;break;case"antenna":o=new R(s*.15,s*.15,s*5,6),e=this.materials.glowing;break;default:o=new _(s,8,8),e=this.materials.steel}return new v(o,e)}createConstructionSites(){const t=B[0],s=t.components.length,o=this.params.componentCount,e=Math.floor(o/s),r=Math.max(1,e),i=this.planetRadius*this.params.orbitalRadius,n=i*.7,a=i*1.3;for(let l=0;l<r;l++){const m=this.rng.random()*Math.PI*2,p=n+this.rng.random()*(a-n),d=(this.rng.random()-.5)*i*.8,c=new u(Math.cos(m)*p,d,Math.sin(m)*p),S=new A;S.position.copy(c);const f=this.rng.random()*(h.ASSEMBLY_DURATION.max-h.ASSEMBLY_DURATION.min)+h.ASSEMBLY_DURATION.min,O=this.rng.random()*(h.FIRING_DURATION.max-h.FIRING_DURATION.min)+h.FIRING_DURATION.min,C=this.rng.random()*(h.DISASSEMBLY_DURATION.max-h.DISASSEMBLY_DURATION.min)+h.DISASSEMBLY_DURATION.min,w=this.rng.random()*(h.WAIT_DURATION.max-h.WAIT_DURATION.min)+h.WAIT_DURATION.min,N=this.rng.random()*(h.CYCLE_OFFSET.max-h.CYCLE_OFFSET.min)+h.CYCLE_OFFSET.min,T={group:S,template:t,position:c,components:[],assemblyDuration:f,firingDuration:O,disassemblyDuration:C,waitDuration:w,cycleOffset:N,totalCycleDuration:f+O+C+w,assignedComponentIds:[]};this.createLaserBeam(T),this.constructionSites.push(T),this.group.add(S)}}createLaserBeam(t){const s=t.position.length()*2,o=.05,e=new R(o,o*1.5,s,16),r=new P({color:new g(.2,.8,1),transparent:!0,opacity:.9,blending:L,emissive:new g(.2,.8,1),emissiveIntensity:2}),i=new v(e,r);i.visible=!1,t.laserBeam=i,this.group.add(i)}preAssignComponentsToSites(){let s=[...this.components.map(o=>o.id).sort((o,e)=>o-e)];for(const o of this.constructionSites){const e=`${o.position.x.toFixed(3)}_${o.position.y.toFixed(3)}_${o.position.z.toFixed(3)}`,r=new M(this.params.seed+e.split("").reduce((a,l)=>a+l.charCodeAt(0),0)),i=Math.min(o.template.components.length,s.length),n=[];for(let a=0;a<i;a++){const l=Math.floor(r.random()*s.length);n.push(s.splice(l,1)[0])}o.assignedComponentIds=n}}initializeToCurrentState(){const t=this.getCurrentCosmicTime();this.constructionSites.forEach(s=>{const o=this.calculateProceduralState(s,t);this.snapToState(s,o,t)})}snapToState(t,s,o){if(s.phase!=="waiting"&&t.components.length===0&&this.assignComponentsToSite(t),t.components.forEach((e,r)=>{const i=t.template.components[r%t.template.components.length],n=this.params.componentSize*this.planetRadius*4,a=t.position.clone().add(new u(i.position[0]*n,i.position[1]*n,i.position[2]*n));let l,m;const p=e.mesh.material;switch(s.phase){case"waiting":l=this.calculateProceduralOrbitalPosition(e,o),m=e.originalRotation.clone(),p.emissive.setHex(0),p.emissiveIntensity=0;break;case"assembling":l=this.calculateProceduralOrbitalPosition(e,o).clone().lerp(a,s.assemblyProgress);const c=new y(i.rotation[0],i.rotation[1],i.rotation[2]);m=new y(e.originalRotation.x+(c.x-e.originalRotation.x)*s.assemblyProgress,e.originalRotation.y+(c.y-e.originalRotation.y)*s.assemblyProgress,e.originalRotation.z+(c.z-e.originalRotation.z)*s.assemblyProgress),p.emissive.setHex(16512),p.emissiveIntensity=.3*s.assemblyProgress;break;case"firing":l=a.clone(),m=new y(i.rotation[0],i.rotation[1],i.rotation[2]),p.emissive.setHex(0),p.emissiveIntensity=0;break;case"disassembling":const S=this.calculateProceduralOrbitalPosition(e,o);l=a.clone().lerp(S,s.disassemblyProgress);const f=new y(i.rotation[0],i.rotation[1],i.rotation[2]);m=new y(f.x+(e.originalRotation.x-f.x)*s.disassemblyProgress,f.y+(e.originalRotation.y-f.y)*s.disassemblyProgress,f.z+(e.originalRotation.z-f.z)*s.disassemblyProgress),p.emissive.setHex(16512),p.emissiveIntensity=.3*(1-s.disassemblyProgress);break}e.mesh.position.copy(l),e.mesh.rotation.copy(m)}),t.laserBeam){const e=t.laserBeam.material,r=this.verifyShipAssembly(t,s,o);if(s.shouldShowLaser&&r)if(t.laserBeam.visible=!0,e.opacity=s.laserOpacity,this.positionLaser(t),s.laserFadeProgress>=.8){const i=(o+t.cycleOffset)*3,n=Math.sin(i)*.3+.7;e.emissiveIntensity=n*2*s.laserFadeProgress}else e.emissiveIntensity=s.laserFadeProgress*2;else t.laserBeam.visible=!1}}getCurrentCosmicTime(){return Date.now()/1e3-(this.params.cosmicOriginTime||I)}update(t){const s=this.getCurrentCosmicTime();this.constructionSites.forEach(o=>{this.updateSiteProcedurally(o,s)}),this.updateFreeMovingComponents(s)}calculateProceduralState(t,s){const e=(s+t.cycleOffset)%t.totalCycleDuration,r=t.assemblyDuration,i=r+t.firingDuration,n=i+t.disassemblyDuration;if(e<r){const a=e,l=a/t.assemblyDuration,m=Math.min(1,Math.max(0,l));return{phase:"assembling",progress:l,shouldShowLaser:!1,laserOpacity:0,absolutePhaseTime:a,cycleTime:e,assemblyProgress:m,disassemblyProgress:0,laserFadeProgress:0}}else if(e<i){const a=e-r,l=a/t.firingDuration,m=.6,p=.6;let d=0,c=0;if(a<m)c=a/m,d=c*.9;else if(a>t.firingDuration-p){const S=t.firingDuration-p;c=1-(a-S)/p,d=c*.9}else c=1,d=.9;return{phase:"firing",progress:l,shouldShowLaser:!0,laserOpacity:d,absolutePhaseTime:a,cycleTime:e,assemblyProgress:1,disassemblyProgress:0,laserFadeProgress:c}}else if(e<n){const a=e-i,l=a/t.disassemblyDuration,m=Math.min(1,Math.max(0,l));return{phase:"disassembling",progress:l,shouldShowLaser:!1,laserOpacity:0,absolutePhaseTime:a,cycleTime:e,assemblyProgress:1-m,disassemblyProgress:m,laserFadeProgress:0}}else{const a=e-n;return{phase:"waiting",progress:a/t.waitDuration,shouldShowLaser:!1,laserOpacity:0,absolutePhaseTime:a,cycleTime:e,assemblyProgress:0,disassemblyProgress:1,laserFadeProgress:0}}}verifyShipAssembly(t,s,o){if(s.phase!=="firing"||s.assemblyProgress<.95||t.components.length<t.template.components.length)return!1;const e=this.planetRadius*this.params.componentSize*2;for(let r=0;r<t.components.length;r++){const i=t.components[r],n=t.template.components[r%t.template.components.length],a=this.params.componentSize*this.planetRadius*4,l=t.position.clone().add(new u(n.position[0]*a,n.position[1]*a,n.position[2]*a));if(this.calculateProceduralOrbitalPosition(i,o).clone().lerp(l,s.assemblyProgress).distanceTo(l)>e)return!1}return!0}updateSiteProcedurally(t,s){const o=this.calculateProceduralState(t,s);this.updateComponentsForPhase(t,o,s);const e=this.verifyShipAssembly(t,o,s);if(t.laserBeam){const r=t.laserBeam.material;if(o.shouldShowLaser&&e)if(t.laserBeam.visible=!0,r.opacity=o.laserOpacity,this.positionLaser(t),o.laserFadeProgress>=.8){const i=(s+t.cycleOffset)*3,n=Math.sin(i)*.3+.7;r.emissiveIntensity=n*2*o.laserFadeProgress}else r.emissiveIntensity=o.laserFadeProgress*2;else t.laserBeam.visible=!1}}positionLaser(t){if(!t.laserBeam)return;const s=new u(0,0,0),o=s.clone().sub(t.position),e=o.length(),r=t.position.clone().add(o.multiplyScalar(.5));t.laserBeam.position.copy(r),t.laserBeam.lookAt(s),t.laserBeam.rotateX(Math.PI/2);const i=t.position.length()*2;t.laserBeam.scale.y=e/i}updateComponentsForPhase(t,s,o){switch(s.phase){case"waiting":break;case"assembling":t.components.length===0&&this.assignComponentsToSite(t),t.components.forEach(e=>{this.updateAssemblingComponentProcedural(e,s.assemblyProgress,t,s,o)});break;case"firing":t.components.forEach(e=>{this.updateAssemblingComponentProcedural(e,s.assemblyProgress,t,s,o)});break;case"disassembling":t.components.forEach(e=>{this.updateDisassemblingComponentProcedural(e,s.disassemblyProgress,t,s,o)});break}}updateFreeMovingComponents(t){this.components.forEach(s=>{this.constructionSites.some(e=>e.components.includes(s)?this.calculateProceduralState(e,t).phase!=="waiting":!1)||this.updateFreeMovingComponent(s,t)})}resetComponentToFreeMove(t){t.state="free_move",t.constructionSite=void 0,t.assemblyProgress=0;const s=t.mesh.material;s.emissive.setHex(0),s.emissiveIntensity=0}assignComponentsToSite(t){const s=t.assignedComponentIds;if(s.length===0)return;const o=s.map(e=>this.components.find(r=>r.id===e)).filter(e=>e!==void 0);t.components=[];for(let e=0;e<o.length;e++){const r=o[e],i=t.template.components[e%t.template.components.length],n=this.params.componentSize*this.planetRadius*4;r.targetPosition=t.position.clone().add(new u(i.position[0]*n,i.position[1]*n,i.position[2]*n)),r.targetRotation=new y(i.rotation[0],i.rotation[1],i.rotation[2]),t.components.push(r)}}updateAssemblingComponentProcedural(t,s,o,e,r){const i=o.components.indexOf(t);if(i===-1)return;const n=o.template.components[i%o.template.components.length],a=this.params.componentSize*this.planetRadius*4,l=o.position.clone().add(new u(n.position[0]*a,n.position[1]*a,n.position[2]*a)),p=this.calculateProceduralOrbitalPosition(t,r).clone().lerp(l,s);t.mesh.position.copy(p);const d=new y(n.rotation[0],n.rotation[1],n.rotation[2]);t.mesh.rotation.x=t.originalRotation.x+(d.x-t.originalRotation.x)*s,t.mesh.rotation.y=t.originalRotation.y+(d.y-t.originalRotation.y)*s,t.mesh.rotation.z=t.originalRotation.z+(d.z-t.originalRotation.z)*s;const c=t.mesh.material;e.phase==="assembling"?(c.emissive.setHex(16512),c.emissiveIntensity=.3*s):(e.phase,c.emissive.setHex(0),c.emissiveIntensity=0)}updateDisassemblingComponentProcedural(t,s,o,e,r){const i=o.components.indexOf(t);if(i===-1)return;const n=o.template.components[i%o.template.components.length],a=this.params.componentSize*this.planetRadius*4,l=o.position.clone().add(new u(n.position[0]*a,n.position[1]*a,n.position[2]*a)),m=this.calculateProceduralOrbitalPosition(t,r),p=l.clone().lerp(m,s);t.mesh.position.copy(p);const d=new y(n.rotation[0],n.rotation[1],n.rotation[2]);t.mesh.rotation.x=d.x+(t.originalRotation.x-d.x)*s,t.mesh.rotation.y=d.y+(t.originalRotation.y-d.y)*s,t.mesh.rotation.z=d.z+(t.originalRotation.z-d.z)*s;const c=t.mesh.material;e.phase==="disassembling"?(c.emissive.setHex(16512),c.emissiveIntensity=.3*(1-s)):(c.emissive.setHex(0),c.emissiveIntensity=0)}calculateProceduralOrbitalPosition(t,s){const o=s,e=t.orbitalPhase+t.orbitalSpeed*o,r=Math.cos(e)*t.orbitalRadius,i=Math.sin(e)*t.orbitalRadius,n=Math.sin(e+t.orbitalInclination)*t.orbitalRadius*.3;return new u(r,n,i)}updateFreeMovingComponent(t,s){const o=this.calculateProceduralOrbitalPosition(t,s);t.mesh.position.copy(o);const e=t.originalRotation;t.mesh.rotation.set(e.x+t.rotationSpeed.x*s,e.y+t.rotationSpeed.y*s,e.z+t.rotationSpeed.z*s)}getObject3D(){return this.group}addToScene(t,s){s&&this.group.position.copy(s),t.add(this.group)}removeFromScene(t){t.remove(this.group)}dispose(){this.components.forEach(t=>{t.mesh.geometry.dispose(),t.mesh.material instanceof x&&t.mesh.material.dispose()}),Object.values(this.materials).forEach(t=>{t instanceof x&&t.dispose()}),this.group.clear()}setEnabled(t){this.group.visible=t}updateParams(t){if(Object.assign(this.params,t),t.color){const s=new g(t.color[0],t.color[1],t.color[2]);this.materials.steel instanceof P&&(this.materials.steel.color=s.clone().multiplyScalar(.8)),this.materials.titanium instanceof P&&(this.materials.titanium.color=s.clone().multiplyScalar(1.1).lerp(new g(.7,.8,.9),.3))}}}function G(b,t,s){const e={seed:(s||Math.floor(Math.random()*1e6))+90002,color:t.color||[.7,.8,.9],cosmicOriginTime:t?.timing?.cosmic_origin_time||t?.cosmicOriginTime||I};return new U(b,e)}export{U as L,G as c};
