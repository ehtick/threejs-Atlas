import{G as h,C as l,i as c,j as d,D as u,M as m,h as g}from"./atlas_DfFO9DeAqJfHmKzNHJUiw.js";class S{group;shapes=[];rotationSpeeds=[];planetRadius;planetColor;constructor(e,s={}){this.group=new h,this.planetRadius=e,this.planetColor=s.planetColor||new l(8388736),s.shapes&&s.shapes.length>0&&this.createShapes(s.shapes)}createShapes(e){e&&e.forEach(s=>{const t=new c(s.size*this.planetRadius,s.sides),a=.7,r=this.planetColor.clone();r.multiplyScalar(a);const p=new d({color:r,transparent:!0,opacity:.8,emissive:r.clone().multiplyScalar(.3),emissiveIntensity:.3,shininess:60,side:u}),o=new m(t,p),n=this.planetRadius*1.005;o.position.set(s.position_3d[0]*n,s.position_3d[1]*n,s.position_3d[2]*n),o.lookAt(0,0,0),o.rotateZ(s.angle),this.shapes.push(o),this.rotationSpeeds.push(s.rotation_speed),this.group.add(o)})}update(e){this.shapes.forEach((s,t)=>{s.rotateZ(this.rotationSpeeds[t]*e)})}addToScene(e,s){this.group.position.copy(s),e.add(this.group)}removeFromScene(e){e.remove(this.group)}getObject3D(){return this.group}dispose(){this.shapes.forEach(e=>{e.geometry.dispose(),e.material instanceof g&&e.material.dispose()}),this.shapes=[]}}function _(i,e,s,t){return!e.small_geometric_shapes||e.small_geometric_shapes.length===0?null:new S(i,{shapes:e.small_geometric_shapes,planetRadius:i,planetColor:t})}export{S as E,_ as c};
