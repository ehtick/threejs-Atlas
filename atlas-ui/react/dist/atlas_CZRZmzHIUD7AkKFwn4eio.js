import{c as ie,A as de,S as le}from"./atlas_ouOT0ykXceu4Q_V1lX7IB.js";import{c as me,R as pe}from"./atlas_BhAWOGr2jN0Dew-Vn0BOA.js";import{c as N,A as he,a as _,b as z,d as _e,e as ue}from"./atlas_DsyFSSMiQeeZ4qc2_BDek.js";import{c as b,L as O,a as ye}from"./atlas_2WJ3PTyngT2ASZJwzU02s.js";import{c as H}from"./atlas_DQchyQ5qzcKVqxDomKRal.js";import{c as U,T as ge}from"./atlas_zL5ohDVlmHdqf6SHB1FdM.js";import{c as V,R as Ee}from"./atlas_DgBSyYn44geWCsV8shMeL.js";import{P as Se,c as be}from"./atlas_DYlCh2UJgkJuTRclDxHPZ.js";import{g as C,c as Ie,P as Pe}from"./atlas_V8ValC2FosB59xcX_p8ln.js";import{P as xe}from"./atlas_mcgGONV9SjYGuqE4w6Kt2.js";import{c as j}from"./atlas_D4VALDMV7dU3FZp231Swk.js";import{c as Y}from"./atlas_D9TiCbe-1VEeaM9owxq-i.js";import{c as Fe}from"./atlas_CJNjCXs4YcOOJetqkmtZs.js";import{c as we}from"./atlas_BRW8SxGPAvP8n7WTlB1uJ.js";import{c as Te}from"./atlas_YrfHqiP8710ThllgZ-jfh.js";import{c as Ce}from"./atlas_CPO8FnzHF3zsN58wpui6q.js";import{c as J,D as Me}from"./atlas_UfYO1PywoWE2aTFUmLsO6.js";import{E as Le,c as K}from"./atlas_BVDALv46sEgcI2pXbU8L5.js";import{c as Q,E as ve}from"./atlas_BHCSTDTvBKB6CJeeguojo.js";import{c as X,C as Ae}from"./atlas_CaXDDW4_euqZsG-N9Qmre.js";import{c as Z,A as $e}from"./atlas_IxieIT67EPYVFr5kG2Xmt.js";import{c as ke,S as Ge}from"./atlas__1yEsFpKw7G3YnpfWJYZi.js";import{P as q}from"./atlas_Dy7oTp_tbcVP5AnB_VsoH.js";import{F as R}from"./atlas_DHGJZCgNn3eTXUJUUDgXq.js";import{c as ze,O as Oe}from"./atlas_6xHXMNegtlHOJIIvTSmqf.js";import{c as D,F as qe}from"./atlas_CdAPtbjbBN5In-5FxO0My.js";import{c as ee,A as We}from"./atlas_BQmTDZtYHgo9_qIDqEO7H.js";import{c as Be}from"./atlas_DPuVnPGjkRQwiabEVYYhS.js";import{c as se,L as Ne}from"./atlas_CQ1Qvbc7pcuHwJkfuXFYS.js";import{c as te,M as He}from"./atlas_CkNpUEf59B2zDBPziTcmS.js";import{c as Ue,F as Ve}from"./atlas_DK0DazAChK49Rw1u0aOW0.js";import{c as je,V as Ye}from"./atlas_DwYRvBMvzCrzC9fPEN1dg.js";import{h as re,C as ce}from"./atlas_C0Xm8D4F9LGKGgzeG7E8_.js";const Je=!1;class I{static instance;creators=new Map;effects=new Map;nextId=1;layerSystem;constructor(){this.registerDefaultEffects()}static getInstance(){return I.instance||(I.instance=new I),I.instance}registerDefaultEffects(){this.registerEffect("atmosphere_glow",{create:(e,s)=>new he(s,e),fromPythonData:(e,s)=>N(s,e.atmosphere||{})}),this.registerEffect("atmosphere_clouds",{create:(e,s)=>new z(s,e),fromPythonData:(e,s)=>_(s,e.surface_elements||{})}),this.registerEffect("atmospheric_streaks",{create:(e,s)=>new $e(s,e),fromPythonData:(e,s)=>Z(s,e.atmosphere||{})}),this.registerEffect("atmosphere",{create:(e,s)=>new ue(s,e),fromPythonData:(e,s)=>_e(s,e)}),this.registerEffect("ring_system",{create:(e,s)=>new pe(s,e),fromPythonData:(e,s)=>me(e.rings||{},s)}),this.registerEffect("fragmentation",{create:(e,s)=>new R(s,e),fromPythonData:(e,s)=>new R(s,{color:e.surface?.fragment_color||[.3,.3,.3],fragmentCount:e.surface?.fragment_count||20})}),this.registerEffect("land_masses",{create:(e,s)=>new O(s,e),fromPythonData:(e,s)=>b(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("ocean_waves",{create:(e,s)=>new Oe(e),fromPythonData:(e,s)=>ze(e)}),this.registerEffect("aquifer_water",{create:(e,s,c)=>new We(c,e),fromPythonData:(e,s,c)=>ee(c,e)}),this.registerEffect("fluid_layers",{create:(e,s)=>new qe(s,e),fromPythonData:(e,s)=>D(s,e)}),this.registerEffect("lava_flows",{create:(e,s)=>new Ne(s,e),fromPythonData:(e,s)=>se(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("molten_lava",{create:(e,s,c)=>new He(c,e),fromPythonData:(e,s,c)=>te(c,e,e.seeds?.planet_seed)}),this.registerEffect("fire_eruption",{create:(e,s)=>new Ve(s,e),fromPythonData:(e,s,c)=>Ue(e,s)}),this.registerEffect("crystal_formations",{create:(e,s)=>(console.warn("Crystal formations effect not implemented yet"),null)}),this.registerEffect("star_field",{create:(e,s)=>new Ge(s,e),fromPythonData:(e,s)=>ke(s,e.seeds?.planet_seed||e.planet_seed)}),this.registerEffect("tundra_snowflakes",{create:(e,s)=>new ge(s,e),fromPythonData:(e,s)=>U(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("river_lines",{create:(e,s)=>new Ee(s,e),fromPythonData:(e,s)=>V(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("anomaly_phase_matter",{create:(e,s)=>new de(s,e),fromPythonData:(e,s)=>ie(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("pulsating_cube",{create:(e,s)=>new Se(s,e),fromPythonData:(e,s)=>{const c=C(e);return be(s,e.surface_elements||{},e.seeds?.planet_seed,c,e)}}),this.registerEffect("planet_rays",{create:(e,s)=>new Pe(s,e),fromPythonData:(e,s)=>Ie(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("visual_debug_3d",{create:(e,s)=>new Ye(s,e),fromPythonData:(e,s)=>je(e,s)}),this.registerEffect("diamond_cracks",{create:(e,s)=>new Me({...e,radius:s}),fromPythonData:(e,s)=>J(e,s,e.seeds?.shape_seed||e.seeds?.planet_seed)}),this.registerEffect("exotic_geometric_shapes",{create:(e,s)=>new Le(s,e),fromPythonData:(e,s)=>{const c=C(e);return K(s,e.surface_elements||{},e.seeds?.planet_seed,c)}}),this.registerEffect("exotic_doodles",{create:(e,s)=>new ve(s,e),fromPythonData:(e,s)=>Q(s,e.surface_elements||{},e.seeds?.planet_seed)}),this.registerEffect("cave_surface_holes",{create:(e,s)=>new Ae(s,e),fromPythonData:(e,s)=>X(s,e,e.seeds?.planet_seed)})}registerEffect(e,s){this.creators.set(e,s)}createEffect(e,s,c,f,h=0){const o=this.creators.get(e);if(!o)return console.warn(`Effect type '${e}' not registered`),null;try{const l=o.create(s,c,this.layerSystem);if(!l)return null;const u={id:`effect_${this.nextId++}`,type:e,effect:l,priority:h,enabled:!0};return this.effects.set(u.id,u),u}catch(l){return console.error(`Error creating effect '${e}':`,l),null}}createEffectFromPythonData(e,s,c,f,h=0){const o=this.creators.get(e);if(!o||!o.fromPythonData)return this.createEffect(e,s,c,f,h);try{const l=o.fromPythonData(s,c,this.layerSystem);if(!l)return null;const u={id:`effect_${this.nextId++}`,type:e,effect:l,priority:h,enabled:!0};return this.effects.set(u.id,u),u}catch(l){return console.error(`Error creating effect '${e}' from Python data:`,l),null}}createEffectsFromList(e,s,c){const f=[],h=e.sort((o,l)=>(o.priority||0)-(l.priority||0));for(const o of h){const l=this.createEffect(o.type,o.params,s,c,o.priority);l&&(l.enabled=o.enabled!==!1,f.push(l))}return f}createEffectsFromPythonPlanetData(e,s,c,f,h){const o=[];try{const l=C(e);if(h?this.layerSystem=h:this.layerSystem=new xe(c,l),e.surface_elements){const r=e.surface_elements;if(r.effects_3d&&Array.isArray(r.effects_3d))for(const p of r.effects_3d){if(p.type==="atmospheric_streaks"){const E=Z(s,p.params,e.seeds?.shape_seed+3e3),S={id:`effect_${this.nextId++}`,type:"atmospheric_streaks",effect:E,priority:p.priority||0,enabled:!0,name:"Atmospheric Streaks"};this.effects.set(S.id,S),o.push(S),E.addToScene(f,c.position);continue}const y=this.createEffect(p.type,p.params,s,c,p.priority||0);y?(y.name=p.type.replace(/_/g," ").replace(/\b\w/g,E=>E.toUpperCase()),o.push(y),y.effect.apply&&y.effect.apply(c),y.effect.addToScene&&y.effect.addToScene(f,c.position)):console.error("❌ FALLO AL CREAR EFECTO:",p.type)}switch(r.type.toLowerCase()){case"gas_giant":if(this.layerSystem){const t=j(this.layerSystem,{...r,base_color:l,turbulence:e.turbulence||r.turbulence},e.seeds?.shape_seed||e.seeds?.planet_seed||e.seeds?.planet_seed),a=Y(this.layerSystem,{...r,base_color:l,storm_intensity:e.storm_intensity||r.storm_intensity},(e.seeds?.shape_seed||e.seeds?.planet_seed)+1e3),d={id:`effect_${this.nextId++}`,type:"cloud_bands_layer",effect:t,priority:0,enabled:!0};this.effects.set(d.id,d),o.push(d);const i={id:`effect_${this.nextId++}`,type:"cloud_gyros_layer",effect:a,priority:1,enabled:!0};if(this.effects.set(i.id,i),o.push(i),r.polar_hexagon&&r.polar_hexagon.enabled){const n=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,m=new q({planetColor:l,hexagonData:r.polar_hexagon,planetRadius:s,currentTime:n}),g={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:m,priority:10,enabled:!0};this.effects.set(g.id,g),o.push(g),f&&m.addToScene(f)}}else console.error("❌ PlanetLayerSystem not initialized!");break;case"frozen_gas_giant":if(this.layerSystem){const t=j(this.layerSystem,{...r,base_color:l,turbulence:e.turbulence||r.turbulence,icy_tint:!0},e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"cloud_bands_layer",effect:t,priority:0,enabled:!0};if(this.effects.set(a.id,a),o.push(a),r.polar_hexagon&&r.polar_hexagon.enabled){const d=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,i=new q({planetColor:l,hexagonData:r.polar_hexagon,planetRadius:s,currentTime:d}),n={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:i,priority:10,enabled:!0};this.effects.set(n.id,n),o.push(n),f&&i.addToScene(f)}}break;case"aquifer":const p=ee(this.layerSystem,e);if(p){const t={id:`effect_${this.nextId++}`,type:"aquifer_water",effect:p,priority:2,enabled:!0,name:"Aquifer Water Surface"};this.effects.set(t.id,t),o.push(t)}const y=Be(this.layerSystem,e);if(y){const t={id:`effect_${this.nextId++}`,type:"ocean_currents",effect:y,priority:1,enabled:!0,name:"Ocean Currents"};this.effects.set(t.id,t),o.push(t)}if(r.clouds&&r.clouds.length>0){const t=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}if(r.land_masses&&r.land_masses.length>0){const t=b(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+7e3);if(t){const a={id:`effect_${this.nextId++}`,type:"land_masses",effect:t,priority:3,enabled:!0,name:"Emergent Land Masses"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}}if(r.atmosphere_clouds&&r.atmosphere_clouds.length>0){const t=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+8e3);if(t){const a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:4,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}}break;case"nebulous":if(this.layerSystem){const t=Y(this.layerSystem,{...r,base_color:l,storm_intensity:r.nebula_density||.6,color_variance:r.color_variance||.2},(e.seeds?.shape_seed||e.seeds?.planet_seed)+2e3),a={id:`effect_${this.nextId++}`,type:"cloud_gyros_layer",effect:t,priority:0,enabled:!0};if(this.effects.set(a.id,a),o.push(a),r.polar_hexagon&&r.polar_hexagon.enabled){const d=e.timing?.elapsed_time?e.timing.elapsed_time/31557600:0,i=new q({planetColor:l,hexagonData:r.polar_hexagon,planetRadius:s,currentTime:d}),n={id:`effect_${this.nextId++}`,type:"polar_hexagon",effect:i,priority:10,enabled:!0};this.effects.set(n.id,n),o.push(n),f&&i.addToScene(f)}}break;case"metallic":case"metallic_3d":if(this.layerSystem){const t=Te(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"metallic_surface_layer",effect:t,priority:0,enabled:!0};this.effects.set(a.id,a),o.push(a)}break;case"diamond":if(this.layerSystem){const t=Ce(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"diamond_surface_layer",effect:t,priority:0,enabled:!0};this.effects.set(a.id,a),o.push(a);const d=J(e,s,e.seeds?.shape_seed||e.seeds?.planet_seed),i={id:`effect_${this.nextId++}`,type:"diamond_cracks",effect:d,priority:1,enabled:!0};if(this.effects.set(i.id,i),o.push(i),d.addToScene(f,c.position),r.clouds&&r.clouds.length>0){const n=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),m={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:n,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(m.id,m),o.push(m),n.addToScene(f,c.position)}}break;case"rocky":if(this.layerSystem){const t=Fe(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"rocky_terrain_layer",effect:t,priority:0,enabled:!0};if(this.effects.set(a.id,a),o.push(a),r.clouds&&r.clouds.length>0){const d=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),i={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:d,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(i.id,i),o.push(i),d.addToScene(f,c.position)}}break;case"icy":if(this.layerSystem){const t=we(this.layerSystem,e,e.seeds?.shape_seed||e.seeds?.planet_seed),a={id:`effect_${this.nextId++}`,type:"icy_terrain_layer",effect:t,priority:0,enabled:!0};this.effects.set(a.id,a),o.push(a);const d=ye(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+8e3);if(d){const n={id:`effect_${this.nextId++}`,type:"transparent_land_masses",effect:d,priority:1,enabled:!0,name:"Ice Formations"};this.effects.set(n.id,n),o.push(n),d.addToScene(f,c.position)}else console.warn("❄️ Failed to create transparent LandMasses for Icy planet");if(r.clouds&&r.clouds.length>0){const n=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),m={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:n,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(m.id,m),o.push(m),n.addToScene(f,c.position)}const i=H(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+9e3);if(i){const n={id:`effect_${this.nextId++}`,type:"icy_features",effect:i,priority:2,enabled:!0,name:"Ice Crystals & Features"};this.effects.set(n.id,n),o.push(n),i.addToScene(f,c.position)}}break;case"oceanic":const E=D(s,e);if(E){const t={id:`effect_${this.nextId++}`,type:"fluid_layers",effect:E,priority:3,enabled:!0,name:"Fluid Ocean Layers"};this.effects.set(t.id,t),o.push(t),E.addToScene(f,c.position)}if(r.green_patches&&r.green_patches.length>0){const t=b(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(t){const a={id:`effect_${this.nextId++}`,type:"land_masses",effect:t,priority:5,enabled:!0,name:"Land Masses (Islands)"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}}if(r.clouds&&r.clouds.length>0){const t=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}break;case"tundra":if(r.green_patches&&r.green_patches.length>0){const t=b(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(t){const a={id:`effect_${this.nextId++}`,type:"land_masses",effect:t,priority:5,enabled:!0,name:"Tundra Terrain"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}}const S=H(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+9e3);if(S){const t={id:`effect_${this.nextId++}`,type:"icy_features",effect:S,priority:6,enabled:!0,name:"Snow Patches & Ice"};this.effects.set(t.id,t),o.push(t),S.addToScene(f,c.position)}if(r.clouds&&r.clouds.length>0){const t=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}const M=U(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+15e3);if(M){const t={id:`effect_${this.nextId++}`,type:"tundra_snowflakes",effect:M,priority:20,enabled:!0,name:"Snowflakes"};this.effects.set(t.id,t),o.push(t),M.addToScene(f,c.position)}break;case"arid":let P;if(r.clouds&&r.clouds.length>0?P=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3):P=new z(s,{color:new ce(.9,.8,.7),cloudCount:20,size:4.2,opacity:.7,density:1.2,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,rotationSpeed:.004,movementAmplitude:.012,puffiness:1.3,timeSpeed:1}),P){const t={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:P,priority:15,enabled:!0,name:"Atmospheric Clouds"};this.effects.set(t.id,t),o.push(t),P.addToScene(f,c.position)}let x;if(r.green_patches&&r.green_patches.length>0){const t={...r,green_patches:r.green_patches.map(a=>({...a,color:[.5,0,0,a.color?.[3]||1]}))};x=b(s,t,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3)}else x=new O(s,{seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3,greenPatches:Array.from({length:25},(t,a)=>{const d=(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3+a*100,i=Math.sin(d)*.5+.5,n=Math.acos(1-2*(a+i)/25),m=2*Math.PI*(a*2.399%1);let g;return a<8?g=.25+i*.25:a<16?g=.15+i*.15:g=.08+i*.12,{position_3d:[Math.sin(n)*Math.cos(m),Math.sin(n)*Math.sin(m),Math.cos(n)],size:g,sides:12+Math.floor(i*16),color:[.5,0,0,.7+i*.2]}})});if(x){const t={id:`effect_${this.nextId++}`,type:"land_masses",effect:x,priority:5,enabled:!0,name:"Arid Terrain"};this.effects.set(t.id,t),o.push(t),x.addToScene(f,c.position)}const L=V(s,r,e.seeds?.shape_seed||e.seeds?.planet_seed);if(L){const t={id:`effect_${this.nextId++}`,type:"river_lines",effect:L,priority:6,enabled:!0,name:"Dried River Channels"};this.effects.set(t.id,t),o.push(t),L.addToScene(f,c.position)}break;case"molten_core":case"molten core":const W=te(this.layerSystem,e);if(W){const t={id:`effect_${this.nextId++}`,type:"molten_lava",effect:W,priority:2,enabled:!0,name:"Molten Lava Surface"};this.effects.set(t.id,t),o.push(t)}const v=se(s,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+9e3);if(v){const t={id:`effect_${this.nextId++}`,type:"lava_flows",effect:v,priority:4,enabled:!0,name:"Lava Flows & Fire Whips"};this.effects.set(t.id,t),o.push(t),v.addToScene(f,c.position)}const A=this.createEffectFromPythonData("fire_eruption",e,s,c)?.effect;if(A){const t={id:`effect_${this.nextId++}`,type:"fire_eruption",effect:A,priority:15,enabled:!0,name:"Fire Eruptions"};this.effects.set(t.id,t),o.push(t),A.addToScene(f,c.position)}if(r.green_patches&&r.green_patches.length>0){const t={...r,green_patches:r.green_patches.map(d=>({...d,color:[1,.55,0,d.color?.[3]||.9]}))},a=b(s,t,(e.seeds?.planet_seed||e.seeds?.shape_seed)+1e4);if(a){const d={id:`effect_${this.nextId++}`,type:"land_masses",effect:a,priority:3,enabled:!0,name:"Incandescent Land Masses"};this.effects.set(d.id,d),o.push(d),a.addToScene(f,c.position)}}if(r.clouds&&r.clouds.length>0){const t=_(s,r,(e.seeds?.planet_seed||e.seeds?.shape_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:15,enabled:!0,name:"Molten Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}break;case"exotic":if(r.clouds&&r.clouds.length>0){const t=_(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3),a={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:t,priority:15,enabled:!0,name:"Exotic Atmospheric Clouds"};this.effects.set(a.id,a),o.push(a),t.addToScene(f,c.position)}const $=K(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3,l);if($){const t={id:`effect_${this.nextId++}`,type:"exotic_geometric_shapes",effect:$,priority:10,enabled:!0,name:"Exotic Geometric Shapes"};this.effects.set(t.id,t),o.push(t),$.addToScene(f,c.position)}const k=Q(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3,e);if(k){const t={id:`effect_${this.nextId++}`,type:"exotic_doodles",effect:k,priority:12,enabled:!0,name:"Exotic Doodles"};this.effects.set(t.id,t),o.push(t),k.addToScene(f,c.position)}break;case"cave":let F;if(r.atmosphere_clouds&&r.atmosphere_clouds.clouds&&r.atmosphere_clouds.clouds.length>0?F=_(s,r.atmosphere_clouds,(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3):F=new z(s,{color:new ce(.75,.75,.75),cloudCount:12,size:3.5,opacity:.65,density:.8,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+4e3,rotationSpeed:.003,movementAmplitude:.008,puffiness:1.1,timeSpeed:.8}),F){const t={id:`effect_${this.nextId++}`,type:"atmosphere_clouds",effect:F,priority:15,enabled:!0,name:"Cave Atmospheric Clouds"};this.effects.set(t.id,t),o.push(t),F.addToScene(f,c.position)}let w;if(r.green_patches&&r.green_patches.length>0)w=b(s,r,(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3);else{const t=new le((e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3),a=[];for(let d=0;d<10;d++){const i=t.random()*2*Math.PI,n=Math.acos(t.random()*2-1);let m;d<3?m=.2+t.random()*.2:d<7?m=.12+t.random()*.13:m=.08+t.random()*.07,a.push({position_3d:[Math.sin(n)*Math.cos(i),Math.sin(n)*Math.sin(i),Math.cos(n)],size:m,sides:12+Math.floor(t.random()*8),color:[.29,.25,.21,.75+t.random()*.15]})}w=new O(s,{greenPatches:a,seed:(e.seeds?.shape_seed||e.seeds?.planet_seed)+5e3})}if(w){const t={id:`effect_${this.nextId++}`,type:"land_masses",effect:w,priority:5,enabled:!0,name:"Cave Land Masses"};this.effects.set(t.id,t),o.push(t),w.addToScene(f,c.position)}const G=X(s,e,(e.seeds?.shape_seed||e.seeds?.planet_seed)+6e3);if(G){const t={id:`effect_${this.nextId++}`,type:"cave_surface_holes",effect:G,priority:10,enabled:!0,name:"Cave Surface Holes"};this.effects.set(t.id,t),o.push(t),G.addToScene(f,c.position)}break;case"anomaly":const B=["anomaly_phase_matter","pulsating_cube","planet_rays"],oe=e.seeds?.planet_seed||Math.floor(Math.random()*1e6),fe=B.length;for(let t=0;t<fe;t++){const a=B[t],d=oe+t*1e4,i=this.createEffectFromPythonData(a,{...e,seeds:{...e.seeds,planet_seed:d}},s,c,10+t);i&&(i.name=a.replace(/_/g," ").replace(/\b\w/g,n=>n.toUpperCase()),o.push(i),i.effect.addToScene&&i.effect.addToScene(f,c.position))}if(e.atmosphere&&e.atmosphere.type!=="None"){const t=this.createEffectFromPythonData("atmosphere",e.atmosphere,s,c,5);t&&(o.push(t),t.effect.addToScene(f,c.position))}break;default:if(e.planet_info?.type?.toLowerCase()==="anomaly"){const a=["anomaly_phase_matter","pulsating_cube","planet_rays"],d=e.seeds?.planet_seed||Math.floor(Math.random()*1e6),i=a.length;for(let n=0;n<i;n++){const m=a[n],g=d+n*1e4,T=this.createEffectFromPythonData(m,{...e,seeds:{...e.seeds,planet_seed:g}},s,c,10+n);T&&(T.name=m.replace(/_/g," ").replace(/\b\w/g,ne=>ne.toUpperCase()),o.push(T),T.effect.addToScene&&T.effect.addToScene(f,c.position))}if(e.atmosphere&&e.atmosphere.type!=="None"){const n=this.createEffectFromPythonData("atmosphere",e.atmosphere,s,c,5);n&&(o.push(n),n.effect.addToScene(f,c.position))}}else if(c.material instanceof re){const t=C(e);c.material.color.copy(t)}break}}else if(c.material instanceof re){const r=C(e);c.material.color.copy(r)}const u=e.planet_info?.type?.toLowerCase()||e.surface_elements?.type?.toLowerCase(),ae=u==="anomaly"||e.surface_elements?.type==="anomaly";if(e.atmosphere&&!ae){if(e.atmosphere.streaks||["Gas Giant","Frozen Gas Giant"].includes(e.planet_info?.type)){const r=N(s,e.atmosphere||{},e.seeds?.shape_seed+2e3);if(r){const p={id:`effect_${this.nextId++}`,type:"atmosphere_glow",effect:r,priority:20,enabled:!0};this.effects.set(p.id,p),o.push(p),r.addToScene(f,c.position)}}if(e.atmosphere.type&&e.atmosphere.type!=="None"){const r={...e.atmosphere};u==="oceanic"&&(r.opacity=Math.min(r.opacity||.3,.15),r.width=Math.min(r.width||15,8));const p=this.createEffectFromPythonData("atmosphere",r,s,c,5);p&&(o.push(p),p.effect.addToScene(f,c.position))}}if(e.rings&&e.rings.has_rings||["Gas Giant","Frozen Gas Giant","Super Earth"].includes(e.planet_info?.type)){const r=this.createEffectFromPythonData("ring_system",e,s,c,1);r?(o.push(r),r.effect.addToScene(f,c.position)):console.warn("⚠️ Failed to create ring effect")}if(e.surface_elements?.has_fragmentation_zones){const r=this.createEffectFromPythonData("fragmentation",e,s,c,5);r&&(o.push(r),r.effect.addToScene(f,c.position))}this.layerSystem&&this.layerSystem.addToScene(f);try{const r=this.createEffectFromPythonData("star_field",e,s,c,-100);r&&r.effect&&(r.effect.addToScene(f,c.position),o.push(r))}catch(r){console.warn("Could not create StarField:",r)}return o.forEach((r,p)=>{}),o.length===0&&console.warn("⚠️ NO EFFECTS WERE CREATED! Check the data structure and conditions."),o}catch(l){throw console.error("Error in EffectRegistry.createEffectsFromPythonPlanetData:",l),l}}getEffect(e){return this.effects.get(e)||null}getEffectsByType(e){return Array.from(this.effects.values()).filter(s=>s.type===e)}getAllEffects(){return Array.from(this.effects.values())}toggleEffect(e,s){const c=this.effects.get(e);if(c){c.enabled=s!==void 0?s:!c.enabled;const f=c.effect;if(f&&f.getObject3D){const h=f.getObject3D();h&&(h.visible=c.enabled)}if(this.layerSystem){const h=this.layerSystem.getLayerMeshes(),l={cloud_bands_layer:"cloudBands",cloud_gyros_layer:"cloudGyros",metallic_surface_layer:"metallicSurface",diamond_surface_layer:"diamondSurface",rocky_terrain_layer:"rockyTerrain",icy_terrain_layer:"icyTerrain",aquifer_water:"aquiferWater",ocean_currents:"oceanCurrents",molten_lava:"moltenLava"}[c.type];l&&h[l]&&(h[l].visible=c.enabled)}}else console.warn(`⚠️ Effect not found: ${e}`)}updateAllEffects(e,s){this.layerSystem&&this.layerSystem.update(e,s);for(const c of this.effects.values())if(c.enabled&&c.effect.update)try{c.effect.update(e,s)}catch(f){console.error(`Error updating effect ${c.type}:`,f)}}updateLightForAllEffects(e){this.layerSystem&&this.layerSystem.updateFromThreeLight(e);for(const s of this.effects.values())if(s.enabled&&s.effect.updateFromThreeLight)try{s.effect.updateFromThreeLight(e)}catch(c){console.error(`Error updating light for effect ${s.type}:`,c)}}removeEffect(e){const s=this.effects.get(e);s&&(s.effect.dispose&&s.effect.dispose(),this.effects.delete(e))}clearAllEffects(){this.layerSystem&&(this.layerSystem.dispose(),this.layerSystem=void 0);for(const e of this.effects.values())e.effect.dispose&&e.effect.dispose();this.effects.clear(),this.nextId=1}getStats(){const e=Array.from(this.effects.values());return{registeredTypes:this.creators.size,activeEffects:e.length,enabledEffects:e.filter(s=>s.enabled).length}}getAvailableEffectTypes(){return Array.from(this.creators.keys())}}const Cs=I.getInstance();export{Cs as e};
