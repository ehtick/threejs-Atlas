import{c as Z}from"./atlas_BrYhsyGbdfinGesBjh40k.js";import{V as B,a6 as ae,m as j,f as Y,o as K,i as ne,M as q,G as J,b as H,C as D,F as oe,z as Q,c as ee,v as re,w as te,u as ce,B as ie,a2 as se,ac as le,e as he}from"./atlas_S2gaYUaVDGx2fzGLEfKud.js";class pe{scene;planetRadius;moonMeshes=[];orbitalLines=[];moonData=null;cosmicOriginTime;lastRelaxationSummary=0;moonMaterials=new Map;camera;planetPosition;orbitalLinesFadeEnabled=!0;orbitalLinesVisible=!0;orbitalLinesTargetOpacity=1;orbitalLinesCurrentOpacity=1;lastCameraPosition=new B;lastCameraTarget=new B;lastInteractionTime=0;fadeOutTimer=null;initialShowTimer=null;cameraMovementThreshold=.01;fadeOutDelay=3e3;initialShowDuration=5e3;fadeSpeed=.05;constructor(e,t,i,a,o){if(this.scene=e,this.planetRadius=t,this.camera=i,this.planetPosition=a,this.cosmicOriginTime=o,this.lastCameraPosition.copy(this.camera.position),this.camera instanceof ae){const n=new B;this.camera.getWorldDirection(n),this.lastCameraTarget.copy(n)}this.startInitialShowTimer(),this.initializeMaterials()}initializeMaterials(){this.moonMaterials.set("rocky",new j({color:9143936,roughness:.9,metalness:.1,normalScale:new Y(.8,.8)})),this.moonMaterials.set("icy",new j({color:14737648,roughness:.3,metalness:.05,normalScale:new Y(.4,.4)})),this.moonMaterials.set("asteroidal",new j({color:4865578,roughness:.95,metalness:.15,normalScale:new Y(1.2,1.2)})),this.moonMaterials.set("captured",new j({color:7035722,roughness:.8,metalness:.08,normalScale:new Y(.9,.9)}))}loadMoonSystem(e){this.moonData=e,e.cosmic_origin_time&&(this.cosmicOriginTime=e.cosmic_origin_time),this.clearMoons(),this.createMoons()}clearMoons(){this.orbitalLines.forEach(e=>{this.scene.remove(e),e.traverse(t=>{t instanceof K&&(t.geometry.dispose(),t.material instanceof ne&&t.material.dispose())})}),this.orbitalLines=[],this.moonMeshes.forEach(e=>{this.scene.remove(e),e.traverse(t=>{t instanceof q&&(t.geometry.dispose(),Array.isArray(t.material)?t.material.forEach(i=>i.dispose()):t.material.dispose())})}),this.moonMeshes=[]}createMoons(){this.moonData&&this.moonData.moons.forEach((e,t)=>{const i=this.createMoonMesh(e,t);this.moonMeshes.push(i),this.scene.add(i)})}createMoonMesh(e,t){const i=new J;i.name=`moon-${e.name}`;let a=e.visuals.relative_size;const o=.06,n=.35,s=a<.02?8:4;let c=Math.max(o,Math.min(n,a*s));const l=this.planetRadius*c,_=32,m=Math.max(.5,Math.min(2,c*10)),M=Math.floor(_*m),w=Math.floor(M/2),f=(e.procedural?.seed||0)*.618034%(Math.PI*2),b=new H(l,M,w,f);this.generateProceduralSurface(b,e,l);let r;switch(e.properties.type){case"icy":r=new j({color:16777215,roughness:.2,metalness:.05,transparent:!1});break;case"asteroidal":r=new j({color:16777215,roughness:.95,metalness:.15,transparent:!1});break;case"captured":r=new j({color:16777215,roughness:.8,metalness:.08,transparent:!1});break;default:r=new j({color:16777215,roughness:.8,metalness:.1,transparent:!1});break}switch(this.applyMoonTexture(r,e),e.properties.type){case"icy":const h=e.procedural?.seed||0,u=this.createSeededRandom(h+9999)();let d=1;u>.8?d=1.4:u>.6?d=1.2:u<.2?d=.6:u<.4&&(d=.8),r.emissive=new D(4877194).multiplyScalar(.05*d),r.emissiveIntensity=.6*d,r.envMapIntensity=1*d,r.roughness=Math.max(.05,.15/d),r.metalness=.02,r.transparent=!0,r.opacity=Math.min(1,.95+(d-1)*.1);break;case"asteroidal":r.emissive=new D(2759178).multiplyScalar(.03),r.emissiveIntensity=.3,r.envMapIntensity=.1,r.roughness=.98,r.metalness=.18;break;case"captured":r.emissive=new D(5917242).multiplyScalar(.04),r.emissiveIntensity=.4,r.envMapIntensity=.3,r.roughness=.75,r.metalness=.12;break;default:r.emissive=new D(9136404).multiplyScalar(.04),r.emissiveIntensity=.4,r.envMapIntensity=.4,r.roughness=.85,r.metalness=.08;break}r.transparent=!1,r.side=oe,r.aoMapIntensity=.8,r.normalScale=new Y(1,1);const g=new q(b,r);if(g.name=`moon-surface-${e.name}`,g.castShadow=!0,g.receiveShadow=!0,g.userData={moonData:e,moonIndex:t,isMoon:!0},i.add(g),this.createOrbitalTrail(e,t),a<.02){const h=new H(l*1.3,8,4),u=new Q({color:4473924,transparent:!0,opacity:.3,side:ee}),d=new q(h,u);d.name=`moon-glow-${e.name}`,i.add(d)}if(e.visuals.has_atmosphere&&e.visuals.atmosphere_color){const h=new H(l*1.05,16,8),u=new Q({color:e.visuals.atmosphere_color,transparent:!0,opacity:e.visuals.atmosphere_opacity||.1,side:ee}),d=new q(h,u);d.name=`moon-atmosphere-${e.name}`,i.add(d)}return this.updateMoonPosition(i,e,0,t),i}generateProceduralSurface(e,t,i){const a=t.procedural?.seed||0,o=Z(this.createSeededRandom(a)),n=e.attributes.position.array,s=.5,c=this.calculateHydrostaticRelaxation(t),_=.7+(a*13+4567)%1e3/1e3*.6;let m;switch(t.properties.type){case"icy":m=i*.15;break;case"asteroidal":m=i*.18;break;case"captured":m=i*.12;break;default:m=i*.09;break}const w=m*(1-c)*_;console.log(`ðŸŒ™ Creating moon ${t.name}: type=${t.properties.type}, relaxationFactor=${c.toFixed(8)}, baseDisplacement=${(m/i*100).toFixed(1)}% of radius, finalDisplacement=${(w/i*100).toFixed(1)}% of radius, cosmicOriginTime=${this.cosmicOriginTime}`);for(let p=0;p<n.length;p+=3){const f=n[p],b=n[p+1],r=n[p+2],g=f*s,h=b*s,u=r*s;let d=0;switch(t.properties.type){case"icy":d+=o(g*2,h*2,u*2)*.8,d+=o(g*6,h*6,u*6)*.4,d+=o(g*15,h*15,u*15)*.2;break;case"asteroidal":d+=o(g*.8,h*.8,u*.8)*1.5,d+=o(g*3,h*3,u*3)*1,d+=o(g*8,h*8,u*8)*.7,d+=o(g*20,h*20,u*20)*.4,d+=o(g*50,h*50,u*50)*.2;break;case"captured":d+=o(g*1.2,h*1.2,u*1.2)*1.2,d+=o(g*4,h*4,u*4)*.8,d+=o(g*10,h*10,u*10)*.5,d+=o(g*30,h*30,u*30)*.25;break;default:d+=o(g*1.5,h*1.5,u*1.5)*1,d+=o(g*5,h*5,u*5)*.6,d+=o(g*12,h*12,u*12)*.3,d+=o(g*25,h*25,u*25)*.15;break}const k=new B(f,b,r),x=k.clone().normalize(),T=k.add(x.multiplyScalar(d*w));n[p]=T.x,n[p+1]=T.y,n[p+2]=T.z}e.attributes.position.needsUpdate=!0,e.computeVertexNormals()}applyMoonTexture(e,t){this.createProceduralColorTexture(e,t)}createProceduralColorTexture(e,t){const a=document.createElement("canvas");a.width=256,a.height=256;const o=a.getContext("2d"),n=t.visuals.base_color;let s;if(n&&n.startsWith("#")){const S=n.slice(1);s={r:parseInt(S.slice(0,2),16),g:parseInt(S.slice(2,4),16),b:parseInt(S.slice(4,6),16)}}else switch(t.properties.type){case"icy":s={r:160,g:170,b:190};break;case"asteroidal":s={r:74,g:62,b:42};break;case"captured":s={r:107,g:91,b:74};break;default:s={r:139,g:134,b:128};break}const c=t.procedural?.seed||Math.abs(t.name.split("").reduce((S,F)=>S+F.charCodeAt(0),0)),l=Math.abs(c)%1e6,_=l===0?12345:l,m=Z(this.createSeededRandom(_+777));let M=0,w=0,p=0;const f=_%100*.1,b=_/100%100*.1,r=_/1e4%100*.1;switch(t.properties.type){case"icy":M=m(f+1,b+2,r+3)*120,w=m(f+4,b+5,r+6)*100,p=m(f+7,b+8,r+9)*110;const S=m(f*.5,b*.5,r*.5),F=m(f*.3,b*.7,r*.4),v=m(f*.8,b*.2,r*.6);let z=1;v>.4?z=1.4:v>.1?z=1.2:v<-.4?z=.6:v<-.1&&(z=.8),S>.3?(M-=40,w+=50,p+=60):S<-.3?(M+=60,w-=20,p+=20):F>.4?(M+=40,w+=35,p-=30,z*=.9):F<-.4&&(M-=30,w-=20,p+=50),M*=z,w*=z,p*=z;break;case"asteroidal":M=m(f+10,b+11,r+12)*60,w=m(f+13,b+14,r+15)*55,p=m(f+16,b+17,r+18)*50;break;case"captured":M=m(f+19,b+20,r+21)*50,w=m(f+22,b+23,r+24)*45,p=m(f+25,b+26,r+27)*40;break;default:M=m(f+28,b+29,r+30)*55,w=m(f+31,b+32,r+33)*50,p=m(f+34,b+35,r+36)*45;break}({...s},s={r:Math.max(20,Math.min(255,s.r+M)),g:Math.max(20,Math.min(255,s.g+w)),b:Math.max(30,Math.min(255,s.b+p))}),o.fillStyle=`rgb(${s.r}, ${s.g}, ${s.b})`,o.fillRect(0,0,256,256);const g=(_*7919+41)%233280,h=Z(this.createSeededRandom(g)),u=o.getImageData(0,0,256,256),d=u.data;for(let S=0;S<256;S++)for(let F=0;F<256;F++){const v=(S*256+F)*4,z=F/256,W=S/256,U=(z-.5)*2*Math.PI,N=(W-.5)*Math.PI,O=Math.cos(N)*Math.cos(U),C=Math.cos(N)*Math.sin(U),L=Math.sin(N),G=(g*17+8901)%1e3,y=.5+G/1e3*1,E=.8+G/1e3*.4;let P=0;switch(t.properties.type){case"icy":P+=h(O*(2*y),C*(2*y),L*(2*y))*(.5*E),P+=h(O*(6*y),C*(6*y),L*(6*y))*(.3*E),P+=h(O*(15*y),C*(15*y),L*(15*y))*(.2*E);const A=h(O*30,C*30,L*30)*.1;P+=A*E;break;case"asteroidal":P+=h(O*(1.2*y),C*(1.2*y),L*(1.2*y))*(.75*E),P+=h(O*(4*y),C*(4*y),L*(4*y))*(.55*E),P+=h(O*(10*y),C*(10*y),L*(10*y))*(.35*E),P+=h(O*(25*y),C*(25*y),L*(25*y))*(.22*E);break;case"captured":P+=h(O*(1.8*y),C*(1.8*y),L*(1.8*y))*(.6*E),P+=h(O*(5*y),C*(5*y),L*(5*y))*(.38*E),P+=h(O*(12*y),C*(12*y),L*(12*y))*(.2*E);break;default:P+=h(O*(2*y),C*(2*y),L*(2*y))*(.55*E),P+=h(O*(6*y),C*(6*y),L*(6*y))*(.33*E),P+=h(O*(16*y),C*(16*y),L*(16*y))*(.18*E);break}let I,R,$;if(t.properties.type==="icy"){if(I=s.r,R=s.g,$=s.b,P>0){const V=P*.5;I=I*(1-V*.15),R=R*(1+V*.2),$=$*(1+V*.25)}else{const V=Math.abs(P)*.5;I=I*(1+V*.1),R=R*(1-V*.15),$=$*(1+V*.05)}const A=1+P*.3;I=I*A,R=R*A,$=$*A;const X=h(O*8,C*8,L*8);X>.5?(I=Math.min(255,I*1.05),R=Math.min(255,R*1.08),$=Math.min(255,$*1.1)):X<-.5&&(I=I*.95,R=R*.97,$=$*1.02),I=Math.max(0,Math.min(255,I)),R=Math.max(0,Math.min(255,R)),$=Math.max(0,Math.min(255,$))}else{const A=1+P;I=Math.max(0,Math.min(255,s.r*A)),R=Math.max(0,Math.min(255,s.g*A)),$=Math.max(0,Math.min(255,s.b*A))}d[v]=I,d[v+1]=R,d[v+2]=$,d[v+3]=255}o.putImageData(u,0,0);const k=new re(a);k.wrapS=te,k.wrapT=te,k.generateMipmaps=!0,k.needsUpdate=!0;const T=(t.procedural?.seed||0)*.618034%1;k.offset.x=T,k.repeat.set(1,1),e.map=k,e.needsUpdate=!0}drawCrater(e,t,i){const a=(i.position.lon+180)/360*t,o=(90-i.position.lat)/180*t,n=Math.max(20,i.radius*t*.8),s=e.createRadialGradient(a,o,0,a,o,n);s.addColorStop(0,"rgba(0, 0, 0, 0.95)"),s.addColorStop(.2,"rgba(10, 10, 10, 0.8)"),s.addColorStop(.5,"rgba(40, 40, 40, 0.6)"),s.addColorStop(.8,"rgba(100, 100, 100, 0.4)"),s.addColorStop(.95,"rgba(180, 180, 180, 0.3)"),s.addColorStop(1,"rgba(0, 0, 0, 0)"),e.fillStyle=s,e.beginPath(),e.arc(a,o,n,0,2*Math.PI),e.fill(),e.strokeStyle="rgba(255, 255, 255, 0.7)",e.lineWidth=3,e.beginPath(),e.arc(a,o,n*.9,0,2*Math.PI),e.stroke(),e.strokeStyle="rgba(220, 220, 220, 0.5)",e.lineWidth=1,e.beginPath(),e.arc(a,o,n*.95,0,2*Math.PI),e.stroke()}createSeededRandom(e){let t=e*9301+49297;return()=>(t=(t*9301+49297)%233280,t/233280)}calculateHydrostaticRelaxation(e){const t=e.properties.radius_km*1e3,i=e.properties.mass_kg,a=e.properties.density_kg_m3;if(!isFinite(t)||!isFinite(i)||!isFinite(a)||t<=0||i<=0||a<=0)return 0;const n=66743e-15*i/(t*t);if(!isFinite(n)||n<=0)return 0;let s;switch(e.properties.type){case"icy":const g=e.tidal_heating?.tidal_power_watts||0,h=4*Math.PI*t*t,u=g/h;u>1e3?s=1e12:u>100?s=1e15:u>10?s=1e18:u>1?s=1e20:s=1e21;break;case"asteroidal":s=1e26;break;case"captured":s=1e24;break;default:t>5e5?s=1e22:t>1e5?s=1e23:s=1e25;break}let c;switch(e.properties.type){case"icy":(e.tidal_heating?.tidal_power_watts||0)>1e12?c=1e9:c=35e8;break;case"asteroidal":case"captured":default:c=3e10;break}const l=s/c;if(!isFinite(l)||l<=0)return 0;const _=l/(365.25*24*3600),M=Date.now()/1e3-this.cosmicOriginTime,w=M/(365.25*24*3600);if(!isFinite(M)||M<0)return 0;const p=M/l,f=1-Math.exp(-p),b=e.tidal_heating?.tidal_power_watts||0,r=b/(4*Math.PI*t*t);return console.log(`ðŸ”¬ RELAXATION DEBUG for ${e.name}:
      - Type: ${e.properties.type}
      - Radius: ${t/1e3}km
      - Tidal heating: ${b.toExponential(2)} watts
      - Tidal flux: ${r.toExponential(2)} W/mÂ²
      - Viscosity: ${s.toExponential(2)} PaÂ·s
      - Density: ${a} kg/mÂ³
      - Surface gravity: ${n.toFixed(2)} m/sÂ²
      - Relaxation timescale: ${_.toExponential(2)} years
      - Cosmic age: ${w.toFixed(2)} years (${M} seconds)
      - CosmicOriginTime: ${this.cosmicOriginTime}
      - Current time: ${Date.now()/1e3}
      - Progress ratio: ${(M/l).toExponential(4)}
      - Relaxation factor: ${f.toFixed(8)}`),this.lastRelaxationSummary||(this.lastRelaxationSummary=0),this.lastRelaxationSummary<Date.now()-5e3&&(this.lastRelaxationSummary=Date.now()),Math.max(0,Math.min(1,f))}updateMoonSurfaceRelaxation(e,t){const i=e.getObjectByName(`moon-surface-${t.name}`);if(!i||!(i.geometry instanceof H))return;const a=this.calculateHydrostaticRelaxation(t),o=t.procedural?.seed||0,n=i.geometry,s=n.parameters.radius,c=Z(this.createSeededRandom(o)),l=n.attributes.position.array,_=.5,M=.7+(o*13+4567)%1e3/1e3*.6;let w;switch(t.properties.type){case"icy":w=s*.15;break;case"asteroidal":w=s*.18;break;case"captured":w=s*.12;break;default:w=s*.09;break}const f=w*(1-a)*M;for(let b=0;b<l.length;b+=3){const r=l[b],g=l[b+1],h=l[b+2],u=new B(r,g,h),d=u.length(),k=u.clone().normalize(),x=r/d*_,T=g/d*_,S=h/d*_;let F=0;switch(t.properties.type){case"icy":F+=c(x*2,T*2,S*2)*.8,F+=c(x*6,T*6,S*6)*.4,F+=c(x*15,T*15,S*15)*.2;break;case"asteroidal":F+=c(x*.8,T*.8,S*.8)*1.5,F+=c(x*3,T*3,S*3)*1,F+=c(x*8,T*8,S*8)*.7,F+=c(x*20,T*20,S*20)*.4,F+=c(x*50,T*50,S*50)*.2;break;case"captured":F+=c(x*1.2,T*1.2,S*1.2)*1.2,F+=c(x*4,T*4,S*4)*.8,F+=c(x*10,T*10,S*10)*.5,F+=c(x*30,T*30,S*30)*.25;break;default:F+=c(x*1.5,T*1.5,S*1.5)*1,F+=c(x*5,T*5,S*5)*.6,F+=c(x*12,T*12,S*12)*.3,F+=c(x*25,T*25,S*25)*.15;break}const v=k.clone().multiplyScalar(s+F*f);l[b]=v.x,l[b+1]=v.y,l[b+2]=v.z}n.attributes.position.needsUpdate=!0,n.computeVertexNormals()}drawMaria(e,t,i,a=0){const o=(i.position.lon+180)/360*t,n=(90-i.position.lat)/180*t,s=Math.max(15,i.radius*t*.4),c=e.createRadialGradient(o,n,0,o,n,s);c.addColorStop(0,`rgba(10, 10, 10, ${i.darkness*.9})`),c.addColorStop(.6,`rgba(25, 25, 25, ${i.darkness*.7})`),c.addColorStop(1,`rgba(40, 40, 40, ${i.darkness*.3})`),e.fillStyle=c,e.beginPath(),e.arc(o,n,s,0,2*Math.PI),e.fill();const l=this.createSeededRandom(a+Math.floor(o+n));e.fillStyle=`rgba(60, 50, 40, ${i.darkness*.2})`;for(let _=0;_<5;_++){const m=o+(l()-.5)*s*.8,M=n+(l()-.5)*s*.8;e.beginPath(),e.arc(m,M,2+l()*3,0,2*Math.PI),e.fill()}}calculateOrbitalParameters(e){const t=Math.max(...this.moonData.moons.map(k=>k.orbit.semi_major_axis_km)),i=e.orbit.semi_major_axis_km/t,a=Math.log10(1+i*9),n=e.properties.origin==="co-formation"&&e.properties.density_kg_m3<1500?2.5:1.8,c=this.planetRadius*n*1.2,l=this.planetRadius*4,_=c+a*l,m=this.planetRadius*10,M=Math.min(_,m),w=e.orbit.eccentricity,f=Math.min(3,1/.5),b=Math.min(.8,w*f),g=Math.min(e.orbit.inclination_deg*3,60),h=ce.degToRad(g),u=e.orbit.argument_of_periapsis||0,d=e.orbit.longitude_of_ascending_node||0;return{semiMajorAxis:M,eccentricity:b,inclination:h,argumentOfPeriapsis:u,longitudeOfAscendingNode:d}}createOrbitalTrail(e,t){const i=this.calculateOrbitalParameters(e),a=i.semiMajorAxis,o=i.eccentricity,n=i.inclination,s=i.argumentOfPeriapsis,c=i.longitudeOfAscendingNode,l=[],_=128;for(let p=0;p<=_;p++){const f=p/_*Math.PI*2,b=a*(1-o*o)/(1+o*Math.cos(f)),r=b*Math.cos(f+s),g=b*Math.sin(f+s),h=0,u=Math.cos(n),d=Math.sin(n),k=Math.cos(c),x=Math.sin(c),T=r,S=g*u-h*d,F=g*d+h*u,v=T*k-S*x,z=T*x+S*k,W=F;l.push(new B(v,W,-z))}new ie().setFromPoints(l);let m;switch(e.properties.type){case"icy":m=6724095;break;case"asteroidal":m=9127187;break;case"captured":m=16737894;break;default:m=16755302;break}const M=new J;M.name=`moon-orbit-${e.name}`;for(let p=0;p<l.length;p+=3){const f=[];if(p<l.length&&(f.push(l[p]),p+1<l.length&&f.push(l[p+1])),f.length>=2){const b=new ie().setFromPoints(f),r=new se({color:m,opacity:0,transparent:!0,linewidth:1}),g=new K(b,r);g.name=`moon-orbit-segment-${e.name}-${p}`,M.add(g)}}const w=M;w.visible=!1,w.position.copy(this.planetPosition),this.scene.add(w),this.orbitalLines||(this.orbitalLines=[]),this.orbitalLines.push(w)}drawIceCracks(e,t,i){const a=(i.start.lon+180)/360*t,o=(90-i.start.lat)/180*t,n=(i.end.lon+180)/360*t,s=(90-i.end.lat)/180*t,c=Math.max(8,i.width*t*500);e.shadowColor="rgba(150, 200, 255, 1.0)",e.shadowBlur=20,e.strokeStyle=`rgba(255, 255, 255, ${Math.min(1,i.brightness*3)})`,e.lineWidth=c,e.lineCap="round",e.beginPath(),e.moveTo(a,o),e.lineTo(n,s),e.stroke(),e.shadowColor="rgba(100, 150, 255, 0.8)",e.shadowBlur=30,e.strokeStyle=`rgba(200, 230, 255, ${Math.min(1,i.brightness*2.5)})`,e.lineWidth=c*.7,e.beginPath(),e.moveTo(a,o),e.lineTo(n,s),e.stroke(),e.shadowBlur=0,e.shadowColor="transparent",e.shadowBlur=0}update(){if(!this.moonData)return;this.detectCameraMovement()&&this.onCameraMovement(),this.updateOrbitalLinesFade();const e=Date.now()/1e3;if(!isFinite(this.cosmicOriginTime))return;const t=e-this.cosmicOriginTime;isFinite(t)&&(t<0||(this.moonData.moons.forEach((i,a)=>{a<this.moonMeshes.length&&(this.updateMoonPosition(this.moonMeshes[a],i,t,a),Math.floor(t)%30===0&&this.updateMoonSurfaceRelaxation(this.moonMeshes[a],i))}),this.updateLOD()))}updateMoonPosition(e,t,i,a=0){if(!isFinite(i))return;const o=t.orbit.orbital_period_seconds;if(!isFinite(o)||o<=0)return;const n=2*Math.PI/o,s=t.orbit.initial_phase||0,c=(n*i+s)%(2*Math.PI);if(!isFinite(c))return;const l=this.calculateOrbitalParameters(t),_=l.semiMajorAxis,m=l.eccentricity,M=l.inclination,w=l.argumentOfPeriapsis,p=l.longitudeOfAscendingNode;let f=c;for(let X=0;X<5;X++){const V=c+m*Math.sin(f);if(!isFinite(V))break;f=V}if(!isFinite(f))return;const b=Math.sqrt(1+m),r=Math.sqrt(1-m),g=Math.sin(f/2),h=Math.cos(f/2);if(!isFinite(b)||!isFinite(r)||!isFinite(g)||!isFinite(h))return;const u=2*Math.atan2(b*g,r*h);if(!isFinite(u))return;const d=_*(1-m*m)/(1+m*Math.cos(u)),k=u+w,x=d*Math.cos(k),T=d*Math.sin(k),S=0;if(!isFinite(x)||!isFinite(T)||!isFinite(S))return;const F=Math.cos(M),v=Math.sin(M);if(!isFinite(F)||!isFinite(v)||!isFinite(p))return;let z=x,W=T*F-S*v,U=T*v+S*F;const N=Math.cos(p),O=Math.sin(p);if(!isFinite(N)||!isFinite(O))return;const C=z*N-W*O,L=z*O+W*N,G=U;if(!isFinite(C)||!isFinite(L)||!isFinite(G)||!isFinite(this.planetPosition.x)||!isFinite(this.planetPosition.y)||!isFinite(this.planetPosition.z))return;const y=C,E=G,P=-L,I=this.planetPosition.x+y,R=this.planetPosition.y+E,$=this.planetPosition.z+P;if(!isFinite(I)||!isFinite(R)||!isFinite($))return;e.position.set(I,R,$);const A=e.getObjectByName(`moon-surface-${t.name}`);A&&this.applyTidalLockingWithLibration(A,t,u,i)}calculatePeriapsisWithPrecession(e,t){const i=e.orbit.argument_of_periapsis||0;if(!isFinite(t)||!isFinite(i))return i;const a=this.planetRadius,o=e.orbit.semi_major_axis_km;if(!isFinite(o)||o<=0||o/a>10)return i;const s=.001,c=2*Math.PI/e.orbit.orbital_period_seconds,l=e.orbit.inclination_deg*Math.PI/180;if(!isFinite(c)||!isFinite(l))return i;const _=3/2*s*c*Math.pow(a/o,2)*Math.cos(l);if(!isFinite(_))return i;const m=_*t,M=(i+m)%(2*Math.PI);return isFinite(M)?M:i}applyTidalLockingWithLibration(e,t,i,a){if(!isFinite(i))return;if(t.rotation?.is_tidally_locked??!0){e.lookAt(this.planetPosition);const n=t.orbit.eccentricity;if(isFinite(n)&&n>=0&&n<1){const s=2*n*Math.sin(i),l=t.orbit.inclination_deg*Math.PI/180*Math.sin(i)*.1;if(isFinite(s)&&isFinite(l)){const _=s+l;isFinite(_)&&e.rotateY(_)}}}else{const n=t.rotation?.angular_velocity_rad_s??2*Math.PI/t.orbit.orbital_period_seconds;if(isFinite(n)&&n>0){const s=Date.now()/1e3,c=this.moonData?.cosmic_origin_time||0,l=s-c,_=n*l;isFinite(_)&&(e.rotation.y=_%(2*Math.PI))}}}updateLOD(){if(!this.moonData)return;const e=this.camera.position,t=new le,i=new he;i.multiplyMatrices(this.camera.projectionMatrix,this.camera.matrixWorldInverse),t.setFromProjectionMatrix(i),this.moonMeshes.forEach((a,o)=>{const n=e.distanceTo(a.position),s=this.moonData.moons[o];if(!t.containsPoint(a.position)&&n>this.moonData.render_settings.lod_distances[1]){a.visible=!1;return}const l=this.moonData.render_settings.max_visible_distance*2;if(a.visible=n<l,!a.visible)return;const m=s.properties.radius_km/n;let M=2;n<this.moonData.render_settings.lod_distances[0]||m>.001?M=0:(n<this.moonData.render_settings.lod_distances[1]||m>1e-4)&&(M=1);const w=a.getObjectByName(`moon-surface-${s.name}`);w&&w.geometry instanceof H&&this.applyGeometryLOD(w,M,n);const p=this.moonData.render_settings.max_visible_distance;if(n>p*.5){const f=Math.max(.3,1-(n-p*.5)/(p*.5));a.scale.setScalar(f)}else a.scale.setScalar(1)})}applyGeometryLOD(e,t,i){e.geometry;const a=e.material;i>1e3&&(a.roughness=Math.min(1,a.roughness+.1),a.metalness=Math.max(0,a.metalness-.05))}getMoonAtPosition(e){const t=e.intersectObjects(this.scene.children,!0);for(const i of t)if(i.object.userData?.isMoon)return i.object.userData.moonData;return null}getMoonPosition(e){const t=this.moonMeshes.find(i=>i.name===`moon-${e}`);return t?t.position.clone():null}dispose(){this.fadeOutTimer&&(clearTimeout(this.fadeOutTimer),this.fadeOutTimer=null),this.initialShowTimer&&(clearTimeout(this.initialShowTimer),this.initialShowTimer=null),this.clearMoons(),this.moonMaterials.forEach(e=>e.dispose()),this.moonMaterials.clear()}startInitialShowTimer(){this.orbitalLinesTargetOpacity=0,this.orbitalLinesCurrentOpacity=0,this.lastInteractionTime=Date.now(),this.initialShowTimer=null}detectCameraMovement(){const e=this.camera.position.clone(),t=new B;this.camera.getWorldDirection(t);const i=e.distanceTo(this.lastCameraPosition)>this.cameraMovementThreshold,a=t.distanceTo(this.lastCameraTarget)>this.cameraMovementThreshold;return i||a?(this.lastCameraPosition.copy(e),this.lastCameraTarget.copy(t),!0):!1}isCameraMoving(){return this.detectCameraMovement()}onCameraMovement(){this.lastInteractionTime=Date.now(),this.fadeOutTimer&&(clearTimeout(this.fadeOutTimer),this.fadeOutTimer=null),this.initialShowTimer&&(clearTimeout(this.initialShowTimer),this.initialShowTimer=null),this.fadeInOrbitalLines(),this.fadeOutTimer=window.setTimeout(()=>{this.fadeOutOrbitalLines(),this.fadeOutTimer=null},this.fadeOutDelay)}fadeInOrbitalLines(){this.orbitalLinesFadeEnabled&&(this.orbitalLinesTargetOpacity=.4)}fadeOutOrbitalLines(){this.orbitalLinesFadeEnabled&&(this.orbitalLinesTargetOpacity=0)}updateOrbitalLinesFade(){if(!this.orbitalLinesFadeEnabled)return;const e=this.orbitalLinesTargetOpacity-this.orbitalLinesCurrentOpacity;Math.abs(e)>.001&&(this.orbitalLinesCurrentOpacity+=e*this.fadeSpeed,this.orbitalLines.forEach(t=>{if(t.name&&t.name.startsWith("moon-orbit-")){const i=this.orbitalLinesCurrentOpacity>.05;t.visible=i,i&&t.traverse(a=>{if(a instanceof K&&a.material instanceof se&&a.name&&a.name.startsWith("moon-orbit-segment-")){const o=a.material;o.opacity=this.orbitalLinesCurrentOpacity,o.needsUpdate=!0}})}}))}enableOrbitalLinesFade(e){this.orbitalLinesFadeEnabled=e,e||(this.orbitalLinesTargetOpacity=.4,this.orbitalLinesCurrentOpacity=.4,this.updateOrbitalLinesFade())}isOrbitalLinesFadeEnabled(){return this.orbitalLinesFadeEnabled}}export{pe as M};
