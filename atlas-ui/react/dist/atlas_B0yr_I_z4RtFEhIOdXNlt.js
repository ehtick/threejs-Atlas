import{r as a,j as n,R as De}from"./atlas_BGo7KNTC_D9rNHeIOnwpB.js";import{W as Me}from"./atlas_CNuRMyx4gH271S-qfMS5_.js";import{O as Te}from"./atlas_D8jfkKBTFAYq28XkcKKTP.js";import{e as S}from"./atlas_CFUh-pg6vQHp8orNhmfCF.js";import{E,c as Le}from"./atlas_Diu5UM48N-pQqm3WthhyP.js";import{g as ke}from"./atlas_BoQX836U_P5ievxCWB0fm.js";import{P as Fe}from"./atlas_C3eT5YO8N8uINAkU4sfC8.js";import{c as Ie}from"./atlas_B3dDuowmy4OBrLh_vWpki.js";import{H as Ne,I as ze,C as pe,J as Be,K as Oe,U as Ue,W as Ge,X as me,Y as We,b as He,u as $e,M as Ve,j as Ye}from"./atlas_CqUMNY_RyRklhCsbOI68T.js";const Ze=({planetData:f,showInConsole:_=!0,showInPage:F=!1})=>{const[V,Y]=a.useState([]),[j,O]=a.useState({});a.useEffect(()=>{if(!f)return;const l=D(f);O(l),Y(A(f)),typeof window<"u"&&(window.__DEBUG_PLANET_DATA=f,window.__DEBUG_PLANET_ANALYSIS=l)},[f,_]);function D(l){const u={hasValidStructure:!1,missingFields:[],dataIntegrity:"unknown",renderingIssues:[],colorConsistency:"unknown"};if(l.planet_info&&l.surface_elements?u.hasValidStructure=!0:(l.planet_info||u.missingFields.push("planet_info"),l.surface_elements||u.missingFields.push("surface_elements")),l.surface_elements?.type==="oceanic"&&(u.oceanicData={hasAbstractLands:!!l.surface_elements.abstract_lands?.length,numGreenPatches:l.surface_elements.green_patches?.length||0,numClouds:l.surface_elements.clouds?.length||0,hasDepths:l.surface_elements.depths?.enabled||!1,baseColorIsBlue:l.planet_info?.base_color==="#0000FF",greenPatchColor:l.surface_elements.green_patches?.[0]?.color,issues:[]},u.oceanicData.numGreenPatches>15&&u.oceanicData.issues.push("Muchos parches verdes pueden ocultar el océano azul"),u.oceanicData.baseColorIsBlue||u.oceanicData.issues.push(`Color base no es azul puro: ${l.planet_info?.base_color}`),u.renderingIssues=u.oceanicData.issues),l.planet_info?.base_color&&l.planet_info?.type){const C={Oceanic:"#0000FF",Rocky:"#808080",Icy:"#ADD8E6",Desert:"#FFD700",Lava:"#FF0000"}[l.planet_info.type];C&&l.planet_info.base_color!==C?u.colorConsistency=`Inconsistente: esperado ${C}, recibido ${l.planet_info.base_color}`:u.colorConsistency="Correcto"}return u}function A(l){const u=[];if(!l.surface_elements?.type)return["No surface type defined"];const T=l.surface_elements.type.toLowerCase();switch(T){case"oceanic":u.push("OceanWavesEffect (PROBLEMA: ignora green_patches de Python)");break;case"rocky":u.push("RockyTerrainEffect");break;case"icy":u.push("IcyTerrainEffect");break;case"gas giant":u.push("GasGiantBandsEffect");break;default:u.push(`Generic effect for type: ${T}`)}return l.atmosphere?.density>0&&u.push("AtmosphericEffect"),l.rings&&u.push("RingSystemEffect"),u}return F?n.jsxs("div",{style:{position:"fixed",top:10,right:10,background:"rgba(0, 0, 0, 0.9)",color:"#00ff00",padding:"10px",borderRadius:"5px",fontFamily:"monospace",fontSize:"12px",maxWidth:"400px",maxHeight:"600px",overflow:"auto",zIndex:1e4,border:"1px solid #00ff00"},children:[n.jsxs("h3",{style:{margin:"0 0 10px 0",color:"#00ff00"},children:["🔍 Planet Debug: ",f.planet_info?.name]}),n.jsxs("div",{style:{marginBottom:"10px"},children:[n.jsx("strong",{children:"Type:"})," ",f.planet_info?.type,n.jsx("br",{}),n.jsx("strong",{children:"Base Color:"})," ",f.planet_info?.base_color,n.jsx("br",{}),n.jsx("strong",{children:"Radius:"})," ",f.planet_info?.radius]}),f.surface_elements?.type==="oceanic"&&n.jsxs("div",{style:{marginBottom:"10px",borderTop:"1px solid #00ff00",paddingTop:"10px"},children:[n.jsx("strong",{children:"🌊 Oceanic Data:"}),n.jsx("br",{}),n.jsxs("span",{style:{color:j.oceanicData?.baseColorIsBlue?"#00ff00":"#ff0000"},children:["Base Color: ",j.oceanicData?.baseColorIsBlue?"✓ Blue":"✗ Not Blue"]}),n.jsx("br",{}),"Green Patches: ",j.oceanicData?.numGreenPatches,n.jsx("br",{}),"Clouds: ",j.oceanicData?.numClouds,n.jsx("br",{}),"Has Depths: ",j.oceanicData?.hasDepths?"Yes":"No",n.jsx("br",{}),j.oceanicData?.issues?.length>0&&n.jsxs("div",{style:{color:"#ffaa00",marginTop:"5px"},children:["⚠️ Issues:",n.jsx("br",{}),j.oceanicData.issues.map((l,u)=>n.jsxs("div",{children:["- ",l]},u))]})]}),n.jsxs("div",{style:{borderTop:"1px solid #00ff00",paddingTop:"10px"},children:[n.jsx("strong",{children:"🎨 Effects Applied:"}),n.jsx("br",{}),V.map((l,u)=>n.jsxs("div",{style:{color:l.includes("PROBLEMA")?"#ff0000":"#00ff00"},children:["- ",l]},u))]}),n.jsx("button",{style:{marginTop:"10px",background:"#00ff00",color:"#000",border:"none",padding:"5px 10px",cursor:"pointer",borderRadius:"3px"},children:"Log to Console"})]}):null};function Xe(f){a.useEffect(()=>{if(f&&f.surface_elements?.type==="oceanic"){f.surface_elements.green_patches?.length>0;const _=f.planet_info?.base_color;_!=="#0000FF"&&console.warn("⚠️ Planeta oceánico sin color azul base!",_)}},[f])}const B=2.5,ge=()=>{const f=45*Math.PI/180;return B/(Math.tan(f/2)*.5)},Je=({planetName:f,containerClassName:_="",width:F=800,height:V=600,autoRotate:Y=!0,enableControls:j=!0,showDebugInfo:O=!1,planetData:D,cosmicOriginTime:A,initialAngleRotation:l,onDataLoaded:u,onEffectsCreated:T,onError:C})=>{const x=a.useRef(null),d=a.useRef(null),y=a.useRef(null),R=a.useRef(null),p=a.useRef(null),I=a.useRef(null),he=a.useRef(new Ne),Z=a.useRef(null),X=a.useRef(0),v=a.useRef(null),[ae,U]=a.useState(!0),[oe,L]=a.useState(null),[m,ie]=a.useState(null),[ce,J]=a.useState([]),[G,q]=a.useState({activeEffects:0,enabledEffects:0,frameRate:0,renderTime:0}),N=a.useRef([]),K=a.useRef(0),W=a.useRef(null),w=a.useRef(null),b=a.useRef(null),_e=Math.floor(Date.now()/1e3),[be,Ke]=a.useState(0),xe=A||m?.timing?.cosmic_origin_time||Date.now()/1e3-3600,ye=_e-xe+be;X.current=ye;const Q=a.useCallback(()=>{if(!x.current||!y.current||!R.current)return;const e=x.current,r=e.clientWidth||400,t=e.clientHeight||400;y.current.setSize(r,t),b.current&&b.current.setSize(r,t),R.current.aspect=r/t,R.current.updateProjectionMatrix()},[]),le=async e=>{if(!(!p.current||!d.current||!w.current)){E.log("Applying modular effects from API data",{planet:e.planet_info.name,type:e.planet_info.type});try{te();const r=ke(e);w.current.updateBaseColor(r);const t=S.createEffectsFromPythonPlanetData(e,B,p.current,d.current,w.current),s=e.planet_info?.type||e.surface_elements?.planet_type||e.planet_type;console.log("DEBUG: Planet type detected:",s,"Full planet data:",e);const c=new URLSearchParams(window.location.search).get("toxic")==="true",o=s==="toxic"||s==="Toxic"||c;if(console.log("DEBUG: Should apply toxic effects:",o,"Force toxic:",c),o&&d.current&&R.current&&y.current)try{const g=Ie(d.current,R.current,y.current,B,{planet_type:"toxic",toxic_intensity:.8,atmosphere_thickness:.6},e.seeds?.planet_seed);if(g){b.current=g;const M={id:`effect_toxic_postprocessing_${Date.now()}`,type:"toxic_post_processing",effect:{dispose:()=>g.dispose(),update:k=>g.update(k),updateUniforms:k=>g.update(k),addToScene:()=>{},apply:()=>{}},priority:100,enabled:!0,name:"Toxic Post-Processing (Bloom + Godrays + Chromatic Aberration)"};S.effects.set(M.id,M),t.push(M),E.log("Created toxic post-processing effects")}}catch(g){E.error("Error creating toxic post-processing",g)}else b.current&&(b.current.dispose(),b.current=null);console.log(`Planet: ${e.planet_info?.name}, Effects:`,t.map(g=>g.type),b.current?"with toxic post-processing":"no post-processing"),J(t),N.current=t,T&&T(t),E.log(`Successfully applied ${t.length} modular effects`),re()}catch(r){E.error("Error applying modular effects",r),H()}}},we=a.useCallback(()=>{if(!x.current)return!1;try{for(;x.current.firstChild;)x.current.removeChild(x.current.firstChild);d.current=null,R.current=null,y.current=null,p.current=null,h.current=null;const e=x.current,r=e.clientWidth||F||400,t=e.clientHeight||V||400,s=new ze;s.background=new pe(1297),d.current=s;const i=new Be(45,r/t,.1,1e4),c=ge();i.position.set(0,0,c),i.lookAt(0,0,0),R.current=i;const o=new Me({antialias:!0,alpha:!0,powerPreference:"high-performance"});return o.setSize(r,t),o.setPixelRatio(Math.min(window.devicePixelRatio,2)),o.shadowMap.enabled=!0,o.shadowMap.type=Oe,o.toneMapping=Ue,o.toneMappingExposure=1.2,o.outputColorSpace=Ge,x.current.appendChild(o.domElement),y.current=o,Re(s,null),ve(s),j&&Se(i,o.domElement),!0}catch(e){return console.error("Error initializing Three.js:",e),!1}},[m,D,A]),Pe=e=>{if(!e)return 0;const r=e.sun_angle||e.lighting?.sun_angle;if(r!==void 0)return r;const t=e.timing?.current_orbital_angle||e.timing?.orbital_angle;return t??0},P=a.useRef(null),ee=a.useRef(null),z=a.useRef(null),h=a.useRef(null),Ee=e=>{e.castShadow=!0,e.shadow.mapSize.width=2048,e.shadow.mapSize.height=2048,e.shadow.camera.near=.5,e.shadow.camera.far=50,e.shadow.camera.left=-10,e.shadow.camera.right=10,e.shadow.camera.top=10,e.shadow.camera.bottom=-10},ue=e=>{if(!P.current||!d.current)return;const r=Pe(e),t=10,s=r+Math.PI,i=Math.sin(r)*5,c=t*Math.cos(s),o=i,g=t*Math.sin(s);P.current.position.set(c,o,g),P.current.target.position.set(0,0,0),d.current.children.includes(P.current.target)||d.current.add(P.current.target),ee.current&&ee.current.position.set(-c*.5,0,-g*.5),w.current&&P.current&&w.current.updateFromThreeLight(P.current),P.current&&S.updateLightForAllEffects(P.current)},Re=(e,r)=>{{const t=new me(16777215,2);t.position.set(-10,5,10),t.target.position.set(0,0,0),t.castShadow=!0,Ee(t),e.add(t),e.add(t.target),P.current=t;const s=new me(16777215,.05);s.position.set(8,-3,-5),e.add(s),ee.current=s;const i=new We(2236996,.1);e.add(i),setTimeout(()=>{w.current&&t&&w.current.updateFromThreeLight(t),t&&S.updateLightForAllEffects(t)},50);return}},ve=e=>{const r=new He(B,128,64),t=new $e({color:8421504}),s=new Ve(r,t);s.castShadow=!0,s.receiveShadow=!0,s.position.set(0,0,0),e.add(s),p.current=s;const i=new pe(8421504);w.current=new Fe(s,i),w.current.addToScene(e)},Se=(e,r)=>{const t=new Te(e,r);t.enableDamping=!0,t.dampingFactor=.05;const s=ge();t.minDistance=s*.5,t.maxDistance=s*2,t.autoRotate=Y,t.autoRotateSpeed=.5,t.enablePan=!0,t.enableZoom=!0,t.target.set(0,0,0),I.current=t},je=a.useCallback(async()=>{if(!window.isLoadingPlanetData){window.isLoadingPlanetData=!0;try{U(!0),L(null),E.log("Loading planet data from API",{planetName:f});const r=await fetch("/api/planet/rendering-data");if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);const t=await r.json();if(!t.success)throw new Error(t.error||"Failed to fetch planet data");const s=t.planet_data,i=t.timing,c=t.rendering_data,o={planet_info:c?.planet_info||{name:s.name,type:s.planet_type,base_color:"#808080",radius:s.diameter/15e3,orbital_radius:s.orbital_radius},surface_elements:c?.surface_elements,atmosphere:c?.atmosphere,rings:c?.rings,effects_3d:c?.effects_3d,shader_uniforms:c?.shader_uniforms,universal_actions:c?.universal_actions,timing:{cosmic_origin_time:i.cosmic_origin_time,current_time_seconds:i.current_time_seconds,elapsed_time:i.elapsed_time,initial_orbital_angle:s.initial_orbital_angle,current_orbital_angle:s.current_orbital_angle,max_orbital_radius:i.max_orbital_radius,system_max_orbital_radius:s.system_max_orbital_radius},original_planet_data:s,seeds:c?.seeds};return ie(o),v.current=o,E.log("API data loaded successfully",{planet:o.planet_info.name,type:o.planet_info.type,hasEffects:!!o.surface_elements,fullRenderingData:c}),u&&u(o),o}catch(e){const r=e instanceof Error?e.message:"Unknown error";return L(r),C&&C(r),null}finally{U(!1),window.isLoadingPlanetData=!1}}},[f,u,C]);a.useCallback(async()=>{if(!window.isLoadingPlanetData){window.isLoadingPlanetData=!0;try{U(!0),L(null),E.log("Loading planet data from API",{planetName:f});const r=await fetch("/api/planet/rendering-data");if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);const t=await r.json();if(!t.success)throw new Error(t.error||"Failed to fetch planet data");const s=t.planet_data,i=t.timing,c=t.rendering_data,o={planet_info:c?.planet_info||{name:s.name,type:s.planet_type,base_color:"#808080",radius:s.diameter/15e3,orbital_radius:s.orbital_radius},surface_elements:c?.surface_elements,atmosphere:c?.atmosphere,rings:c?.rings,effects_3d:c?.effects_3d,shader_uniforms:c?.shader_uniforms,universal_actions:c?.universal_actions,timing:{cosmic_origin_time:i.cosmic_origin_time,current_time_seconds:i.current_time_seconds,elapsed_time:i.elapsed_time,initial_orbital_angle:s.initial_orbital_angle,current_orbital_angle:s.current_orbital_angle,max_orbital_radius:i.max_orbital_radius,system_max_orbital_radius:s.system_max_orbital_radius},original_planet_data:s,seeds:c?.seeds};ie(o),v.current=o,E.log("API data loaded successfully",{planet:o.planet_info.name,type:o.planet_info.type,hasEffects:!!o.surface_elements,fullRenderingData:c}),ue(o),h.current&&d.current&&(d.current.remove(h.current),h.current.geometry.dispose(),h.current.material.dispose(),h.current=null),await le(o),u&&u(o)}catch(e){const r=e instanceof Error?e.message:"Unknown error";L(r),C&&C(r),H()}finally{U(!1),window.isLoadingPlanetData=!1}}},[f,D,A,l]);const fe=a.useCallback(()=>{if(!m||!p.current)return;const e=D?.orbital_period_seconds||365.25*24*3600,r=2*Math.PI/e,t=m.timing?.initial_orbital_angle||0,s=Date.now()/1e3,i=0,c=A||m.timing?.cosmic_origin_time||Date.now()/1e3-3600,o=s-c+i,g=(t+o*r)%(2*Math.PI),M=m.timing?.max_orbital_radius||100,$=20+m.planet_info?.orbital_radius/M*80,ne=$,se=$*Math.cos(g),Ae=ne*Math.sin(g);p.current.position.x=se,p.current.position.z=Ae,p.current.position.y=0},[m,D,A]),Ce=a.useCallback(async e=>{const r=e||m;if(r&&d.current)try{ue(r),h.current&&d.current&&(d.current.remove(h.current),h.current.geometry.dispose(),h.current.material.dispose(),h.current=null),await le(r)}catch(t){E.error("Error in applyProceduralShadersFromAPI:",t),H()}},[m]),H=()=>{if(!(!d.current||!p.current)){E.warn("Applying fallback effects for planet type:",D?.planet_type);try{te(),p.current.material instanceof Ye&&p.current.material.color.setHex(6710886);try{const e=Le("generic"),r=S.createEffectsFromList(e,B,p.current);r.forEach(t=>{t.effect.addToScene&&d.current&&p.current&&t.effect.addToScene(d.current,p.current.position)}),N.current=r,J(r)}catch(e){console.warn("Could not create fallback effects, using basic material only:",e)}re()}catch(e){E.error("Error applying fallback effects",e)}}},te=()=>{S.clearAllEffects(),N.current.forEach(e=>{try{e.effect.dispose&&e.effect.dispose()}catch{}}),b.current&&(b.current.dispose(),b.current=null),N.current=[],J([])},de=a.useCallback(()=>{Z.current=requestAnimationFrame(de);const e=performance.now(),r=he.current.getDelta();I.current&&I.current.update();try{S.updateAllEffects(r,p.current?.rotation.y,R.current||void 0)}catch{}if(p.current&&v.current){v.current.planet_info?.name;const i=v.current.original_planet_data,c=i?.orbital_period_seconds||365.25*24*3600,o=v.current.timing?.initial_orbital_angle||0;A||v.current.timing?.cosmic_origin_time||Date.now()/1e3-3600;const g=i?.axial_tilt||0,M=2*Math.PI/c;(o+X.current*M)%(2*Math.PI);const k=v.current.timing?.max_orbital_radius||v.current.timing?.system_max_orbital_radius,$=i?.orbital_radius;if(!k||!$)return;i?.eccentricity_factor,p.current.position.set(0,0,0);const ne=i?.rotation_period_seconds||86400,se=2*Math.PI/ne;p.current.rotation.y=X.current*se%(2*Math.PI),p.current.rotation.z=g*(Math.PI/180)}N.current.forEach(i=>{i.effect.updateUniforms&&i.effect.updateUniforms(r)});const s=Array.from(S.effects.values()).find(i=>i.type==="toxic_post_processing")?.enabled||!1;if(b.current&&s&&(b.current.update(r),P.current&&b.current.updateLightPosition(P.current.position,R.current)),y.current&&d.current&&R.current){const i=performance.now();b.current&&s?b.current.render():y.current.render(d.current,R.current);const c=performance.now()-i;if(e-K.current>5e3){const o=1e3/(e-K.current);re(),q(g=>({...g,frameRate:Math.round(o),renderTime:Math.round(c*100)/100})),K.current=e}}},[]),re=a.useCallback(()=>{const e=S.getStats();q(r=>({...r,activeEffects:e.activeEffects,enabledEffects:e.enabledEffects}))},[]);return a.useEffect(()=>{let e=!0;return window.tonnirLoggedInPlanet=!1,window.orbitChecked=!1,window.debugOrbitRadius=null,window.debugSystemMaxRadius=null,window.planetNameLogged=!1,window.timingDataLogged=!1,window.isLoadingPlanetData=!1,window.orbitalAngleSourceLogged=!1,window.orbitalAngleDebugged=!1,window.positionDebugged=!1,window.animationLoopDebugged=!1,(async()=>{try{if(!e)return;const t=await je();if(!e)return;if(!we()){e&&L("Failed to initialize 3D renderer");return}if(!e||(de(),x.current&&"ResizeObserver"in window&&(W.current=new ResizeObserver(Q),W.current.observe(x.current)),window.addEventListener("resize",Q),!e))return;t?await Ce(t):H()}catch(t){e&&L(t instanceof Error?t.message:"Unknown initialization error")}})(),()=>{if(e=!1,v.current=null,Z.current&&cancelAnimationFrame(Z.current),W.current&&W.current.disconnect(),window.removeEventListener("resize",Q),te(),w.current&&(w.current.dispose(),w.current=null),I.current&&I.current.dispose(),z.current&&d.current&&(d.current.remove(z.current),z.current.geometry.dispose(),z.current.material.dispose(),z.current=null),h.current&&d.current&&(d.current.remove(h.current),h.current.geometry.dispose(),h.current.material.dispose(),h.current=null),y.current&&x.current)try{x.current.contains(y.current.domElement)&&x.current.removeChild(y.current.domElement),y.current.dispose()}catch{}}},[]),a.useEffect(()=>{const e=setInterval(()=>{const r=S.getStats();q(t=>({...t,activeEffects:r.activeEffects,enabledEffects:r.enabledEffects}))},1e4);return()=>clearInterval(e)},[]),a.useEffect(()=>{m&&d.current&&p.current&&fe()},[m,fe]),Xe(m),n.jsxs("div",{className:`relative ${_}`,children:[O&&m&&n.jsx(Ze,{planetData:m,showInPage:!0,showInConsole:!0}),n.jsx("div",{ref:x,className:"w-full h-full",style:{minHeight:"300px",aspectRatio:"1"}}),ae&&n.jsx("div",{className:"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50",children:n.jsxs("div",{className:"text-white text-center",children:[n.jsx("div",{className:"animate-spin rounded-full h-8 w-8 border-b-2 border-white mx-auto mb-2"}),n.jsx("div",{children:"Loading planet..."})]})}),oe&&n.jsxs("div",{className:"absolute top-0 left-0 right-0 p-2 bg-red-500 text-white text-sm",children:[n.jsx("strong",{children:"Error:"})," ",oe]}),m&&!ae&&n.jsxs("div",{className:"absolute bottom-0 left-0 p-4 text-white bg-black bg-opacity-50 max-w-xs",children:[n.jsx("h3",{className:"text-lg font-bold",children:m.planet_info.name}),n.jsx("p",{className:"text-sm opacity-80",children:m.planet_info.type}),n.jsxs("p",{className:"text-xs mt-1 opacity-60",children:[ce.length," effects active"]}),m.surface_elements?.description&&n.jsx("p",{className:"text-xs mt-2 opacity-60",children:m.surface_elements.description.appearance})]}),O&&n.jsxs("div",{className:"absolute top-0 right-0 p-4 text-white bg-black bg-opacity-70 text-xs font-mono",children:[n.jsx("h4",{className:"font-bold mb-2",children:"Debug Info"}),n.jsxs("div",{children:["Frame Rate: ",G.frameRate," FPS"]}),n.jsxs("div",{children:["Render Time: ",G.renderTime,"ms"]}),n.jsxs("div",{children:["Active Effects: ",G.activeEffects]}),n.jsxs("div",{children:["Enabled Effects: ",G.enabledEffects]}),n.jsxs("div",{className:"mt-2",children:[n.jsx("div",{className:"font-semibold",children:"Effects:"}),ce.map(e=>n.jsxs("div",{className:"ml-2",children:[e.type," (",e.enabled?"ON":"OFF",")"]},e.id))]})]})]})};class qe extends De.Component{constructor(_){super(_),this.state={hasError:!1,error:null}}static getDerivedStateFromError(_){return console.error("🚨 ErrorBoundary caught error:",_),console.error("🚨 Error stack:",_.stack),{hasError:!0,error:_.message}}componentDidCatch(_,F){console.error("🚨 componentDidCatch:",_,F)}render(){return this.state.hasError?n.jsx("div",{className:"flex items-center justify-center w-full h-full bg-gray-900/50 rounded",children:n.jsxs("div",{className:"text-center p-4",children:[n.jsx("div",{className:"text-red-400 text-sm mb-2",children:"3D Renderer Error"}),n.jsx("div",{className:"text-xs text-gray-400",children:this.state.error})]})}):this.props.children}}const ct=f=>n.jsx(qe,{children:n.jsx(Je,{...f})});export{ct as M};
